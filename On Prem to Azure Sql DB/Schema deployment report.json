{
  "SchemaMigrationStartedOn": "2023-09-26T06:40:23.4990904+00:00",
  "SchemaMigrationEndedOn": "2023-09-26T06:51:54.9816984+00:00",
  "Name": "OnpremToASD_AdvW",
  "Status": "SchemaMigrationCompletedWithError",
  "Databases": [
    {
      "TargetDatabase": {
        "TargetDatabase": null,
        "SchemaObjects": [],
        "DeploymentResults": [],
        "Name": "AdventureWorks2012",
        "ServerVersion": "12.0.2000.8",
        "ServerEdition": "SQL Azure",
        "CompatibilityLevel": "CompatLevel150",
        "ServerName": "sqlmigrationviplav"
      },
      "SchemaObjects": [
        {
          "ObjectName": "ddlDatabaseTriggerLog",
          "SchemaName": "",
          "ObjectType": "DatabaseDdlTrigger",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "AW2008FullTextCatalog",
          "SchemaName": "",
          "ObjectType": "FullTextCatalog",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "HumanResources",
          "SchemaName": "",
          "ObjectType": "Schema",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "Person",
          "SchemaName": "",
          "ObjectType": "Schema",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "Production",
          "SchemaName": "",
          "ObjectType": "Schema",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "Purchasing",
          "SchemaName": "",
          "ObjectType": "Schema",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "Sales",
          "SchemaName": "",
          "ObjectType": "Schema",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "uspGetBillOfMaterials",
          "SchemaName": "dbo",
          "ObjectType": "StoredProcedure",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "uspGetEmployeeManagers",
          "SchemaName": "dbo",
          "ObjectType": "StoredProcedure",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "uspGetManagerEmployees",
          "SchemaName": "dbo",
          "ObjectType": "StoredProcedure",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "uspGetWhereUsedProductID",
          "SchemaName": "dbo",
          "ObjectType": "StoredProcedure",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "uspUpdateEmployeeHireInfo",
          "SchemaName": "HumanResources",
          "ObjectType": "StoredProcedure",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "uspUpdateEmployeeLogin",
          "SchemaName": "HumanResources",
          "ObjectType": "StoredProcedure",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "uspPrintError",
          "SchemaName": "dbo",
          "ObjectType": "StoredProcedure",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "uspUpdateEmployeePersonalInfo",
          "SchemaName": "HumanResources",
          "ObjectType": "StoredProcedure",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "uspLogError",
          "SchemaName": "dbo",
          "ObjectType": "StoredProcedure",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "uspSearchCandidateResumes",
          "SchemaName": "dbo",
          "ObjectType": "StoredProcedure",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ScrapReason",
          "SchemaName": "Production",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "Shift",
          "SchemaName": "HumanResources",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ProductCategory",
          "SchemaName": "Production",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ShipMethod",
          "SchemaName": "Purchasing",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ProductCostHistory",
          "SchemaName": "Production",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ProductDescription",
          "SchemaName": "Production",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ShoppingCartItem",
          "SchemaName": "Sales",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ProductDocument",
          "SchemaName": "Production",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "DatabaseLog",
          "SchemaName": "dbo",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ProductInventory",
          "SchemaName": "Production",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "SpecialOffer",
          "SchemaName": "Sales",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ErrorLog",
          "SchemaName": "dbo",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ProductListPriceHistory",
          "SchemaName": "Production",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "Address",
          "SchemaName": "Person",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "SpecialOfferProduct",
          "SchemaName": "Sales",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ProductModel",
          "SchemaName": "Production",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "AddressType",
          "SchemaName": "Person",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "StateProvince",
          "SchemaName": "Person",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ProductModelIllustration",
          "SchemaName": "Production",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "AWBuildVersion",
          "SchemaName": "dbo",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ProductModelProductDescriptionCulture",
          "SchemaName": "Production",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "BillOfMaterials",
          "SchemaName": "Production",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "Store",
          "SchemaName": "Sales",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ProductPhoto",
          "SchemaName": "Production",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ProductProductPhoto",
          "SchemaName": "Production",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "TransactionHistory",
          "SchemaName": "Production",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ProductReview",
          "SchemaName": "Production",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "BusinessEntity",
          "SchemaName": "Person",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "TransactionHistoryArchive",
          "SchemaName": "Production",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ProductSubcategory",
          "SchemaName": "Production",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "BusinessEntityAddress",
          "SchemaName": "Person",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ProductVendor",
          "SchemaName": "Purchasing",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "BusinessEntityContact",
          "SchemaName": "Person",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "UnitMeasure",
          "SchemaName": "Production",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "Vendor",
          "SchemaName": "Purchasing",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ContactType",
          "SchemaName": "Person",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "CountryRegionCurrency",
          "SchemaName": "Sales",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "CountryRegion",
          "SchemaName": "Person",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "WorkOrder",
          "SchemaName": "Production",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "PurchaseOrderDetail",
          "SchemaName": "Purchasing",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "CreditCard",
          "SchemaName": "Sales",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "Culture",
          "SchemaName": "Production",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "WorkOrderRouting",
          "SchemaName": "Production",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "Currency",
          "SchemaName": "Sales",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "PurchaseOrderHeader",
          "SchemaName": "Purchasing",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "CurrencyRate",
          "SchemaName": "Sales",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "Customer",
          "SchemaName": "Sales",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "Department",
          "SchemaName": "HumanResources",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "Document",
          "SchemaName": "Production",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "SalesOrderDetail",
          "SchemaName": "Sales",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "EmailAddress",
          "SchemaName": "Person",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "Employee",
          "SchemaName": "HumanResources",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "SalesOrderHeader",
          "SchemaName": "Sales",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "EmployeeDepartmentHistory",
          "SchemaName": "HumanResources",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "EmployeePayHistory",
          "SchemaName": "HumanResources",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "SalesOrderHeaderSalesReason",
          "SchemaName": "Sales",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "SalesPerson",
          "SchemaName": "Sales",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "Illustration",
          "SchemaName": "Production",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "JobCandidate",
          "SchemaName": "HumanResources",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "Location",
          "SchemaName": "Production",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "Password",
          "SchemaName": "Person",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "SalesPersonQuotaHistory",
          "SchemaName": "Sales",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "Person",
          "SchemaName": "Person",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "SalesReason",
          "SchemaName": "Sales",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "SalesTaxRate",
          "SchemaName": "Sales",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "PersonCreditCard",
          "SchemaName": "Sales",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "PersonPhone",
          "SchemaName": "Person",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "SalesTerritory",
          "SchemaName": "Sales",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "PhoneNumberType",
          "SchemaName": "Person",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "Product",
          "SchemaName": "Production",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "SalesTerritoryHistory",
          "SchemaName": "Sales",
          "ObjectType": "Table",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "AccountNumber",
          "SchemaName": "dbo",
          "ObjectType": "UserDefinedDataType",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "Flag",
          "SchemaName": "dbo",
          "ObjectType": "UserDefinedDataType",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "NameStyle",
          "SchemaName": "dbo",
          "ObjectType": "UserDefinedDataType",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "Name",
          "SchemaName": "dbo",
          "ObjectType": "UserDefinedDataType",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "OrderNumber",
          "SchemaName": "dbo",
          "ObjectType": "UserDefinedDataType",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "Phone",
          "SchemaName": "dbo",
          "ObjectType": "UserDefinedDataType",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ufnGetAccountingStartDate",
          "SchemaName": "dbo",
          "ObjectType": "UserDefinedFunction",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ufnGetAccountingEndDate",
          "SchemaName": "dbo",
          "ObjectType": "UserDefinedFunction",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ufnGetContactInformation",
          "SchemaName": "dbo",
          "ObjectType": "UserDefinedFunction",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ufnGetProductDealerPrice",
          "SchemaName": "dbo",
          "ObjectType": "UserDefinedFunction",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ufnGetProductListPrice",
          "SchemaName": "dbo",
          "ObjectType": "UserDefinedFunction",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ufnGetProductStandardCost",
          "SchemaName": "dbo",
          "ObjectType": "UserDefinedFunction",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ufnGetStock",
          "SchemaName": "dbo",
          "ObjectType": "UserDefinedFunction",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ufnGetDocumentStatusText",
          "SchemaName": "dbo",
          "ObjectType": "UserDefinedFunction",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ufnGetPurchaseOrderStatusText",
          "SchemaName": "dbo",
          "ObjectType": "UserDefinedFunction",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ufnGetSalesOrderStatusText",
          "SchemaName": "dbo",
          "ObjectType": "UserDefinedFunction",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ufnLeadingZeros",
          "SchemaName": "dbo",
          "ObjectType": "UserDefinedFunction",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "viplavuser",
          "SchemaName": "",
          "ObjectType": "User",
          "Eligibility": {
            "IsEligibleForMigration": false,
            "Explanation": "User with the same name or SID already exists in the target database."
          },
          "IsSelectedForMigration": false,
          "Recommendations": []
        },
        {
          "ObjectName": "vStoreWithContacts",
          "SchemaName": "Sales",
          "ObjectType": "View",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "vStoreWithAddresses",
          "SchemaName": "Sales",
          "ObjectType": "View",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "vVendorWithContacts",
          "SchemaName": "Purchasing",
          "ObjectType": "View",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "vVendorWithAddresses",
          "SchemaName": "Purchasing",
          "ObjectType": "View",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "vAdditionalContactInfo",
          "SchemaName": "Person",
          "ObjectType": "View",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "vEmployee",
          "SchemaName": "HumanResources",
          "ObjectType": "View",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "vEmployeeDepartment",
          "SchemaName": "HumanResources",
          "ObjectType": "View",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "vEmployeeDepartmentHistory",
          "SchemaName": "HumanResources",
          "ObjectType": "View",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "vIndividualCustomer",
          "SchemaName": "Sales",
          "ObjectType": "View",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "vPersonDemographics",
          "SchemaName": "Sales",
          "ObjectType": "View",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "vJobCandidate",
          "SchemaName": "HumanResources",
          "ObjectType": "View",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "vJobCandidateEmployment",
          "SchemaName": "HumanResources",
          "ObjectType": "View",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "vJobCandidateEducation",
          "SchemaName": "HumanResources",
          "ObjectType": "View",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "vProductAndDescription",
          "SchemaName": "Production",
          "ObjectType": "View",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "vProductModelCatalogDescription",
          "SchemaName": "Production",
          "ObjectType": "View",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "vProductModelInstructions",
          "SchemaName": "Production",
          "ObjectType": "View",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "vSalesPerson",
          "SchemaName": "Sales",
          "ObjectType": "View",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "vSalesPersonSalesByFiscalYears",
          "SchemaName": "Sales",
          "ObjectType": "View",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "vStateProvinceCountryRegion",
          "SchemaName": "Person",
          "ObjectType": "View",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "vStoreWithDemographics",
          "SchemaName": "Sales",
          "ObjectType": "View",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "AdditionalContactInfoSchemaCollection",
          "SchemaName": "",
          "ObjectType": "XmlSchemaCollection",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "HRResumeSchemaCollection",
          "SchemaName": "",
          "ObjectType": "XmlSchemaCollection",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "IndividualSurveySchemaCollection",
          "SchemaName": "",
          "ObjectType": "XmlSchemaCollection",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ManuInstructionsSchemaCollection",
          "SchemaName": "",
          "ObjectType": "XmlSchemaCollection",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "ProductDescriptionSchemaCollection",
          "SchemaName": "",
          "ObjectType": "XmlSchemaCollection",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        },
        {
          "ObjectName": "StoreSurveySchemaCollection",
          "SchemaName": "",
          "ObjectType": "XmlSchemaCollection",
          "Eligibility": {
            "IsEligibleForMigration": true,
            "Explanation": "OK"
          },
          "IsSelectedForMigration": true,
          "Recommendations": []
        }
      ],
      "DeploymentResults": [
        {
          "CommandText": "/******** DMA Schema Migration Deployment Script      Script Date: 9/26/2023 12:10:01 PM ********/\r\n\r\n/****** Object:  FullTextCatalog [AW2008FullTextCatalog]    Script Date: 9/26/2023 12:09:55 PM ******/\r\nIF NOT EXISTS (SELECT * FROM sysfulltextcatalogs ftc WHERE ftc.name = N'AW2008FullTextCatalog')\r\nCREATE FULLTEXT CATALOG [AW2008FullTextCatalog] AS DEFAULT",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Schema [HumanResources]    Script Date: 9/26/2023 12:09:55 PM ******/\r\nIF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = N'HumanResources')\r\nEXEC sys.sp_executesql N'CREATE SCHEMA [HumanResources]'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', NULL,NULL, NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Contains objects related to employees and departments.' , @level0type=N'SCHEMA',@level0name=N'HumanResources'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Schema [Person]    Script Date: 9/26/2023 12:09:55 PM ******/\r\nIF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = N'Person')\r\nEXEC sys.sp_executesql N'CREATE SCHEMA [Person]'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', NULL,NULL, NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Contains objects related to names and addresses of customers, vendors, and employees' , @level0type=N'SCHEMA',@level0name=N'Person'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Schema [Production]    Script Date: 9/26/2023 12:09:55 PM ******/\r\nIF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = N'Production')\r\nEXEC sys.sp_executesql N'CREATE SCHEMA [Production]'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', NULL,NULL, NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Contains objects related to products, inventory, and manufacturing.' , @level0type=N'SCHEMA',@level0name=N'Production'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Schema [Purchasing]    Script Date: 9/26/2023 12:09:55 PM ******/\r\nIF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = N'Purchasing')\r\nEXEC sys.sp_executesql N'CREATE SCHEMA [Purchasing]'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', NULL,NULL, NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Contains objects related to vendors and purchase orders.' , @level0type=N'SCHEMA',@level0name=N'Purchasing'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Schema [Sales]    Script Date: 9/26/2023 12:09:55 PM ******/\r\nIF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = N'Sales')\r\nEXEC sys.sp_executesql N'CREATE SCHEMA [Sales]'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', NULL,NULL, NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Contains objects related to customers, sales orders, and sales territories.' , @level0type=N'SCHEMA',@level0name=N'Sales'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [dbo].[DatabaseLog]    Script Date: 9/26/2023 12:09:55 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DatabaseLog]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [dbo].[DatabaseLog](\r\n\t[DatabaseLogID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[PostTime] [datetime] NOT NULL,\r\n\t[DatabaseUser] [sysname] COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[Event] [sysname] COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[Schema] [sysname] COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n\t[Object] [sysname] COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n\t[TSQL] [nvarchar](max) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[XmlEvent] [xml] NOT NULL,\r\n CONSTRAINT [PK_DatabaseLog_DatabaseLogID] PRIMARY KEY NONCLUSTERED \r\n(\r\n\t[DatabaseLogID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'DatabaseLog', N'COLUMN',N'DatabaseLogID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for DatabaseLog records.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'DatabaseLog', @level2type=N'COLUMN',@level2name=N'DatabaseLogID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'DatabaseLog', N'COLUMN',N'PostTime'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date and time the DDL change occurred.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'DatabaseLog', @level2type=N'COLUMN',@level2name=N'PostTime'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'DatabaseLog', N'COLUMN',N'DatabaseUser'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The user who implemented the DDL change.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'DatabaseLog', @level2type=N'COLUMN',@level2name=N'DatabaseUser'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'DatabaseLog', N'COLUMN',N'Event'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of DDL statement that was executed.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'DatabaseLog', @level2type=N'COLUMN',@level2name=N'Event'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'DatabaseLog', N'COLUMN',N'Schema'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The schema to which the changed object belongs.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'DatabaseLog', @level2type=N'COLUMN',@level2name=N'Schema'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'DatabaseLog', N'COLUMN',N'Object'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The object that was changed by the DDL statment.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'DatabaseLog', @level2type=N'COLUMN',@level2name=N'Object'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'DatabaseLog', N'COLUMN',N'TSQL'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The exact Transact-SQL statement that was executed.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'DatabaseLog', @level2type=N'COLUMN',@level2name=N'TSQL'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'DatabaseLog', N'COLUMN',N'XmlEvent'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The raw XML data generated by database trigger.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'DatabaseLog', @level2type=N'COLUMN',@level2name=N'XmlEvent'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'DatabaseLog', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Audit table tracking all DDL changes made to the AdventureWorks database. Data is captured by the database trigger ddlDatabaseTriggerLog.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'DatabaseLog'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  DatabaseDdlTrigger [ddlDatabaseTriggerLog]    Script Date: 9/26/2023 12:09:56 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.triggers WHERE parent_class_desc = 'DATABASE' AND name = N'ddlDatabaseTriggerLog')\r\nEXECUTE dbo.sp_executesql N'\r\n\r\nCREATE TRIGGER [ddlDatabaseTriggerLog] ON DATABASE \r\nFOR DDL_DATABASE_LEVEL_EVENTS AS \r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    DECLARE @data XML;\r\n    DECLARE @schema sysname;\r\n    DECLARE @object sysname;\r\n    DECLARE @eventType sysname;\r\n\r\n    SET @data = EVENTDATA();\r\n    SET @eventType = @data.value(''(/EVENT_INSTANCE/EventType)[1]'', ''sysname'');\r\n    SET @schema = @data.value(''(/EVENT_INSTANCE/SchemaName)[1]'', ''sysname'');\r\n    SET @object = @data.value(''(/EVENT_INSTANCE/ObjectName)[1]'', ''sysname'') \r\n\r\n    IF @object IS NOT NULL\r\n        PRINT ''  '' + @eventType + '' - '' + @schema + ''.'' + @object;\r\n    ELSE\r\n        PRINT ''  '' + @eventType + '' - '' + @schema;\r\n\r\n    IF @eventType IS NULL\r\n        PRINT CONVERT(nvarchar(max), @data);\r\n\r\n    INSERT [dbo].[DatabaseLog] \r\n        (\r\n        [PostTime], \r\n        [DatabaseUser], \r\n        [Event], \r\n        [Schema], \r\n        [Object], \r\n        [TSQL], \r\n        [XmlEvent]\r\n        ) \r\n    VALUES \r\n        (\r\n        GETDATE(), \r\n        CONVERT(sysname, CURRENT_USER), \r\n        @eventType, \r\n        CONVERT(sysname, @schema), \r\n        CONVERT(sysname, @object), \r\n        @data.value(''(/EVENT_INSTANCE/TSQLCommand)[1]'', ''nvarchar(max)''), \r\n        @data\r\n        );\r\nEND;\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "DISABLE TRIGGER [ddlDatabaseTriggerLog] ON DATABASE",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'TRIGGER',N'ddlDatabaseTriggerLog', NULL,NULL, NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Database trigger to audit all of the DDL changes made to the AdventureWorks 2012 database.' , @level0type=N'TRIGGER',@level0name=N'ddlDatabaseTriggerLog'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  UserDefinedDataType [dbo].[Name]    Script Date: 9/26/2023 12:09:56 PM ******/\r\nIF NOT EXISTS (SELECT * FROM sys.types st JOIN sys.schemas ss ON st.schema_id = ss.schema_id WHERE st.name = N'Name' AND ss.name = N'dbo')\r\nCREATE TYPE [dbo].[Name] FROM [nvarchar](50) NULL",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Production].[ProductCategory]    Script Date: 9/26/2023 12:09:56 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[ProductCategory]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Production].[ProductCategory](\r\n\t[ProductCategoryID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[Name] [dbo].[Name] NOT NULL,\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_ProductCategory_ProductCategoryID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[ProductCategoryID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[ProductCategory]') AND name = N'AK_ProductCategory_Name')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_ProductCategory_Name] ON [Production].[ProductCategory]\r\n(\r\n\t[Name] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[ProductCategory]') AND name = N'AK_ProductCategory_rowguid')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_ProductCategory_rowguid] ON [Production].[ProductCategory]\r\n(\r\n\t[rowguid] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_ProductCategory_rowguid]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[ProductCategory] ADD  CONSTRAINT [DF_ProductCategory_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_ProductCategory_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[ProductCategory] ADD  CONSTRAINT [DF_ProductCategory_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductCategory', N'COLUMN',N'ProductCategoryID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for ProductCategory records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCategory', @level2type=N'COLUMN',@level2name=N'ProductCategoryID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductCategory', N'COLUMN',N'Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Category description.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCategory', @level2type=N'COLUMN',@level2name=N'Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductCategory', N'COLUMN',N'rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCategory', @level2type=N'COLUMN',@level2name=N'rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductCategory', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCategory', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductCategory', N'INDEX',N'AK_ProductCategory_Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCategory', @level2type=N'INDEX',@level2name=N'AK_ProductCategory_Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductCategory', N'INDEX',N'AK_ProductCategory_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCategory', @level2type=N'INDEX',@level2name=N'AK_ProductCategory_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductCategory', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'High-level product categorization.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCategory'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Production].[ProductSubcategory]    Script Date: 9/26/2023 12:09:56 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[ProductSubcategory]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Production].[ProductSubcategory](\r\n\t[ProductSubcategoryID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[ProductCategoryID] [int] NOT NULL,\r\n\t[Name] [dbo].[Name] NOT NULL,\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_ProductSubcategory_ProductSubcategoryID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[ProductSubcategoryID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[ProductSubcategory]') AND name = N'AK_ProductSubcategory_Name')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_ProductSubcategory_Name] ON [Production].[ProductSubcategory]\r\n(\r\n\t[Name] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[ProductSubcategory]') AND name = N'AK_ProductSubcategory_rowguid')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_ProductSubcategory_rowguid] ON [Production].[ProductSubcategory]\r\n(\r\n\t[rowguid] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_ProductSubcategory_rowguid]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[ProductSubcategory] ADD  CONSTRAINT [DF_ProductSubcategory_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_ProductSubcategory_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[ProductSubcategory] ADD  CONSTRAINT [DF_ProductSubcategory_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductSubcategory', N'COLUMN',N'ProductSubcategoryID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for ProductSubcategory records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductSubcategory', @level2type=N'COLUMN',@level2name=N'ProductSubcategoryID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductSubcategory', N'COLUMN',N'ProductCategoryID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product category identification number. Foreign key to ProductCategory.ProductCategoryID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductSubcategory', @level2type=N'COLUMN',@level2name=N'ProductCategoryID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductSubcategory', N'COLUMN',N'Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Subcategory description.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductSubcategory', @level2type=N'COLUMN',@level2name=N'Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductSubcategory', N'COLUMN',N'rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductSubcategory', @level2type=N'COLUMN',@level2name=N'rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductSubcategory', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductSubcategory', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductSubcategory', N'INDEX',N'AK_ProductSubcategory_Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductSubcategory', @level2type=N'INDEX',@level2name=N'AK_ProductSubcategory_Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductSubcategory', N'INDEX',N'AK_ProductSubcategory_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductSubcategory', @level2type=N'INDEX',@level2name=N'AK_ProductSubcategory_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductSubcategory', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product subcategories. See ProductCategory table.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductSubcategory'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  XmlSchemaCollection [ManuInstructionsSchemaCollection]    Script Date: 9/26/2023 12:09:57 PM ******/\r\nIF NOT EXISTS (SELECT * FROM sys.xml_schema_collections c, sys.schemas s WHERE c.schema_id = s.schema_id AND (quotename(s.name) + '.' + quotename(c.name)) = N'[Production].[ManuInstructionsSchemaCollection]')\r\nCREATE XML SCHEMA COLLECTION [Production].[ManuInstructionsSchemaCollection] AS N'<xsd:schema xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:t=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelManuInstructions\" targetNamespace=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelManuInstructions\" elementFormDefault=\"qualified\"><xsd:element name=\"root\"><xsd:complexType mixed=\"true\"><xsd:complexContent mixed=\"true\"><xsd:restriction base=\"xsd:anyType\"><xsd:sequence><xsd:element name=\"Location\" maxOccurs=\"unbounded\"><xsd:complexType mixed=\"true\"><xsd:complexContent mixed=\"true\"><xsd:restriction base=\"xsd:anyType\"><xsd:sequence><xsd:element name=\"step\" type=\"t:StepType\" maxOccurs=\"unbounded\" /></xsd:sequence><xsd:attribute name=\"LocationID\" type=\"xsd:integer\" use=\"required\" /><xsd:attribute name=\"SetupHours\" type=\"xsd:decimal\" /><xsd:attribute name=\"MachineHours\" type=\"xsd:decimal\" /><xsd:attribute name=\"LaborHours\" type=\"xsd:decimal\" /><xsd:attribute name=\"LotSize\" type=\"xsd:decimal\" /></xsd:restriction></xsd:complexContent></xsd:complexType></xsd:element></xsd:sequence></xsd:restriction></xsd:complexContent></xsd:complexType></xsd:element><xsd:complexType name=\"StepType\" mixed=\"true\"><xsd:complexContent mixed=\"true\"><xsd:restriction base=\"xsd:anyType\"><xsd:choice minOccurs=\"0\" maxOccurs=\"unbounded\"><xsd:element name=\"tool\" type=\"xsd:string\" /><xsd:element name=\"material\" type=\"xsd:string\" /><xsd:element name=\"blueprint\" type=\"xsd:string\" /><xsd:element name=\"specs\" type=\"xsd:string\" /><xsd:element name=\"diag\" type=\"xsd:string\" /></xsd:choice></xsd:restriction></xsd:complexContent></xsd:complexType></xsd:schema>'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'XML SCHEMA COLLECTION',N'ManuInstructionsSchemaCollection', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Collection of XML schemas for the Instructions column in the Production.ProductModel table.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'XML SCHEMA COLLECTION',@level1name=N'ManuInstructionsSchemaCollection'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  XmlSchemaCollection [ProductDescriptionSchemaCollection]    Script Date: 9/26/2023 12:09:57 PM ******/\r\nIF NOT EXISTS (SELECT * FROM sys.xml_schema_collections c, sys.schemas s WHERE c.schema_id = s.schema_id AND (quotename(s.name) + '.' + quotename(c.name)) = N'[Production].[ProductDescriptionSchemaCollection]')\r\nCREATE XML SCHEMA COLLECTION [Production].[ProductDescriptionSchemaCollection] AS N'<xsd:schema xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:t=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain\" targetNamespace=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain\" elementFormDefault=\"qualified\"><xsd:element name=\"Maintenance\"><xsd:complexType><xsd:complexContent><xsd:restriction base=\"xsd:anyType\"><xsd:sequence><xsd:element name=\"NoOfYears\" type=\"xsd:string\" /><xsd:element name=\"Description\" type=\"xsd:string\" /></xsd:sequence></xsd:restriction></xsd:complexContent></xsd:complexType></xsd:element><xsd:element name=\"Warranty\"><xsd:complexType><xsd:complexContent><xsd:restriction base=\"xsd:anyType\"><xsd:sequence><xsd:element name=\"WarrantyPeriod\" type=\"xsd:string\" /><xsd:element name=\"Description\" type=\"xsd:string\" /></xsd:sequence></xsd:restriction></xsd:complexContent></xsd:complexType></xsd:element></xsd:schema><xsd:schema xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:ns1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain\" xmlns:t=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\" targetNamespace=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\" elementFormDefault=\"qualified\"><xsd:import namespace=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain\" /><xsd:element name=\"Code\" type=\"xsd:string\" /><xsd:element name=\"Description\" type=\"xsd:string\" /><xsd:element name=\"ProductDescription\" type=\"t:ProductDescription\" /><xsd:element name=\"Taxonomy\" type=\"xsd:string\" /><xsd:complexType name=\"Category\"><xsd:complexContent><xsd:restriction base=\"xsd:anyType\"><xsd:sequence><xsd:element ref=\"t:Taxonomy\" /><xsd:element ref=\"t:Code\" /><xsd:element ref=\"t:Description\" minOccurs=\"0\" /></xsd:sequence></xsd:restriction></xsd:complexContent></xsd:complexType><xsd:complexType name=\"Features\" mixed=\"true\"><xsd:complexContent mixed=\"true\"><xsd:restriction base=\"xsd:anyType\"><xsd:sequence><xsd:element ref=\"ns1:Warranty\" /><xsd:element ref=\"ns1:Maintenance\" /><xsd:any namespace=\"##other\" processContents=\"skip\" minOccurs=\"0\" maxOccurs=\"unbounded\" /></xsd:sequence></xsd:restriction></xsd:complexContent></xsd:complexType><xsd:complexType name=\"Manufacturer\"><xsd:complexContent><xsd:restriction base=\"xsd:anyType\"><xsd:sequence><xsd:element name=\"Name\" type=\"xsd:string\" minOccurs=\"0\" /><xsd:element name=\"CopyrightURL\" type=\"xsd:string\" minOccurs=\"0\" /><xsd:element name=\"Copyright\" type=\"xsd:string\" minOccurs=\"0\" /><xsd:element name=\"ProductURL\" type=\"xsd:string\" minOccurs=\"0\" /></xsd:sequence></xsd:restriction></xsd:complexContent></xsd:complexType><xsd:complexType name=\"Picture\"><xsd:complexContent><xsd:restriction base=\"xsd:anyType\"><xsd:sequence><xsd:element name=\"Name\" type=\"xsd:string\" minOccurs=\"0\" /><xsd:element name=\"Angle\" type=\"xsd:string\" minOccurs=\"0\" /><xsd:element name=\"Size\" type=\"xsd:string\" minOccurs=\"0\" /><xsd:element name=\"ProductPhotoID\" type=\"xsd:integer\" minOccurs=\"0\" /></xsd:sequence></xsd:restriction></xsd:complexContent></xsd:complexType><xsd:complexType name=\"ProductDescription\"><xsd:complexContent><xsd:restriction base=\"xsd:anyType\"><xsd:sequence><xsd:element name=\"Summary\" type=\"t:Summary\" minOccurs=\"0\" /><xsd:element name=\"Manufacturer\" type=\"t:Manufacturer\" minOccurs=\"0\" /><xsd:element name=\"Features\" type=\"t:Features\" minOccurs=\"0\" maxOccurs=\"unbounded\" /><xsd:element name=\"Picture\" type=\"t:Picture\" minOccurs=\"0\" maxOccurs=\"unbounded\" /><xsd:element name=\"Category\" type=\"t:Category\" minOccurs=\"0\" maxOccurs=\"unbounded\" /><xsd:element name=\"Specifications\" type=\"t:Specifications\" minOccurs=\"0\" maxOccurs=\"unbounded\" /></xsd:sequence><xsd:attribute name=\"ProductModelID\" type=\"xsd:string\" /><xsd:attribute name=\"ProductModelName\" type=\"xsd:string\" /></xsd:restriction></xsd:complexContent></xsd:complexType><xsd:complexType name=\"Specifications\" mixed=\"true\"><xsd:complexContent mixed=\"true\"><xsd:restriction base=\"xsd:anyType\"><xsd:sequence><xsd:any processContents=\"skip\" minOccurs=\"0\" maxOccurs=\"unbounded\" /></xsd:sequence></xsd:restriction></xsd:complexContent></xsd:complexType><xsd:complexType name=\"Summary\" mixed=\"true\"><xsd:complexContent mixed=\"true\"><xsd:restriction base=\"xsd:anyType\"><xsd:sequence><xsd:any namespace=\"http://www.w3.org/1999/xhtml\" processContents=\"skip\" minOccurs=\"0\" maxOccurs=\"unbounded\" /></xsd:sequence></xsd:restriction></xsd:complexContent></xsd:complexType></xsd:schema>'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'XML SCHEMA COLLECTION',N'ProductDescriptionSchemaCollection', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Collection of XML schemas for the CatalogDescription column in the Production.ProductModel table.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'XML SCHEMA COLLECTION',@level1name=N'ProductDescriptionSchemaCollection'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Production].[ProductModel]    Script Date: 9/26/2023 12:09:57 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[ProductModel]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Production].[ProductModel](\r\n\t[ProductModelID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[Name] [dbo].[Name] NOT NULL,\r\n\t[CatalogDescription] [xml](CONTENT [Production].[ProductDescriptionSchemaCollection]) NULL,\r\n\t[Instructions] [xml](CONTENT [Production].[ManuInstructionsSchemaCollection]) NULL,\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_ProductModel_ProductModelID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[ProductModelID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[ProductModel]') AND name = N'AK_ProductModel_Name')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_ProductModel_Name] ON [Production].[ProductModel]\r\n(\r\n\t[Name] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[ProductModel]') AND name = N'AK_ProductModel_rowguid')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_ProductModel_rowguid] ON [Production].[ProductModel]\r\n(\r\n\t[rowguid] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ARITHABORT ON\r\nSET CONCAT_NULL_YIELDS_NULL ON\r\nSET QUOTED_IDENTIFIER ON\r\nSET ANSI_NULLS ON\r\nSET ANSI_PADDING ON\r\nSET ANSI_WARNINGS ON\r\nSET NUMERIC_ROUNDABORT OFF",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[ProductModel]') AND name = N'PXML_ProductModel_CatalogDescription')\r\nCREATE PRIMARY XML INDEX [PXML_ProductModel_CatalogDescription] ON [Production].[ProductModel]\r\n(\r\n\t[CatalogDescription]\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ARITHABORT ON\r\nSET CONCAT_NULL_YIELDS_NULL ON\r\nSET QUOTED_IDENTIFIER ON\r\nSET ANSI_NULLS ON\r\nSET ANSI_PADDING ON\r\nSET ANSI_WARNINGS ON\r\nSET NUMERIC_ROUNDABORT OFF",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[ProductModel]') AND name = N'PXML_ProductModel_Instructions')\r\nCREATE PRIMARY XML INDEX [PXML_ProductModel_Instructions] ON [Production].[ProductModel]\r\n(\r\n\t[Instructions]\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_ProductModel_rowguid]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[ProductModel] ADD  CONSTRAINT [DF_ProductModel_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_ProductModel_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[ProductModel] ADD  CONSTRAINT [DF_ProductModel_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModel', N'COLUMN',N'ProductModelID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for ProductModel records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModel', @level2type=N'COLUMN',@level2name=N'ProductModelID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModel', N'COLUMN',N'Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product model description.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModel', @level2type=N'COLUMN',@level2name=N'Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModel', N'COLUMN',N'CatalogDescription'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Detailed product catalog information in xml format.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModel', @level2type=N'COLUMN',@level2name=N'CatalogDescription'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModel', N'COLUMN',N'Instructions'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Manufacturing instructions in xml format.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModel', @level2type=N'COLUMN',@level2name=N'Instructions'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModel', N'COLUMN',N'rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModel', @level2type=N'COLUMN',@level2name=N'rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModel', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModel', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModel', N'INDEX',N'AK_ProductModel_Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModel', @level2type=N'INDEX',@level2name=N'AK_ProductModel_Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModel', N'INDEX',N'AK_ProductModel_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModel', @level2type=N'INDEX',@level2name=N'AK_ProductModel_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModel', N'INDEX',N'PXML_ProductModel_CatalogDescription'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary XML index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModel', @level2type=N'INDEX',@level2name=N'PXML_ProductModel_CatalogDescription'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModel', N'INDEX',N'PXML_ProductModel_Instructions'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary XML index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModel', @level2type=N'INDEX',@level2name=N'PXML_ProductModel_Instructions'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModel', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product model classification.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModel'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Production].[UnitMeasure]    Script Date: 9/26/2023 12:09:57 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[UnitMeasure]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Production].[UnitMeasure](\r\n\t[UnitMeasureCode] [nchar](3) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[Name] [dbo].[Name] NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_UnitMeasure_UnitMeasureCode] PRIMARY KEY CLUSTERED \r\n(\r\n\t[UnitMeasureCode] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[UnitMeasure]') AND name = N'AK_UnitMeasure_Name')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_UnitMeasure_Name] ON [Production].[UnitMeasure]\r\n(\r\n\t[Name] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_UnitMeasure_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[UnitMeasure] ADD  CONSTRAINT [DF_UnitMeasure_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'UnitMeasure', N'COLUMN',N'UnitMeasureCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'UnitMeasure', @level2type=N'COLUMN',@level2name=N'UnitMeasureCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'UnitMeasure', N'COLUMN',N'Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unit of measure description.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'UnitMeasure', @level2type=N'COLUMN',@level2name=N'Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'UnitMeasure', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'UnitMeasure', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'UnitMeasure', N'INDEX',N'AK_UnitMeasure_Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'UnitMeasure', @level2type=N'INDEX',@level2name=N'AK_UnitMeasure_Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'UnitMeasure', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unit of measure lookup table.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'UnitMeasure'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  UserDefinedDataType [dbo].[Flag]    Script Date: 9/26/2023 12:09:57 PM ******/\r\nIF NOT EXISTS (SELECT * FROM sys.types st JOIN sys.schemas ss ON st.schema_id = ss.schema_id WHERE st.name = N'Flag' AND ss.name = N'dbo')\r\nCREATE TYPE [dbo].[Flag] FROM [bit] NOT NULL",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Production].[Product]    Script Date: 9/26/2023 12:09:57 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[Product]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Production].[Product](\r\n\t[ProductID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[Name] [dbo].[Name] NOT NULL,\r\n\t[ProductNumber] [nvarchar](25) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[MakeFlag] [dbo].[Flag] NOT NULL,\r\n\t[FinishedGoodsFlag] [dbo].[Flag] NOT NULL,\r\n\t[Color] [nvarchar](15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n\t[SafetyStockLevel] [smallint] NOT NULL,\r\n\t[ReorderPoint] [smallint] NOT NULL,\r\n\t[StandardCost] [money] NOT NULL,\r\n\t[ListPrice] [money] NOT NULL,\r\n\t[Size] [nvarchar](5) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n\t[SizeUnitMeasureCode] [nchar](3) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n\t[WeightUnitMeasureCode] [nchar](3) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n\t[Weight] [decimal](8, 2) NULL,\r\n\t[DaysToManufacture] [int] NOT NULL,\r\n\t[ProductLine] [nchar](2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n\t[Class] [nchar](2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n\t[Style] [nchar](2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n\t[ProductSubcategoryID] [int] NULL,\r\n\t[ProductModelID] [int] NULL,\r\n\t[SellStartDate] [datetime] NOT NULL,\r\n\t[SellEndDate] [datetime] NULL,\r\n\t[DiscontinuedDate] [datetime] NULL,\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_Product_ProductID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[ProductID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[Product]') AND name = N'AK_Product_Name')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Product_Name] ON [Production].[Product]\r\n(\r\n\t[Name] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[Product]') AND name = N'AK_Product_ProductNumber')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Product_ProductNumber] ON [Production].[Product]\r\n(\r\n\t[ProductNumber] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[Product]') AND name = N'AK_Product_rowguid')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Product_rowguid] ON [Production].[Product]\r\n(\r\n\t[rowguid] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_Product_MakeFlag]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[Product] ADD  CONSTRAINT [DF_Product_MakeFlag]  DEFAULT ((1)) FOR [MakeFlag]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_Product_FinishedGoodsFlag]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[Product] ADD  CONSTRAINT [DF_Product_FinishedGoodsFlag]  DEFAULT ((1)) FOR [FinishedGoodsFlag]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_Product_rowguid]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[Product] ADD  CONSTRAINT [DF_Product_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_Product_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[Product] ADD  CONSTRAINT [DF_Product_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'COLUMN',N'ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for Product records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'COLUMN',N'Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Name of the product.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'COLUMN',N'ProductNumber'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique product identification number.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'ProductNumber'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'COLUMN',N'MakeFlag'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'0 = Product is purchased, 1 = Product is manufactured in-house.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'MakeFlag'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'COLUMN',N'FinishedGoodsFlag'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'0 = Product is not a salable item. 1 = Product is salable.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'FinishedGoodsFlag'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'COLUMN',N'Color'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product color.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'Color'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'COLUMN',N'SafetyStockLevel'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Minimum inventory quantity. ' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'SafetyStockLevel'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'COLUMN',N'ReorderPoint'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Inventory level that triggers a purchase order or work order. ' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'ReorderPoint'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'COLUMN',N'StandardCost'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Standard cost of the product.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'StandardCost'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'COLUMN',N'ListPrice'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Selling price.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'ListPrice'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'COLUMN',N'Size'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product size.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'Size'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'COLUMN',N'SizeUnitMeasureCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unit of measure for Size column.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'SizeUnitMeasureCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'COLUMN',N'WeightUnitMeasureCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unit of measure for Weight column.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'WeightUnitMeasureCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'COLUMN',N'Weight'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product weight.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'Weight'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'COLUMN',N'DaysToManufacture'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Number of days required to manufacture the product.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'DaysToManufacture'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'COLUMN',N'ProductLine'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'R = Road, M = Mountain, T = Touring, S = Standard' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'ProductLine'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'COLUMN',N'Class'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'H = High, M = Medium, L = Low' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'Class'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'COLUMN',N'Style'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'W = Womens, M = Mens, U = Universal' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'Style'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'COLUMN',N'ProductSubcategoryID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product is a member of this product subcategory. Foreign key to ProductSubCategory.ProductSubCategoryID. ' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'ProductSubcategoryID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'COLUMN',N'ProductModelID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product is a member of this product model. Foreign key to ProductModel.ProductModelID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'ProductModelID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'COLUMN',N'SellStartDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date the product was available for sale.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'SellStartDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'COLUMN',N'SellEndDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date the product was no longer available for sale.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'SellEndDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'COLUMN',N'DiscontinuedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date the product was discontinued.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'DiscontinuedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'COLUMN',N'rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'INDEX',N'AK_Product_Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'INDEX',@level2name=N'AK_Product_Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'INDEX',N'AK_Product_ProductNumber'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'INDEX',@level2name=N'AK_Product_ProductNumber'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'INDEX',N'AK_Product_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'INDEX',@level2name=N'AK_Product_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Products sold or used in the manfacturing of sold products.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Production].[BillOfMaterials]    Script Date: 9/26/2023 12:09:57 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[BillOfMaterials]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Production].[BillOfMaterials](\r\n\t[BillOfMaterialsID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[ProductAssemblyID] [int] NULL,\r\n\t[ComponentID] [int] NOT NULL,\r\n\t[StartDate] [datetime] NOT NULL,\r\n\t[EndDate] [datetime] NULL,\r\n\t[UnitMeasureCode] [nchar](3) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[BOMLevel] [smallint] NOT NULL,\r\n\t[PerAssemblyQty] [decimal](8, 2) NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_BillOfMaterials_BillOfMaterialsID] PRIMARY KEY NONCLUSTERED \r\n(\r\n\t[BillOfMaterialsID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[BillOfMaterials]') AND name = N'AK_BillOfMaterials_ProductAssemblyID_ComponentID_StartDate')\r\nCREATE UNIQUE CLUSTERED INDEX [AK_BillOfMaterials_ProductAssemblyID_ComponentID_StartDate] ON [Production].[BillOfMaterials]\r\n(\r\n\t[ProductAssemblyID] ASC,\r\n\t[ComponentID] ASC,\r\n\t[StartDate] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[BillOfMaterials]') AND name = N'IX_BillOfMaterials_UnitMeasureCode')\r\nCREATE NONCLUSTERED INDEX [IX_BillOfMaterials_UnitMeasureCode] ON [Production].[BillOfMaterials]\r\n(\r\n\t[UnitMeasureCode] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_BillOfMaterials_StartDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[BillOfMaterials] ADD  CONSTRAINT [DF_BillOfMaterials_StartDate]  DEFAULT (getdate()) FOR [StartDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_BillOfMaterials_PerAssemblyQty]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[BillOfMaterials] ADD  CONSTRAINT [DF_BillOfMaterials_PerAssemblyQty]  DEFAULT ((1.00)) FOR [PerAssemblyQty]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_BillOfMaterials_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[BillOfMaterials] ADD  CONSTRAINT [DF_BillOfMaterials_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'BillOfMaterials', N'COLUMN',N'BillOfMaterialsID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for BillOfMaterials records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'COLUMN',@level2name=N'BillOfMaterialsID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'BillOfMaterials', N'COLUMN',N'ProductAssemblyID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent product identification number. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'COLUMN',@level2name=N'ProductAssemblyID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'BillOfMaterials', N'COLUMN',N'ComponentID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Component identification number. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'COLUMN',@level2name=N'ComponentID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'BillOfMaterials', N'COLUMN',N'StartDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date the component started being used in the assembly item.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'COLUMN',@level2name=N'StartDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'BillOfMaterials', N'COLUMN',N'EndDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date the component stopped being used in the assembly item.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'COLUMN',@level2name=N'EndDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'BillOfMaterials', N'COLUMN',N'UnitMeasureCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Standard code identifying the unit of measure for the quantity.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'COLUMN',@level2name=N'UnitMeasureCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'BillOfMaterials', N'COLUMN',N'BOMLevel'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Indicates the depth the component is from its parent (AssemblyID).' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'COLUMN',@level2name=N'BOMLevel'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'BillOfMaterials', N'COLUMN',N'PerAssemblyQty'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Quantity of the component needed to create the assembly.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'COLUMN',@level2name=N'PerAssemblyQty'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'BillOfMaterials', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'BillOfMaterials', N'INDEX',N'AK_BillOfMaterials_ProductAssemblyID_ComponentID_StartDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Clustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'INDEX',@level2name=N'AK_BillOfMaterials_ProductAssemblyID_ComponentID_StartDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'BillOfMaterials', N'INDEX',N'IX_BillOfMaterials_UnitMeasureCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'INDEX',@level2name=N'IX_BillOfMaterials_UnitMeasureCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'BillOfMaterials', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Items required to make bicycles and bicycle subassemblies. It identifies the heirarchical relationship between a parent product and its components.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  StoredProcedure [dbo].[uspGetBillOfMaterials]    Script Date: 9/26/2023 12:09:57 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[uspGetBillOfMaterials]') AND type in (N'P', N'PC'))\r\nBEGIN\r\nEXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[uspGetBillOfMaterials] AS' \r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "ALTER PROCEDURE [dbo].[uspGetBillOfMaterials]\r\n    @StartProductID [int],\r\n    @CheckDate [datetime]\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Use recursive query to generate a multi-level Bill of Material (i.e. all level 1 \r\n    -- components of a level 0 assembly, all level 2 components of a level 1 assembly)\r\n    -- The CheckDate eliminates any components that are no longer used in the product on this date.\r\n    WITH [BOM_cte]([ProductAssemblyID], [ComponentID], [ComponentDesc], [PerAssemblyQty], [StandardCost], [ListPrice], [BOMLevel], [RecursionLevel]) -- CTE name and columns\r\n    AS (\r\n        SELECT b.[ProductAssemblyID], b.[ComponentID], p.[Name], b.[PerAssemblyQty], p.[StandardCost], p.[ListPrice], b.[BOMLevel], 0 -- Get the initial list of components for the bike assembly\r\n        FROM [Production].[BillOfMaterials] b\r\n            INNER JOIN [Production].[Product] p \r\n            ON b.[ComponentID] = p.[ProductID] \r\n        WHERE b.[ProductAssemblyID] = @StartProductID \r\n            AND @CheckDate >= b.[StartDate] \r\n            AND @CheckDate <= ISNULL(b.[EndDate], @CheckDate)\r\n        UNION ALL\r\n        SELECT b.[ProductAssemblyID], b.[ComponentID], p.[Name], b.[PerAssemblyQty], p.[StandardCost], p.[ListPrice], b.[BOMLevel], [RecursionLevel] + 1 -- Join recursive member to anchor\r\n        FROM [BOM_cte] cte\r\n            INNER JOIN [Production].[BillOfMaterials] b \r\n            ON b.[ProductAssemblyID] = cte.[ComponentID]\r\n            INNER JOIN [Production].[Product] p \r\n            ON b.[ComponentID] = p.[ProductID] \r\n        WHERE @CheckDate >= b.[StartDate] \r\n            AND @CheckDate <= ISNULL(b.[EndDate], @CheckDate)\r\n        )\r\n    -- Outer select from the CTE\r\n    SELECT b.[ProductAssemblyID], b.[ComponentID], b.[ComponentDesc], SUM(b.[PerAssemblyQty]) AS [TotalQuantity] , b.[StandardCost], b.[ListPrice], b.[BOMLevel], b.[RecursionLevel]\r\n    FROM [BOM_cte] b\r\n    GROUP BY b.[ComponentID], b.[ComponentDesc], b.[ProductAssemblyID], b.[BOMLevel], b.[RecursionLevel], b.[StandardCost], b.[ListPrice]\r\n    ORDER BY b.[BOMLevel], b.[ProductAssemblyID], b.[ComponentID]\r\n    OPTION (MAXRECURSION 25) \r\nEND;",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'PROCEDURE',N'uspGetBillOfMaterials', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Stored procedure using a recursive query to return a multi-level bill of material for the specified ProductID.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'PROCEDURE',@level1name=N'uspGetBillOfMaterials'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'PROCEDURE',N'uspGetBillOfMaterials', N'PARAMETER',N'@StartProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the stored procedure uspGetBillOfMaterials. Enter a valid ProductID from the Production.Product table.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'PROCEDURE',@level1name=N'uspGetBillOfMaterials', @level2type=N'PARAMETER',@level2name=N'@StartProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'PROCEDURE',N'uspGetBillOfMaterials', N'PARAMETER',N'@CheckDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the stored procedure uspGetBillOfMaterials used to eliminate components not used after that date. Enter a valid date.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'PROCEDURE',@level1name=N'uspGetBillOfMaterials', @level2type=N'PARAMETER',@level2name=N'@CheckDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  UserDefinedDataType [dbo].[NameStyle]    Script Date: 9/26/2023 12:09:57 PM ******/\r\nIF NOT EXISTS (SELECT * FROM sys.types st JOIN sys.schemas ss ON st.schema_id = ss.schema_id WHERE st.name = N'NameStyle' AND ss.name = N'dbo')\r\nCREATE TYPE [dbo].[NameStyle] FROM [bit] NOT NULL",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  XmlSchemaCollection [IndividualSurveySchemaCollection]    Script Date: 9/26/2023 12:09:57 PM ******/\r\nIF NOT EXISTS (SELECT * FROM sys.xml_schema_collections c, sys.schemas s WHERE c.schema_id = s.schema_id AND (quotename(s.name) + '.' + quotename(c.name)) = N'[Person].[IndividualSurveySchemaCollection]')\r\nCREATE XML SCHEMA COLLECTION [Person].[IndividualSurveySchemaCollection] AS N'<xsd:schema xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:t=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\" targetNamespace=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\" elementFormDefault=\"qualified\"><xsd:element name=\"IndividualSurvey\"><xsd:complexType><xsd:complexContent><xsd:restriction base=\"xsd:anyType\"><xsd:sequence><xsd:element name=\"TotalPurchaseYTD\" type=\"xsd:decimal\" minOccurs=\"0\" /><xsd:element name=\"DateFirstPurchase\" type=\"xsd:date\" minOccurs=\"0\" /><xsd:element name=\"BirthDate\" type=\"xsd:date\" minOccurs=\"0\" /><xsd:element name=\"MaritalStatus\" type=\"xsd:string\" minOccurs=\"0\" /><xsd:element name=\"YearlyIncome\" type=\"t:SalaryType\" minOccurs=\"0\" /><xsd:element name=\"Gender\" type=\"xsd:string\" minOccurs=\"0\" /><xsd:element name=\"TotalChildren\" type=\"xsd:int\" minOccurs=\"0\" /><xsd:element name=\"NumberChildrenAtHome\" type=\"xsd:int\" minOccurs=\"0\" /><xsd:element name=\"Education\" type=\"xsd:string\" minOccurs=\"0\" /><xsd:element name=\"Occupation\" type=\"xsd:string\" minOccurs=\"0\" /><xsd:element name=\"HomeOwnerFlag\" type=\"xsd:string\" minOccurs=\"0\" /><xsd:element name=\"NumberCarsOwned\" type=\"xsd:int\" minOccurs=\"0\" /><xsd:element name=\"Hobby\" type=\"xsd:string\" minOccurs=\"0\" maxOccurs=\"unbounded\" /><xsd:element name=\"CommuteDistance\" type=\"t:MileRangeType\" minOccurs=\"0\" /><xsd:element name=\"Comments\" type=\"xsd:string\" minOccurs=\"0\" /></xsd:sequence></xsd:restriction></xsd:complexContent></xsd:complexType></xsd:element><xsd:simpleType name=\"MileRangeType\"><xsd:restriction base=\"xsd:string\"><xsd:enumeration value=\"0-1 Miles\" /><xsd:enumeration value=\"1-2 Miles\" /><xsd:enumeration value=\"2-5 Miles\" /><xsd:enumeration value=\"5-10 Miles\" /><xsd:enumeration value=\"10+ Miles\" /></xsd:restriction></xsd:simpleType><xsd:simpleType name=\"SalaryType\"><xsd:restriction base=\"xsd:string\"><xsd:enumeration value=\"0-25000\" /><xsd:enumeration value=\"25001-50000\" /><xsd:enumeration value=\"50001-75000\" /><xsd:enumeration value=\"75001-100000\" /><xsd:enumeration value=\"greater than 100000\" /></xsd:restriction></xsd:simpleType></xsd:schema>'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'XML SCHEMA COLLECTION',N'IndividualSurveySchemaCollection', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Collection of XML schemas for the Demographics column in the Person.Person table.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'XML SCHEMA COLLECTION',@level1name=N'IndividualSurveySchemaCollection'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  XmlSchemaCollection [AdditionalContactInfoSchemaCollection]    Script Date: 9/26/2023 12:09:57 PM ******/\r\nIF NOT EXISTS (SELECT * FROM sys.xml_schema_collections c, sys.schemas s WHERE c.schema_id = s.schema_id AND (quotename(s.name) + '.' + quotename(c.name)) = N'[Person].[AdditionalContactInfoSchemaCollection]')\r\nCREATE XML SCHEMA COLLECTION [Person].[AdditionalContactInfoSchemaCollection] AS N'<xsd:schema xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:t=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\" targetNamespace=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"><xsd:element name=\"AdditionalContactInfo\"><xsd:complexType mixed=\"true\"><xsd:complexContent mixed=\"true\"><xsd:restriction base=\"xsd:anyType\"><xsd:sequence><xsd:any namespace=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactRecord http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\" minOccurs=\"0\" maxOccurs=\"unbounded\" /></xsd:sequence></xsd:restriction></xsd:complexContent></xsd:complexType></xsd:element></xsd:schema><xsd:schema xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:t=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactRecord\" targetNamespace=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactRecord\"><xsd:element name=\"ContactRecord\"><xsd:complexType mixed=\"true\"><xsd:complexContent mixed=\"true\"><xsd:restriction base=\"xsd:anyType\"><xsd:choice minOccurs=\"0\" maxOccurs=\"unbounded\"><xsd:any namespace=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\" /></xsd:choice><xsd:attribute name=\"date\" type=\"xsd:date\" /></xsd:restriction></xsd:complexContent></xsd:complexType></xsd:element></xsd:schema><xsd:schema xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:t=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\" targetNamespace=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\" elementFormDefault=\"qualified\"><xsd:element name=\"eMail\" type=\"t:eMailType\" /><xsd:element name=\"facsimileTelephoneNumber\" type=\"t:phoneNumberType\" /><xsd:element name=\"homePostalAddress\" type=\"t:addressType\" /><xsd:element name=\"internationaliSDNNumber\" type=\"t:phoneNumberType\" /><xsd:element name=\"mobile\" type=\"t:phoneNumberType\" /><xsd:element name=\"pager\" type=\"t:phoneNumberType\" /><xsd:element name=\"physicalDeliveryOfficeName\" type=\"t:addressType\" /><xsd:element name=\"registeredAddress\" type=\"t:addressType\" /><xsd:element name=\"telephoneNumber\" type=\"t:phoneNumberType\" /><xsd:element name=\"telexNumber\" type=\"t:phoneNumberType\" /><xsd:complexType name=\"addressType\"><xsd:complexContent><xsd:restriction base=\"xsd:anyType\"><xsd:sequence><xsd:element name=\"Street\" type=\"xsd:string\" maxOccurs=\"2\" /><xsd:element name=\"City\" type=\"xsd:string\" /><xsd:element name=\"StateProvince\" type=\"xsd:string\" /><xsd:element name=\"PostalCode\" type=\"xsd:string\" minOccurs=\"0\" /><xsd:element name=\"CountryRegion\" type=\"xsd:string\" /><xsd:element name=\"SpecialInstructions\" type=\"t:specialInstructionsType\" minOccurs=\"0\" /></xsd:sequence></xsd:restriction></xsd:complexContent></xsd:complexType><xsd:complexType name=\"eMailType\"><xsd:complexContent><xsd:restriction base=\"xsd:anyType\"><xsd:sequence><xsd:element name=\"eMailAddress\" type=\"xsd:string\" /><xsd:element name=\"SpecialInstructions\" type=\"t:specialInstructionsType\" minOccurs=\"0\" /></xsd:sequence></xsd:restriction></xsd:complexContent></xsd:complexType><xsd:complexType name=\"phoneNumberType\"><xsd:complexContent><xsd:restriction base=\"xsd:anyType\"><xsd:sequence><xsd:element name=\"number\"><xsd:simpleType><xsd:restriction base=\"xsd:string\"><xsd:pattern value=\"[0-9\\(\\)\\-]*\" /></xsd:restriction></xsd:simpleType></xsd:element><xsd:element name=\"SpecialInstructions\" type=\"t:specialInstructionsType\" minOccurs=\"0\" /></xsd:sequence></xsd:restriction></xsd:complexContent></xsd:complexType><xsd:complexType name=\"specialInstructionsType\" mixed=\"true\"><xsd:complexContent mixed=\"true\"><xsd:restriction base=\"xsd:anyType\"><xsd:sequence><xsd:any namespace=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\" minOccurs=\"0\" maxOccurs=\"unbounded\" /></xsd:sequence></xsd:restriction></xsd:complexContent></xsd:complexType></xsd:schema>'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'XML SCHEMA COLLECTION',N'AdditionalContactInfoSchemaCollection', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Collection of XML schemas for the AdditionalContactInfo column in the Person.Contact table.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'XML SCHEMA COLLECTION',@level1name=N'AdditionalContactInfoSchemaCollection'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Person].[BusinessEntity]    Script Date: 9/26/2023 12:09:57 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[BusinessEntity]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Person].[BusinessEntity](\r\n\t[BusinessEntityID] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_BusinessEntity_BusinessEntityID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[BusinessEntityID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Person].[BusinessEntity]') AND name = N'AK_BusinessEntity_rowguid')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_BusinessEntity_rowguid] ON [Person].[BusinessEntity]\r\n(\r\n\t[rowguid] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[DF_BusinessEntity_rowguid]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Person].[BusinessEntity] ADD  CONSTRAINT [DF_BusinessEntity_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[DF_BusinessEntity_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Person].[BusinessEntity] ADD  CONSTRAINT [DF_BusinessEntity_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntity', N'COLUMN',N'BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for all customers, vendors, and employees.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntity', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntity', N'COLUMN',N'rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntity', @level2type=N'COLUMN',@level2name=N'rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntity', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntity', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntity', N'INDEX',N'AK_BusinessEntity_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntity', @level2type=N'INDEX',@level2name=N'AK_BusinessEntity_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntity', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Source of the ID that connects vendors, customers, and employees with address and contact information.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntity'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Person].[Person]    Script Date: 9/26/2023 12:09:57 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[Person]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Person].[Person](\r\n\t[BusinessEntityID] [int] NOT NULL,\r\n\t[PersonType] [nchar](2) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[NameStyle] [dbo].[NameStyle] NOT NULL,\r\n\t[Title] [nvarchar](8) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n\t[FirstName] [dbo].[Name] NOT NULL,\r\n\t[MiddleName] [dbo].[Name] NULL,\r\n\t[LastName] [dbo].[Name] NOT NULL,\r\n\t[Suffix] [nvarchar](10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n\t[EmailPromotion] [int] NOT NULL,\r\n\t[AdditionalContactInfo] [xml](CONTENT [Person].[AdditionalContactInfoSchemaCollection]) NULL,\r\n\t[Demographics] [xml](CONTENT [Person].[IndividualSurveySchemaCollection]) NULL,\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_Person_BusinessEntityID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[BusinessEntityID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Person].[Person]') AND name = N'AK_Person_rowguid')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Person_rowguid] ON [Person].[Person]\r\n(\r\n\t[rowguid] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Person].[Person]') AND name = N'IX_Person_LastName_FirstName_MiddleName')\r\nCREATE NONCLUSTERED INDEX [IX_Person_LastName_FirstName_MiddleName] ON [Person].[Person]\r\n(\r\n\t[LastName] ASC,\r\n\t[FirstName] ASC,\r\n\t[MiddleName] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ARITHABORT ON\r\nSET CONCAT_NULL_YIELDS_NULL ON\r\nSET QUOTED_IDENTIFIER ON\r\nSET ANSI_NULLS ON\r\nSET ANSI_PADDING ON\r\nSET ANSI_WARNINGS ON\r\nSET NUMERIC_ROUNDABORT OFF",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Person].[Person]') AND name = N'PXML_Person_AddContact')\r\nCREATE PRIMARY XML INDEX [PXML_Person_AddContact] ON [Person].[Person]\r\n(\r\n\t[AdditionalContactInfo]\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ARITHABORT ON\r\nSET CONCAT_NULL_YIELDS_NULL ON\r\nSET QUOTED_IDENTIFIER ON\r\nSET ANSI_NULLS ON\r\nSET ANSI_PADDING ON\r\nSET ANSI_WARNINGS ON\r\nSET NUMERIC_ROUNDABORT OFF",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Person].[Person]') AND name = N'PXML_Person_Demographics')\r\nCREATE PRIMARY XML INDEX [PXML_Person_Demographics] ON [Person].[Person]\r\n(\r\n\t[Demographics]\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ARITHABORT ON\r\nSET CONCAT_NULL_YIELDS_NULL ON\r\nSET QUOTED_IDENTIFIER ON\r\nSET ANSI_NULLS ON\r\nSET ANSI_PADDING ON\r\nSET ANSI_WARNINGS ON\r\nSET NUMERIC_ROUNDABORT OFF",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Person].[Person]') AND name = N'XMLPATH_Person_Demographics')\r\nCREATE XML INDEX [XMLPATH_Person_Demographics] ON [Person].[Person]\r\n(\r\n\t[Demographics]\r\n)\r\nUSING XML INDEX [PXML_Person_Demographics] FOR PATH WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ARITHABORT ON\r\nSET CONCAT_NULL_YIELDS_NULL ON\r\nSET QUOTED_IDENTIFIER ON\r\nSET ANSI_NULLS ON\r\nSET ANSI_PADDING ON\r\nSET ANSI_WARNINGS ON\r\nSET NUMERIC_ROUNDABORT OFF",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Person].[Person]') AND name = N'XMLPROPERTY_Person_Demographics')\r\nCREATE XML INDEX [XMLPROPERTY_Person_Demographics] ON [Person].[Person]\r\n(\r\n\t[Demographics]\r\n)\r\nUSING XML INDEX [PXML_Person_Demographics] FOR PROPERTY WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ARITHABORT ON\r\nSET CONCAT_NULL_YIELDS_NULL ON\r\nSET QUOTED_IDENTIFIER ON\r\nSET ANSI_NULLS ON\r\nSET ANSI_PADDING ON\r\nSET ANSI_WARNINGS ON\r\nSET NUMERIC_ROUNDABORT OFF",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Person].[Person]') AND name = N'XMLVALUE_Person_Demographics')\r\nCREATE XML INDEX [XMLVALUE_Person_Demographics] ON [Person].[Person]\r\n(\r\n\t[Demographics]\r\n)\r\nUSING XML INDEX [PXML_Person_Demographics] FOR VALUE WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[DF_Person_NameStyle]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Person].[Person] ADD  CONSTRAINT [DF_Person_NameStyle]  DEFAULT ((0)) FOR [NameStyle]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[DF_Person_EmailPromotion]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Person].[Person] ADD  CONSTRAINT [DF_Person_EmailPromotion]  DEFAULT ((0)) FOR [EmailPromotion]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[DF_Person_rowguid]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Person].[Person] ADD  CONSTRAINT [DF_Person_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[DF_Person_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Person].[Person] ADD  CONSTRAINT [DF_Person_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.triggers WHERE object_id = OBJECT_ID(N'[Person].[iuPerson]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE TRIGGER [Person].[iuPerson] ON [Person].[Person] \r\nAFTER INSERT, UPDATE NOT FOR REPLICATION AS \r\nBEGIN\r\n    DECLARE @Count int;\r\n\r\n    SET @Count = @@ROWCOUNT;\r\n    IF @Count = 0 \r\n        RETURN;\r\n\r\n    SET NOCOUNT ON;\r\n\r\n    IF UPDATE([BusinessEntityID]) OR UPDATE([Demographics]) \r\n    BEGIN\r\n        UPDATE [Person].[Person] \r\n        SET [Person].[Person].[Demographics] = N''<IndividualSurvey xmlns=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"> \r\n            <TotalPurchaseYTD>0.00</TotalPurchaseYTD> \r\n            </IndividualSurvey>'' \r\n        FROM inserted \r\n        WHERE [Person].[Person].[BusinessEntityID] = inserted.[BusinessEntityID] \r\n            AND inserted.[Demographics] IS NULL;\r\n        \r\n        UPDATE [Person].[Person] \r\n        SET [Demographics].modify(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \r\n            insert <TotalPurchaseYTD>0.00</TotalPurchaseYTD> \r\n            as first \r\n            into (/IndividualSurvey)[1]'') \r\n        FROM inserted \r\n        WHERE [Person].[Person].[BusinessEntityID] = inserted.[BusinessEntityID] \r\n            AND inserted.[Demographics] IS NOT NULL \r\n            AND inserted.[Demographics].exist(N''declare default element namespace \r\n                \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \r\n                /IndividualSurvey/TotalPurchaseYTD'') <> 1;\r\n    END;\r\nEND;\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "ALTER TABLE [Person].[Person] ENABLE TRIGGER [iuPerson]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Person', N'COLUMN',N'BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for Person records.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Person', N'COLUMN',N'PersonType'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary type of person: SC = Store Contact, IN = Individual (retail) customer, SP = Sales person, EM = Employee (non-sales), VC = Vendor contact, GC = General contact' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'COLUMN',@level2name=N'PersonType'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Person', N'COLUMN',N'NameStyle'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'0 = The data in FirstName and LastName are stored in western style (first name, last name) order.  1 = Eastern style (last name, first name) order.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'COLUMN',@level2name=N'NameStyle'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Person', N'COLUMN',N'Title'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A courtesy title. For example, Mr. or Ms.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'COLUMN',@level2name=N'Title'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Person', N'COLUMN',N'FirstName'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'First name of the person.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'COLUMN',@level2name=N'FirstName'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Person', N'COLUMN',N'MiddleName'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Middle name or middle initial of the person.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'COLUMN',@level2name=N'MiddleName'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Person', N'COLUMN',N'LastName'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Last name of the person.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'COLUMN',@level2name=N'LastName'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Person', N'COLUMN',N'Suffix'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Surname suffix. For example, Sr. or Jr.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'COLUMN',@level2name=N'Suffix'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Person', N'COLUMN',N'EmailPromotion'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'0 = Contact does not wish to receive e-mail promotions, 1 = Contact does wish to receive e-mail promotions from AdventureWorks, 2 = Contact does wish to receive e-mail promotions from AdventureWorks and selected partners. ' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'COLUMN',@level2name=N'EmailPromotion'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Person', N'COLUMN',N'AdditionalContactInfo'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Additional contact information about the person stored in xml format. ' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'COLUMN',@level2name=N'AdditionalContactInfo'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Person', N'COLUMN',N'Demographics'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Personal information such as hobbies, and income collected from online shoppers. Used for sales analysis.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'COLUMN',@level2name=N'Demographics'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Person', N'COLUMN',N'rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'COLUMN',@level2name=N'rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Person', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Person', N'INDEX',N'AK_Person_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'INDEX',@level2name=N'AK_Person_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Person', N'INDEX',N'PXML_Person_AddContact'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary XML index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'INDEX',@level2name=N'PXML_Person_AddContact'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Person', N'INDEX',N'PXML_Person_Demographics'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary XML index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'INDEX',@level2name=N'PXML_Person_Demographics'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Person', N'INDEX',N'XMLPATH_Person_Demographics'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Secondary XML index for path.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'INDEX',@level2name=N'XMLPATH_Person_Demographics'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Person', N'INDEX',N'XMLPROPERTY_Person_Demographics'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Secondary XML index for property.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'INDEX',@level2name=N'XMLPROPERTY_Person_Demographics'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Person', N'INDEX',N'XMLVALUE_Person_Demographics'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Secondary XML index for value.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'INDEX',@level2name=N'XMLVALUE_Person_Demographics'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Person', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Human beings involved with AdventureWorks: employees, customer contacts, and vendor contacts.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Person', N'TRIGGER',N'iuPerson'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'AFTER INSERT, UPDATE trigger inserting Individual only if the Customer does not exist in the Store table and setting the ModifiedDate column in the Person table to the current date.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'TRIGGER',@level2name=N'iuPerson'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [HumanResources].[Employee]    Script Date: 9/26/2023 12:09:58 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[HumanResources].[Employee]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [HumanResources].[Employee](\r\n\t[BusinessEntityID] [int] NOT NULL,\r\n\t[NationalIDNumber] [nvarchar](15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[LoginID] [nvarchar](256) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[OrganizationNode] [hierarchyid] NULL,\r\n\t[OrganizationLevel]  AS ([OrganizationNode].[GetLevel]()),\r\n\t[JobTitle] [nvarchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[BirthDate] [date] NOT NULL,\r\n\t[MaritalStatus] [nchar](1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[Gender] [nchar](1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[HireDate] [date] NOT NULL,\r\n\t[SalariedFlag] [dbo].[Flag] NOT NULL,\r\n\t[VacationHours] [smallint] NOT NULL,\r\n\t[SickLeaveHours] [smallint] NOT NULL,\r\n\t[CurrentFlag] [dbo].[Flag] NOT NULL,\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_Employee_BusinessEntityID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[BusinessEntityID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[HumanResources].[Employee]') AND name = N'AK_Employee_LoginID')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Employee_LoginID] ON [HumanResources].[Employee]\r\n(\r\n\t[LoginID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[HumanResources].[Employee]') AND name = N'AK_Employee_NationalIDNumber')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Employee_NationalIDNumber] ON [HumanResources].[Employee]\r\n(\r\n\t[NationalIDNumber] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[HumanResources].[Employee]') AND name = N'AK_Employee_rowguid')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Employee_rowguid] ON [HumanResources].[Employee]\r\n(\r\n\t[rowguid] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ARITHABORT ON\r\nSET CONCAT_NULL_YIELDS_NULL ON\r\nSET QUOTED_IDENTIFIER ON\r\nSET ANSI_NULLS ON\r\nSET ANSI_PADDING ON\r\nSET ANSI_WARNINGS ON\r\nSET NUMERIC_ROUNDABORT OFF",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[HumanResources].[Employee]') AND name = N'IX_Employee_OrganizationLevel_OrganizationNode')\r\nCREATE NONCLUSTERED INDEX [IX_Employee_OrganizationLevel_OrganizationNode] ON [HumanResources].[Employee]\r\n(\r\n\t[OrganizationLevel] ASC,\r\n\t[OrganizationNode] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[HumanResources].[Employee]') AND name = N'IX_Employee_OrganizationNode')\r\nCREATE NONCLUSTERED INDEX [IX_Employee_OrganizationNode] ON [HumanResources].[Employee]\r\n(\r\n\t[OrganizationNode] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[HumanResources].[DF_Employee_SalariedFlag]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [HumanResources].[Employee] ADD  CONSTRAINT [DF_Employee_SalariedFlag]  DEFAULT ((1)) FOR [SalariedFlag]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[HumanResources].[DF_Employee_VacationHours]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [HumanResources].[Employee] ADD  CONSTRAINT [DF_Employee_VacationHours]  DEFAULT ((0)) FOR [VacationHours]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[HumanResources].[DF_Employee_SickLeaveHours]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [HumanResources].[Employee] ADD  CONSTRAINT [DF_Employee_SickLeaveHours]  DEFAULT ((0)) FOR [SickLeaveHours]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[HumanResources].[DF_Employee_CurrentFlag]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [HumanResources].[Employee] ADD  CONSTRAINT [DF_Employee_CurrentFlag]  DEFAULT ((1)) FOR [CurrentFlag]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[HumanResources].[DF_Employee_rowguid]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [HumanResources].[Employee] ADD  CONSTRAINT [DF_Employee_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[HumanResources].[DF_Employee_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [HumanResources].[Employee] ADD  CONSTRAINT [DF_Employee_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.triggers WHERE object_id = OBJECT_ID(N'[HumanResources].[dEmployee]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE TRIGGER [HumanResources].[dEmployee] ON [HumanResources].[Employee] \r\nINSTEAD OF DELETE NOT FOR REPLICATION AS \r\nBEGIN\r\n    DECLARE @Count int;\r\n\r\n    SET @Count = @@ROWCOUNT;\r\n    IF @Count = 0 \r\n        RETURN;\r\n\r\n    SET NOCOUNT ON;\r\n\r\n    BEGIN\r\n        RAISERROR\r\n            (N''Employees cannot be deleted. They can only be marked as not current.'', -- Message\r\n            10, -- Severity.\r\n            1); -- State.\r\n\r\n        -- Rollback any active or uncommittable transactions\r\n        IF @@TRANCOUNT > 0\r\n        BEGIN\r\n            ROLLBACK TRANSACTION;\r\n        END\r\n    END;\r\nEND;\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "ALTER TABLE [HumanResources].[Employee] ENABLE TRIGGER [dEmployee]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'COLUMN',N'BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for Employee records.  Foreign key to BusinessEntity.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'COLUMN',N'NationalIDNumber'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique national identification number such as a social security number.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'NationalIDNumber'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'COLUMN',N'LoginID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Network login.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'LoginID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'COLUMN',N'OrganizationNode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Where the employee is located in corporate hierarchy.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'OrganizationNode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'COLUMN',N'OrganizationLevel'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The depth of the employee in the corporate hierarchy.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'OrganizationLevel'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'COLUMN',N'JobTitle'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Work title such as Buyer or Sales Representative.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'JobTitle'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'COLUMN',N'BirthDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date of birth.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'BirthDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'COLUMN',N'MaritalStatus'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'M = Married, S = Single' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'MaritalStatus'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'COLUMN',N'Gender'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'M = Male, F = Female' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'Gender'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'COLUMN',N'HireDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Employee hired on this date.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'HireDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'COLUMN',N'SalariedFlag'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Job classification. 0 = Hourly, not exempt from collective bargaining. 1 = Salaried, exempt from collective bargaining.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'SalariedFlag'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'COLUMN',N'VacationHours'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Number of available vacation hours.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'VacationHours'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'COLUMN',N'SickLeaveHours'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Number of available sick leave hours.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'SickLeaveHours'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'COLUMN',N'CurrentFlag'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'0 = Inactive, 1 = Active' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'CurrentFlag'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'COLUMN',N'rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'INDEX',N'AK_Employee_LoginID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'INDEX',@level2name=N'AK_Employee_LoginID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'INDEX',N'AK_Employee_NationalIDNumber'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'INDEX',@level2name=N'AK_Employee_NationalIDNumber'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'INDEX',N'AK_Employee_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'INDEX',@level2name=N'AK_Employee_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'INDEX',N'IX_Employee_OrganizationLevel_OrganizationNode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'INDEX',@level2name=N'IX_Employee_OrganizationLevel_OrganizationNode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'INDEX',N'IX_Employee_OrganizationNode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'INDEX',@level2name=N'IX_Employee_OrganizationNode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Employee information such as salary, department, and title.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'TRIGGER',N'dEmployee'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'INSTEAD OF DELETE trigger which keeps Employees from being deleted.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'TRIGGER',@level2name=N'dEmployee'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  StoredProcedure [dbo].[uspGetEmployeeManagers]    Script Date: 9/26/2023 12:09:58 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[uspGetEmployeeManagers]') AND type in (N'P', N'PC'))\r\nBEGIN\r\nEXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[uspGetEmployeeManagers] AS' \r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "ALTER PROCEDURE [dbo].[uspGetEmployeeManagers]\r\n    @BusinessEntityID [int]\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Use recursive query to list out all Employees required for a particular Manager\r\n    WITH [EMP_cte]([BusinessEntityID], [OrganizationNode], [FirstName], [LastName], [JobTitle], [RecursionLevel]) -- CTE name and columns\r\n    AS (\r\n        SELECT e.[BusinessEntityID], e.[OrganizationNode], p.[FirstName], p.[LastName], e.[JobTitle], 0 -- Get the initial Employee\r\n        FROM [HumanResources].[Employee] e \r\n\t\t\tINNER JOIN [Person].[Person] as p\r\n\t\t\tON p.[BusinessEntityID] = e.[BusinessEntityID]\r\n        WHERE e.[BusinessEntityID] = @BusinessEntityID\r\n        UNION ALL\r\n        SELECT e.[BusinessEntityID], e.[OrganizationNode], p.[FirstName], p.[LastName], e.[JobTitle], [RecursionLevel] + 1 -- Join recursive member to anchor\r\n        FROM [HumanResources].[Employee] e \r\n            INNER JOIN [EMP_cte]\r\n            ON e.[OrganizationNode] = [EMP_cte].[OrganizationNode].GetAncestor(1)\r\n            INNER JOIN [Person].[Person] p \r\n            ON p.[BusinessEntityID] = e.[BusinessEntityID]\r\n    )\r\n    -- Join back to Employee to return the manager name \r\n    SELECT [EMP_cte].[RecursionLevel], [EMP_cte].[BusinessEntityID], [EMP_cte].[FirstName], [EMP_cte].[LastName], \r\n        [EMP_cte].[OrganizationNode].ToString() AS [OrganizationNode], p.[FirstName] AS 'ManagerFirstName', p.[LastName] AS 'ManagerLastName'  -- Outer select from the CTE\r\n    FROM [EMP_cte] \r\n        INNER JOIN [HumanResources].[Employee] e \r\n        ON [EMP_cte].[OrganizationNode].GetAncestor(1) = e.[OrganizationNode]\r\n        INNER JOIN [Person].[Person] p \r\n        ON p.[BusinessEntityID] = e.[BusinessEntityID]\r\n    ORDER BY [RecursionLevel], [EMP_cte].[OrganizationNode].ToString()\r\n    OPTION (MAXRECURSION 25) \r\nEND;",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'PROCEDURE',N'uspGetEmployeeManagers', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Stored procedure using a recursive query to return the direct and indirect managers of the specified employee.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'PROCEDURE',@level1name=N'uspGetEmployeeManagers'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'PROCEDURE',N'uspGetEmployeeManagers', N'PARAMETER',N'@BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the stored procedure uspGetEmployeeManagers. Enter a valid BusinessEntityID from the HumanResources.Employee table.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'PROCEDURE',@level1name=N'uspGetEmployeeManagers', @level2type=N'PARAMETER',@level2name=N'@BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  StoredProcedure [dbo].[uspGetManagerEmployees]    Script Date: 9/26/2023 12:09:58 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[uspGetManagerEmployees]') AND type in (N'P', N'PC'))\r\nBEGIN\r\nEXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[uspGetManagerEmployees] AS' \r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "ALTER PROCEDURE [dbo].[uspGetManagerEmployees]\r\n    @BusinessEntityID [int]\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Use recursive query to list out all Employees required for a particular Manager\r\n    WITH [EMP_cte]([BusinessEntityID], [OrganizationNode], [FirstName], [LastName], [RecursionLevel]) -- CTE name and columns\r\n    AS (\r\n        SELECT e.[BusinessEntityID], e.[OrganizationNode], p.[FirstName], p.[LastName], 0 -- Get the initial list of Employees for Manager n\r\n        FROM [HumanResources].[Employee] e \r\n\t\t\tINNER JOIN [Person].[Person] p \r\n\t\t\tON p.[BusinessEntityID] = e.[BusinessEntityID]\r\n        WHERE e.[BusinessEntityID] = @BusinessEntityID\r\n        UNION ALL\r\n        SELECT e.[BusinessEntityID], e.[OrganizationNode], p.[FirstName], p.[LastName], [RecursionLevel] + 1 -- Join recursive member to anchor\r\n        FROM [HumanResources].[Employee] e \r\n            INNER JOIN [EMP_cte]\r\n            ON e.[OrganizationNode].GetAncestor(1) = [EMP_cte].[OrganizationNode]\r\n\t\t\tINNER JOIN [Person].[Person] p \r\n\t\t\tON p.[BusinessEntityID] = e.[BusinessEntityID]\r\n        )\r\n    -- Join back to Employee to return the manager name \r\n    SELECT [EMP_cte].[RecursionLevel], [EMP_cte].[OrganizationNode].ToString() as [OrganizationNode], p.[FirstName] AS 'ManagerFirstName', p.[LastName] AS 'ManagerLastName',\r\n        [EMP_cte].[BusinessEntityID], [EMP_cte].[FirstName], [EMP_cte].[LastName] -- Outer select from the CTE\r\n    FROM [EMP_cte] \r\n        INNER JOIN [HumanResources].[Employee] e \r\n        ON [EMP_cte].[OrganizationNode].GetAncestor(1) = e.[OrganizationNode]\r\n\t\t\tINNER JOIN [Person].[Person] p \r\n\t\t\tON p.[BusinessEntityID] = e.[BusinessEntityID]\r\n    ORDER BY [RecursionLevel], [EMP_cte].[OrganizationNode].ToString()\r\n    OPTION (MAXRECURSION 25) \r\nEND;",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'PROCEDURE',N'uspGetManagerEmployees', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Stored procedure using a recursive query to return the direct and indirect employees of the specified manager.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'PROCEDURE',@level1name=N'uspGetManagerEmployees'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'PROCEDURE',N'uspGetManagerEmployees', N'PARAMETER',N'@BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the stored procedure uspGetManagerEmployees. Enter a valid BusinessEntityID of the manager from the HumanResources.Employee table.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'PROCEDURE',@level1name=N'uspGetManagerEmployees', @level2type=N'PARAMETER',@level2name=N'@BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  StoredProcedure [dbo].[uspGetWhereUsedProductID]    Script Date: 9/26/2023 12:09:58 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[uspGetWhereUsedProductID]') AND type in (N'P', N'PC'))\r\nBEGIN\r\nEXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[uspGetWhereUsedProductID] AS' \r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "ALTER PROCEDURE [dbo].[uspGetWhereUsedProductID]\r\n    @StartProductID [int],\r\n    @CheckDate [datetime]\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    --Use recursive query to generate a multi-level Bill of Material (i.e. all level 1 components of a level 0 assembly, all level 2 components of a level 1 assembly)\r\n    WITH [BOM_cte]([ProductAssemblyID], [ComponentID], [ComponentDesc], [PerAssemblyQty], [StandardCost], [ListPrice], [BOMLevel], [RecursionLevel]) -- CTE name and columns\r\n    AS (\r\n        SELECT b.[ProductAssemblyID], b.[ComponentID], p.[Name], b.[PerAssemblyQty], p.[StandardCost], p.[ListPrice], b.[BOMLevel], 0 -- Get the initial list of components for the bike assembly\r\n        FROM [Production].[BillOfMaterials] b\r\n            INNER JOIN [Production].[Product] p \r\n            ON b.[ProductAssemblyID] = p.[ProductID] \r\n        WHERE b.[ComponentID] = @StartProductID \r\n            AND @CheckDate >= b.[StartDate] \r\n            AND @CheckDate <= ISNULL(b.[EndDate], @CheckDate)\r\n        UNION ALL\r\n        SELECT b.[ProductAssemblyID], b.[ComponentID], p.[Name], b.[PerAssemblyQty], p.[StandardCost], p.[ListPrice], b.[BOMLevel], [RecursionLevel] + 1 -- Join recursive member to anchor\r\n        FROM [BOM_cte] cte\r\n            INNER JOIN [Production].[BillOfMaterials] b \r\n            ON cte.[ProductAssemblyID] = b.[ComponentID]\r\n            INNER JOIN [Production].[Product] p \r\n            ON b.[ProductAssemblyID] = p.[ProductID] \r\n        WHERE @CheckDate >= b.[StartDate] \r\n            AND @CheckDate <= ISNULL(b.[EndDate], @CheckDate)\r\n        )\r\n    -- Outer select from the CTE\r\n    SELECT b.[ProductAssemblyID], b.[ComponentID], b.[ComponentDesc], SUM(b.[PerAssemblyQty]) AS [TotalQuantity] , b.[StandardCost], b.[ListPrice], b.[BOMLevel], b.[RecursionLevel]\r\n    FROM [BOM_cte] b\r\n    GROUP BY b.[ComponentID], b.[ComponentDesc], b.[ProductAssemblyID], b.[BOMLevel], b.[RecursionLevel], b.[StandardCost], b.[ListPrice]\r\n    ORDER BY b.[BOMLevel], b.[ProductAssemblyID], b.[ComponentID]\r\n    OPTION (MAXRECURSION 25) \r\nEND;",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'PROCEDURE',N'uspGetWhereUsedProductID', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Stored procedure using a recursive query to return all components or assemblies that directly or indirectly use the specified ProductID.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'PROCEDURE',@level1name=N'uspGetWhereUsedProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'PROCEDURE',N'uspGetWhereUsedProductID', N'PARAMETER',N'@StartProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the stored procedure uspGetWhereUsedProductID. Enter a valid ProductID from the Production.Product table.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'PROCEDURE',@level1name=N'uspGetWhereUsedProductID', @level2type=N'PARAMETER',@level2name=N'@StartProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'PROCEDURE',N'uspGetWhereUsedProductID', N'PARAMETER',N'@CheckDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the stored procedure uspGetWhereUsedProductID used to eliminate components not used after that date. Enter a valid date.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'PROCEDURE',@level1name=N'uspGetWhereUsedProductID', @level2type=N'PARAMETER',@level2name=N'@CheckDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [HumanResources].[EmployeePayHistory]    Script Date: 9/26/2023 12:09:58 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[HumanResources].[EmployeePayHistory]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [HumanResources].[EmployeePayHistory](\r\n\t[BusinessEntityID] [int] NOT NULL,\r\n\t[RateChangeDate] [datetime] NOT NULL,\r\n\t[Rate] [money] NOT NULL,\r\n\t[PayFrequency] [tinyint] NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_EmployeePayHistory_BusinessEntityID_RateChangeDate] PRIMARY KEY CLUSTERED \r\n(\r\n\t[BusinessEntityID] ASC,\r\n\t[RateChangeDate] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[HumanResources].[DF_EmployeePayHistory_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [HumanResources].[EmployeePayHistory] ADD  CONSTRAINT [DF_EmployeePayHistory_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'EmployeePayHistory', N'COLUMN',N'BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Employee identification number. Foreign key to Employee.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeePayHistory', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'EmployeePayHistory', N'COLUMN',N'RateChangeDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date the change in pay is effective' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeePayHistory', @level2type=N'COLUMN',@level2name=N'RateChangeDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'EmployeePayHistory', N'COLUMN',N'Rate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Salary hourly rate.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeePayHistory', @level2type=N'COLUMN',@level2name=N'Rate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'EmployeePayHistory', N'COLUMN',N'PayFrequency'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'1 = Salary received monthly, 2 = Salary received biweekly' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeePayHistory', @level2type=N'COLUMN',@level2name=N'PayFrequency'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'EmployeePayHistory', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeePayHistory', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'EmployeePayHistory', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Employee pay history.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeePayHistory'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [dbo].[ErrorLog]    Script Date: 9/26/2023 12:09:58 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ErrorLog]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [dbo].[ErrorLog](\r\n\t[ErrorLogID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[ErrorTime] [datetime] NOT NULL,\r\n\t[UserName] [sysname] COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[ErrorNumber] [int] NOT NULL,\r\n\t[ErrorSeverity] [int] NULL,\r\n\t[ErrorState] [int] NULL,\r\n\t[ErrorProcedure] [nvarchar](126) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n\t[ErrorLine] [int] NULL,\r\n\t[ErrorMessage] [nvarchar](4000) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n CONSTRAINT [PK_ErrorLog_ErrorLogID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[ErrorLogID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DF_ErrorLog_ErrorTime]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [dbo].[ErrorLog] ADD  CONSTRAINT [DF_ErrorLog_ErrorTime]  DEFAULT (getdate()) FOR [ErrorTime]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'ErrorLog', N'COLUMN',N'ErrorLogID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for ErrorLog records.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'ErrorLog', @level2type=N'COLUMN',@level2name=N'ErrorLogID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'ErrorLog', N'COLUMN',N'ErrorTime'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date and time at which the error occurred.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'ErrorLog', @level2type=N'COLUMN',@level2name=N'ErrorTime'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'ErrorLog', N'COLUMN',N'UserName'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The user who executed the batch in which the error occurred.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'ErrorLog', @level2type=N'COLUMN',@level2name=N'UserName'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'ErrorLog', N'COLUMN',N'ErrorNumber'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The error number of the error that occurred.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'ErrorLog', @level2type=N'COLUMN',@level2name=N'ErrorNumber'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'ErrorLog', N'COLUMN',N'ErrorSeverity'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The severity of the error that occurred.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'ErrorLog', @level2type=N'COLUMN',@level2name=N'ErrorSeverity'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'ErrorLog', N'COLUMN',N'ErrorState'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The state number of the error that occurred.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'ErrorLog', @level2type=N'COLUMN',@level2name=N'ErrorState'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'ErrorLog', N'COLUMN',N'ErrorProcedure'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name of the stored procedure or trigger where the error occurred.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'ErrorLog', @level2type=N'COLUMN',@level2name=N'ErrorProcedure'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'ErrorLog', N'COLUMN',N'ErrorLine'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The line number at which the error occurred.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'ErrorLog', @level2type=N'COLUMN',@level2name=N'ErrorLine'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'ErrorLog', N'COLUMN',N'ErrorMessage'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The message text of the error that occurred.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'ErrorLog', @level2type=N'COLUMN',@level2name=N'ErrorMessage'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'ErrorLog', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Audit table tracking errors in the the AdventureWorks database that are caught by the CATCH block of a TRY...CATCH construct. Data is inserted by stored procedure dbo.uspLogError when it is executed from inside the CATCH block of a TRY...CATCH construct.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'ErrorLog'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  StoredProcedure [dbo].[uspPrintError]    Script Date: 9/26/2023 12:09:58 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[uspPrintError]') AND type in (N'P', N'PC'))\r\nBEGIN\r\nEXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[uspPrintError] AS' \r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "-- uspPrintError prints error information about the error that caused \r\n-- execution to jump to the CATCH block of a TRY...CATCH construct. \r\n-- Should be executed from within the scope of a CATCH block otherwise \r\n-- it will return without printing any error information.\r\nALTER PROCEDURE [dbo].[uspPrintError] \r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Print error information. \r\n    PRINT 'Error ' + CONVERT(varchar(50), ERROR_NUMBER()) +\r\n          ', Severity ' + CONVERT(varchar(5), ERROR_SEVERITY()) +\r\n          ', State ' + CONVERT(varchar(5), ERROR_STATE()) + \r\n          ', Procedure ' + ISNULL(ERROR_PROCEDURE(), '-') + \r\n          ', Line ' + CONVERT(varchar(5), ERROR_LINE());\r\n    PRINT ERROR_MESSAGE();\r\nEND;",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'PROCEDURE',N'uspPrintError', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Prints error information about the error that caused execution to jump to the CATCH block of a TRY...CATCH construct. Should be executed from within the scope of a CATCH block otherwise it will return without printing any error information.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'PROCEDURE',@level1name=N'uspPrintError'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  StoredProcedure [dbo].[uspLogError]    Script Date: 9/26/2023 12:09:58 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[uspLogError]') AND type in (N'P', N'PC'))\r\nBEGIN\r\nEXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[uspLogError] AS' \r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "-- uspLogError logs error information in the ErrorLog table about the \r\n-- error that caused execution to jump to the CATCH block of a \r\n-- TRY...CATCH construct. This should be executed from within the scope \r\n-- of a CATCH block otherwise it will return without inserting error \r\n-- information. \r\nALTER PROCEDURE [dbo].[uspLogError] \r\n    @ErrorLogID [int] = 0 OUTPUT -- contains the ErrorLogID of the row inserted\r\nAS                               -- by uspLogError in the ErrorLog table\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Output parameter value of 0 indicates that error \r\n    -- information was not logged\r\n    SET @ErrorLogID = 0;\r\n\r\n    BEGIN TRY\r\n        -- Return if there is no error information to log\r\n        IF ERROR_NUMBER() IS NULL\r\n            RETURN;\r\n\r\n        -- Return if inside an uncommittable transaction.\r\n        -- Data insertion/modification is not allowed when \r\n        -- a transaction is in an uncommittable state.\r\n        IF XACT_STATE() = -1\r\n        BEGIN\r\n            PRINT 'Cannot log error since the current transaction is in an uncommittable state. ' \r\n                + 'Rollback the transaction before executing uspLogError in order to successfully log error information.';\r\n            RETURN;\r\n        END\r\n\r\n        INSERT [dbo].[ErrorLog] \r\n            (\r\n            [UserName], \r\n            [ErrorNumber], \r\n            [ErrorSeverity], \r\n            [ErrorState], \r\n            [ErrorProcedure], \r\n            [ErrorLine], \r\n            [ErrorMessage]\r\n            ) \r\n        VALUES \r\n            (\r\n            CONVERT(sysname, CURRENT_USER), \r\n            ERROR_NUMBER(),\r\n            ERROR_SEVERITY(),\r\n            ERROR_STATE(),\r\n            ERROR_PROCEDURE(),\r\n            ERROR_LINE(),\r\n            ERROR_MESSAGE()\r\n            );\r\n\r\n        -- Pass back the ErrorLogID of the row inserted\r\n        SET @ErrorLogID = @@IDENTITY;\r\n    END TRY\r\n    BEGIN CATCH\r\n        PRINT 'An error occurred in stored procedure uspLogError: ';\r\n        EXECUTE [dbo].[uspPrintError];\r\n        RETURN -1;\r\n    END CATCH\r\nEND;",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'PROCEDURE',N'uspLogError', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Logs error information in the ErrorLog table about the error that caused execution to jump to the CATCH block of a TRY...CATCH construct. Should be executed from within the scope of a CATCH block otherwise it will return without inserting error information.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'PROCEDURE',@level1name=N'uspLogError'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'PROCEDURE',N'uspLogError', N'PARAMETER',N'@ErrorLogID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Output parameter for the stored procedure uspLogError. Contains the ErrorLogID value corresponding to the row inserted by uspLogError in the ErrorLog table.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'PROCEDURE',@level1name=N'uspLogError', @level2type=N'PARAMETER',@level2name=N'@ErrorLogID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  StoredProcedure [HumanResources].[uspUpdateEmployeeHireInfo]    Script Date: 9/26/2023 12:09:58 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[HumanResources].[uspUpdateEmployeeHireInfo]') AND type in (N'P', N'PC'))\r\nBEGIN\r\nEXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [HumanResources].[uspUpdateEmployeeHireInfo] AS' \r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "ALTER PROCEDURE [HumanResources].[uspUpdateEmployeeHireInfo]\r\n    @BusinessEntityID [int], \r\n    @JobTitle [nvarchar](50), \r\n    @HireDate [datetime], \r\n    @RateChangeDate [datetime], \r\n    @Rate [money], \r\n    @PayFrequency [tinyint], \r\n    @CurrentFlag [dbo].[Flag] \r\nWITH EXECUTE AS CALLER\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    BEGIN TRY\r\n        BEGIN TRANSACTION;\r\n\r\n        UPDATE [HumanResources].[Employee] \r\n        SET [JobTitle] = @JobTitle \r\n            ,[HireDate] = @HireDate \r\n            ,[CurrentFlag] = @CurrentFlag \r\n        WHERE [BusinessEntityID] = @BusinessEntityID;\r\n\r\n        INSERT INTO [HumanResources].[EmployeePayHistory] \r\n            ([BusinessEntityID]\r\n            ,[RateChangeDate]\r\n            ,[Rate]\r\n            ,[PayFrequency]) \r\n        VALUES (@BusinessEntityID, @RateChangeDate, @Rate, @PayFrequency);\r\n\r\n        COMMIT TRANSACTION;\r\n    END TRY\r\n    BEGIN CATCH\r\n        -- Rollback any active or uncommittable transactions before\r\n        -- inserting information in the ErrorLog\r\n        IF @@TRANCOUNT > 0\r\n        BEGIN\r\n            ROLLBACK TRANSACTION;\r\n        END\r\n\r\n        EXECUTE [dbo].[uspLogError];\r\n    END CATCH;\r\nEND;",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'PROCEDURE',N'uspUpdateEmployeeHireInfo', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Updates the Employee table and inserts a new row in the EmployeePayHistory table with the values specified in the input parameters.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'PROCEDURE',@level1name=N'uspUpdateEmployeeHireInfo'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'PROCEDURE',N'uspUpdateEmployeeHireInfo', N'PARAMETER',N'@BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the stored procedure uspUpdateEmployeeHireInfo. Enter a valid BusinessEntityID from the Employee table.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'PROCEDURE',@level1name=N'uspUpdateEmployeeHireInfo', @level2type=N'PARAMETER',@level2name=N'@BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'PROCEDURE',N'uspUpdateEmployeeHireInfo', N'PARAMETER',N'@JobTitle'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the stored procedure uspUpdateEmployeeHireInfo. Enter a title for the employee.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'PROCEDURE',@level1name=N'uspUpdateEmployeeHireInfo', @level2type=N'PARAMETER',@level2name=N'@JobTitle'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'PROCEDURE',N'uspUpdateEmployeeHireInfo', N'PARAMETER',N'@HireDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the stored procedure uspUpdateEmployeeHireInfo. Enter a hire date for the employee.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'PROCEDURE',@level1name=N'uspUpdateEmployeeHireInfo', @level2type=N'PARAMETER',@level2name=N'@HireDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'PROCEDURE',N'uspUpdateEmployeeHireInfo', N'PARAMETER',N'@RateChangeDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the stored procedure uspUpdateEmployeeHireInfo. Enter the date the rate changed for the employee.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'PROCEDURE',@level1name=N'uspUpdateEmployeeHireInfo', @level2type=N'PARAMETER',@level2name=N'@RateChangeDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'PROCEDURE',N'uspUpdateEmployeeHireInfo', N'PARAMETER',N'@Rate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the stored procedure uspUpdateEmployeeHireInfo. Enter the new rate for the employee.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'PROCEDURE',@level1name=N'uspUpdateEmployeeHireInfo', @level2type=N'PARAMETER',@level2name=N'@Rate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'PROCEDURE',N'uspUpdateEmployeeHireInfo', N'PARAMETER',N'@PayFrequency'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the stored procedure uspUpdateEmployeeHireInfo. Enter the pay frequency for the employee.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'PROCEDURE',@level1name=N'uspUpdateEmployeeHireInfo', @level2type=N'PARAMETER',@level2name=N'@PayFrequency'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'PROCEDURE',N'uspUpdateEmployeeHireInfo', N'PARAMETER',N'@CurrentFlag'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the stored procedure uspUpdateEmployeeHireInfo. Enter the current flag for the employee.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'PROCEDURE',@level1name=N'uspUpdateEmployeeHireInfo', @level2type=N'PARAMETER',@level2name=N'@CurrentFlag'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  StoredProcedure [HumanResources].[uspUpdateEmployeeLogin]    Script Date: 9/26/2023 12:09:58 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[HumanResources].[uspUpdateEmployeeLogin]') AND type in (N'P', N'PC'))\r\nBEGIN\r\nEXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [HumanResources].[uspUpdateEmployeeLogin] AS' \r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "ALTER PROCEDURE [HumanResources].[uspUpdateEmployeeLogin]\r\n    @BusinessEntityID [int], \r\n    @OrganizationNode [hierarchyid],\r\n    @LoginID [nvarchar](256),\r\n    @JobTitle [nvarchar](50),\r\n    @HireDate [datetime],\r\n    @CurrentFlag [dbo].[Flag]\r\nWITH EXECUTE AS CALLER\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    BEGIN TRY\r\n        UPDATE [HumanResources].[Employee] \r\n        SET [OrganizationNode] = @OrganizationNode \r\n            ,[LoginID] = @LoginID \r\n            ,[JobTitle] = @JobTitle \r\n            ,[HireDate] = @HireDate \r\n            ,[CurrentFlag] = @CurrentFlag \r\n        WHERE [BusinessEntityID] = @BusinessEntityID;\r\n    END TRY\r\n    BEGIN CATCH\r\n        EXECUTE [dbo].[uspLogError];\r\n    END CATCH;\r\nEND;",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'PROCEDURE',N'uspUpdateEmployeeLogin', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Updates the Employee table with the values specified in the input parameters for the given BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'PROCEDURE',@level1name=N'uspUpdateEmployeeLogin'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'PROCEDURE',N'uspUpdateEmployeeLogin', N'PARAMETER',N'@BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the stored procedure uspUpdateEmployeeLogin. Enter a valid EmployeeID from the Employee table.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'PROCEDURE',@level1name=N'uspUpdateEmployeeLogin', @level2type=N'PARAMETER',@level2name=N'@BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'PROCEDURE',N'uspUpdateEmployeeLogin', N'PARAMETER',N'@OrganizationNode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the stored procedure uspUpdateEmployeeHireInfo. Enter a valid ManagerID for the employee.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'PROCEDURE',@level1name=N'uspUpdateEmployeeLogin', @level2type=N'PARAMETER',@level2name=N'@OrganizationNode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'PROCEDURE',N'uspUpdateEmployeeLogin', N'PARAMETER',N'@LoginID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the stored procedure uspUpdateEmployeeHireInfo. Enter a valid login for the employee.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'PROCEDURE',@level1name=N'uspUpdateEmployeeLogin', @level2type=N'PARAMETER',@level2name=N'@LoginID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'PROCEDURE',N'uspUpdateEmployeeLogin', N'PARAMETER',N'@JobTitle'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the stored procedure uspUpdateEmployeeHireInfo. Enter a title for the employee.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'PROCEDURE',@level1name=N'uspUpdateEmployeeLogin', @level2type=N'PARAMETER',@level2name=N'@JobTitle'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'PROCEDURE',N'uspUpdateEmployeeLogin', N'PARAMETER',N'@HireDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the stored procedure uspUpdateEmployeeHireInfo. Enter a hire date for the employee.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'PROCEDURE',@level1name=N'uspUpdateEmployeeLogin', @level2type=N'PARAMETER',@level2name=N'@HireDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'PROCEDURE',N'uspUpdateEmployeeLogin', N'PARAMETER',N'@CurrentFlag'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the stored procedure uspUpdateEmployeeHireInfo. Enter the current flag for the employee.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'PROCEDURE',@level1name=N'uspUpdateEmployeeLogin', @level2type=N'PARAMETER',@level2name=N'@CurrentFlag'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  StoredProcedure [HumanResources].[uspUpdateEmployeePersonalInfo]    Script Date: 9/26/2023 12:09:58 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[HumanResources].[uspUpdateEmployeePersonalInfo]') AND type in (N'P', N'PC'))\r\nBEGIN\r\nEXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [HumanResources].[uspUpdateEmployeePersonalInfo] AS' \r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "ALTER PROCEDURE [HumanResources].[uspUpdateEmployeePersonalInfo]\r\n    @BusinessEntityID [int], \r\n    @NationalIDNumber [nvarchar](15), \r\n    @BirthDate [datetime], \r\n    @MaritalStatus [nchar](1), \r\n    @Gender [nchar](1)\r\nWITH EXECUTE AS CALLER\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    BEGIN TRY\r\n        UPDATE [HumanResources].[Employee] \r\n        SET [NationalIDNumber] = @NationalIDNumber \r\n            ,[BirthDate] = @BirthDate \r\n            ,[MaritalStatus] = @MaritalStatus \r\n            ,[Gender] = @Gender \r\n        WHERE [BusinessEntityID] = @BusinessEntityID;\r\n    END TRY\r\n    BEGIN CATCH\r\n        EXECUTE [dbo].[uspLogError];\r\n    END CATCH;\r\nEND;",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'PROCEDURE',N'uspUpdateEmployeePersonalInfo', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Updates the Employee table with the values specified in the input parameters for the given EmployeeID.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'PROCEDURE',@level1name=N'uspUpdateEmployeePersonalInfo'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'PROCEDURE',N'uspUpdateEmployeePersonalInfo', N'PARAMETER',N'@BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the stored procedure uspUpdateEmployeePersonalInfo. Enter a valid BusinessEntityID from the HumanResources.Employee table.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'PROCEDURE',@level1name=N'uspUpdateEmployeePersonalInfo', @level2type=N'PARAMETER',@level2name=N'@BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'PROCEDURE',N'uspUpdateEmployeePersonalInfo', N'PARAMETER',N'@NationalIDNumber'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the stored procedure uspUpdateEmployeeHireInfo. Enter a national ID for the employee.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'PROCEDURE',@level1name=N'uspUpdateEmployeePersonalInfo', @level2type=N'PARAMETER',@level2name=N'@NationalIDNumber'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'PROCEDURE',N'uspUpdateEmployeePersonalInfo', N'PARAMETER',N'@BirthDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the stored procedure uspUpdateEmployeeHireInfo. Enter a birth date for the employee.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'PROCEDURE',@level1name=N'uspUpdateEmployeePersonalInfo', @level2type=N'PARAMETER',@level2name=N'@BirthDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'PROCEDURE',N'uspUpdateEmployeePersonalInfo', N'PARAMETER',N'@MaritalStatus'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the stored procedure uspUpdateEmployeeHireInfo. Enter a marital status for the employee.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'PROCEDURE',@level1name=N'uspUpdateEmployeePersonalInfo', @level2type=N'PARAMETER',@level2name=N'@MaritalStatus'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'PROCEDURE',N'uspUpdateEmployeePersonalInfo', N'PARAMETER',N'@Gender'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the stored procedure uspUpdateEmployeeHireInfo. Enter a gender for the employee.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'PROCEDURE',@level1name=N'uspUpdateEmployeePersonalInfo', @level2type=N'PARAMETER',@level2name=N'@Gender'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  XmlSchemaCollection [HRResumeSchemaCollection]    Script Date: 9/26/2023 12:09:58 PM ******/\r\nIF NOT EXISTS (SELECT * FROM sys.xml_schema_collections c, sys.schemas s WHERE c.schema_id = s.schema_id AND (quotename(s.name) + '.' + quotename(c.name)) = N'[HumanResources].[HRResumeSchemaCollection]')\r\nCREATE XML SCHEMA COLLECTION [HumanResources].[HRResumeSchemaCollection] AS N'<xsd:schema xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:t=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\" targetNamespace=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\" elementFormDefault=\"qualified\"><xsd:element name=\"Address\" type=\"t:AddressType\" /><xsd:element name=\"Education\" type=\"t:EducationType\" /><xsd:element name=\"Employment\" type=\"t:EmploymentType\" /><xsd:element name=\"Location\" type=\"t:LocationType\" /><xsd:element name=\"Name\" type=\"t:NameType\" /><xsd:element name=\"Resume\" type=\"t:ResumeType\" /><xsd:element name=\"Telephone\" type=\"t:TelephoneType\" /><xsd:complexType name=\"AddressType\"><xsd:complexContent><xsd:restriction base=\"xsd:anyType\"><xsd:sequence><xsd:element name=\"Addr.Type\" type=\"xsd:string\" /><xsd:element name=\"Addr.OrgName\" type=\"xsd:string\" minOccurs=\"0\" /><xsd:element name=\"Addr.Street\" type=\"xsd:string\" maxOccurs=\"unbounded\" /><xsd:element name=\"Addr.Location\"><xsd:complexType><xsd:complexContent><xsd:restriction base=\"xsd:anyType\"><xsd:sequence><xsd:element ref=\"t:Location\" /></xsd:sequence></xsd:restriction></xsd:complexContent></xsd:complexType></xsd:element><xsd:element name=\"Addr.PostalCode\" type=\"xsd:string\" /><xsd:element name=\"Addr.Telephone\" minOccurs=\"0\"><xsd:complexType><xsd:complexContent><xsd:restriction base=\"xsd:anyType\"><xsd:sequence><xsd:element ref=\"t:Telephone\" maxOccurs=\"unbounded\" /></xsd:sequence></xsd:restriction></xsd:complexContent></xsd:complexType></xsd:element></xsd:sequence></xsd:restriction></xsd:complexContent></xsd:complexType><xsd:complexType name=\"EducationType\"><xsd:complexContent><xsd:restriction base=\"xsd:anyType\"><xsd:sequence><xsd:element name=\"Edu.Level\" type=\"xsd:string\" /><xsd:element name=\"Edu.StartDate\" type=\"xsd:date\" /><xsd:element name=\"Edu.EndDate\" type=\"xsd:date\" /><xsd:element name=\"Edu.Degree\" type=\"xsd:string\" minOccurs=\"0\" /><xsd:element name=\"Edu.Major\" type=\"xsd:string\" minOccurs=\"0\" /><xsd:element name=\"Edu.Minor\" type=\"xsd:string\" minOccurs=\"0\" /><xsd:element name=\"Edu.GPA\" type=\"xsd:string\" minOccurs=\"0\" /><xsd:element name=\"Edu.GPAAlternate\" type=\"xsd:decimal\" minOccurs=\"0\" /><xsd:element name=\"Edu.GPAScale\" type=\"xsd:decimal\" minOccurs=\"0\" /><xsd:element name=\"Edu.School\" type=\"xsd:string\" minOccurs=\"0\" /><xsd:element name=\"Edu.Location\" minOccurs=\"0\"><xsd:complexType><xsd:complexContent><xsd:restriction base=\"xsd:anyType\"><xsd:sequence><xsd:element ref=\"t:Location\" /></xsd:sequence></xsd:restriction></xsd:complexContent></xsd:complexType></xsd:element></xsd:sequence></xsd:restriction></xsd:complexContent></xsd:complexType><xsd:complexType name=\"EmploymentType\"><xsd:complexContent><xsd:restriction base=\"xsd:anyType\"><xsd:sequence><xsd:element name=\"Emp.StartDate\" type=\"xsd:date\" minOccurs=\"0\" /><xsd:element name=\"Emp.EndDate\" type=\"xsd:date\" minOccurs=\"0\" /><xsd:element name=\"Emp.OrgName\" type=\"xsd:string\" /><xsd:element name=\"Emp.JobTitle\" type=\"xsd:string\" /><xsd:element name=\"Emp.Responsibility\" type=\"xsd:string\" /><xsd:element name=\"Emp.FunctionCategory\" type=\"xsd:string\" minOccurs=\"0\" /><xsd:element name=\"Emp.IndustryCategory\" type=\"xsd:string\" minOccurs=\"0\" /><xsd:element name=\"Emp.Location\" minOccurs=\"0\"><xsd:complexType><xsd:complexContent><xsd:restriction base=\"xsd:anyType\"><xsd:sequence><xsd:element ref=\"t:Location\" /></xsd:sequence></xsd:restriction></xsd:complexContent></xsd:complexType></xsd:element></xsd:sequence></xsd:restriction></xsd:complexContent></xsd:complexType><xsd:complexType name=\"LocationType\"><xsd:complexContent><xsd:restriction base=\"xsd:anyType\"><xsd:sequence><xsd:element name=\"Loc.CountryRegion\" type=\"xsd:string\" /><xsd:element name=\"Loc.State\" type=\"xsd:string\" minOccurs=\"0\" /><xsd:element name=\"Loc.City\" type=\"xsd:string\" minOccurs=\"0\" /></xsd:sequence></xsd:restriction></xsd:complexContent></xsd:complexType><xsd:complexType name=\"NameType\"><xsd:complexContent><xsd:restriction base=\"xsd:anyType\"><xsd:sequence><xsd:element name=\"Name.Prefix\" type=\"xsd:string\" minOccurs=\"0\" /><xsd:element name=\"Name.First\" type=\"xsd:string\" /><xsd:element name=\"Name.Middle\" type=\"xsd:string\" minOccurs=\"0\" /><xsd:element name=\"Name.Last\" type=\"xsd:string\" /><xsd:element name=\"Name.Suffix\" type=\"xsd:string\" minOccurs=\"0\" /></xsd:sequence></xsd:restriction></xsd:complexContent></xsd:complexType><xsd:complexType name=\"ResumeType\"><xsd:complexContent><xsd:restriction base=\"xsd:anyType\"><xsd:sequence><xsd:element ref=\"t:Name\" /><xsd:element name=\"Skills\" type=\"xsd:string\" minOccurs=\"0\" /><xsd:element ref=\"t:Employment\" maxOccurs=\"unbounded\" /><xsd:element ref=\"t:Education\" maxOccurs=\"unbounded\" /><xsd:element ref=\"t:Address\" maxOccurs=\"unbounded\" /><xsd:element ref=\"t:Telephone\" minOccurs=\"0\" /><xsd:element name=\"EMail\" type=\"xsd:string\" minOccurs=\"0\" /><xsd:element name=\"WebSite\" type=\"xsd:string\" minOccurs=\"0\" /></xsd:sequence></xsd:restriction></xsd:complexContent></xsd:complexType><xsd:complexType name=\"TelephoneType\"><xsd:complexContent><xsd:restriction base=\"xsd:anyType\"><xsd:sequence><xsd:element name=\"Tel.Type\" type=\"xsd:anyType\" minOccurs=\"0\" /><xsd:element name=\"Tel.IntlCode\" type=\"xsd:int\" minOccurs=\"0\" /><xsd:element name=\"Tel.AreaCode\" type=\"xsd:int\" minOccurs=\"0\" /><xsd:element name=\"Tel.Number\" type=\"xsd:string\" /><xsd:element name=\"Tel.Extension\" type=\"xsd:int\" minOccurs=\"0\" /></xsd:sequence></xsd:restriction></xsd:complexContent></xsd:complexType></xsd:schema>'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'XML SCHEMA COLLECTION',N'HRResumeSchemaCollection', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Collection of XML schemas for the Resume column in the HumanResources.JobCandidate table.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'XML SCHEMA COLLECTION',@level1name=N'HRResumeSchemaCollection'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [HumanResources].[JobCandidate]    Script Date: 9/26/2023 12:09:58 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[HumanResources].[JobCandidate]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [HumanResources].[JobCandidate](\r\n\t[JobCandidateID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[BusinessEntityID] [int] NULL,\r\n\t[Resume] [xml](CONTENT [HumanResources].[HRResumeSchemaCollection]) NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_JobCandidate_JobCandidateID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[JobCandidateID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[HumanResources].[JobCandidate]') AND name = N'IX_JobCandidate_BusinessEntityID')\r\nCREATE NONCLUSTERED INDEX [IX_JobCandidate_BusinessEntityID] ON [HumanResources].[JobCandidate]\r\n(\r\n\t[BusinessEntityID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF not EXISTS (SELECT * FROM sys.fulltext_indexes fti WHERE fti.object_id = OBJECT_ID(N'[HumanResources].[JobCandidate]'))\r\nCREATE FULLTEXT INDEX ON [HumanResources].[JobCandidate]\r\nKEY INDEX [PK_JobCandidate_JobCandidateID]ON ([AW2008FullTextCatalog], FILEGROUP [PRIMARY])\r\nWITH (CHANGE_TRACKING = AUTO, STOPLIST = SYSTEM)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[HumanResources].[DF_JobCandidate_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [HumanResources].[JobCandidate] ADD  CONSTRAINT [DF_JobCandidate_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'JobCandidate', N'COLUMN',N'JobCandidateID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for JobCandidate records.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'JobCandidate', @level2type=N'COLUMN',@level2name=N'JobCandidateID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'JobCandidate', N'COLUMN',N'BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Employee identification number if applicant was hired. Foreign key to Employee.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'JobCandidate', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'JobCandidate', N'COLUMN',N'Resume'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Résumé in XML format.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'JobCandidate', @level2type=N'COLUMN',@level2name=N'Resume'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'JobCandidate', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'JobCandidate', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'JobCandidate', N'INDEX',N'IX_JobCandidate_BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'JobCandidate', @level2type=N'INDEX',@level2name=N'IX_JobCandidate_BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'JobCandidate', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Résumés submitted to Human Resources by job applicants.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'JobCandidate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  StoredProcedure [dbo].[uspSearchCandidateResumes]    Script Date: 9/26/2023 12:09:58 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[uspSearchCandidateResumes]') AND type in (N'P', N'PC'))\r\nBEGIN\r\nEXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[uspSearchCandidateResumes] AS' \r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "--A stored procedure which demonstrates integrated full text search\r\n\r\nALTER PROCEDURE [dbo].[uspSearchCandidateResumes]\r\n    @searchString [nvarchar](1000),   \r\n    @useInflectional [bit]=0,\r\n    @useThesaurus [bit]=0,\r\n    @language[int]=0\r\n\r\n\r\nWITH EXECUTE AS CALLER\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n      DECLARE @string nvarchar(1050)\r\n      --setting the lcid to the default instance LCID if needed\r\n      IF @language = NULL OR @language = 0 \r\n      BEGIN \r\n            SELECT @language =CONVERT(int, serverproperty('lcid'))  \r\n      END\r\n      \r\n\r\n            --FREETEXTTABLE case as inflectional and Thesaurus were required\r\n      IF @useThesaurus = 1 AND @useInflectional = 1  \r\n        BEGIN\r\n                  SELECT FT_TBL.[JobCandidateID], KEY_TBL.[RANK] FROM [HumanResources].[JobCandidate] AS FT_TBL \r\n                        INNER JOIN FREETEXTTABLE([HumanResources].[JobCandidate],*, @searchString,LANGUAGE @language) AS KEY_TBL\r\n                   ON  FT_TBL.[JobCandidateID] =KEY_TBL.[KEY]\r\n            END\r\n\r\n      ELSE IF @useThesaurus = 1\r\n            BEGIN\r\n                  SELECT @string ='FORMSOF(THESAURUS,\"'+@searchString +'\"'+')'      \r\n                  SELECT FT_TBL.[JobCandidateID], KEY_TBL.[RANK] FROM [HumanResources].[JobCandidate] AS FT_TBL \r\n                        INNER JOIN CONTAINSTABLE([HumanResources].[JobCandidate],*, @string,LANGUAGE @language) AS KEY_TBL\r\n                   ON  FT_TBL.[JobCandidateID] =KEY_TBL.[KEY]\r\n        END\r\n\r\n      ELSE IF @useInflectional = 1\r\n            BEGIN\r\n                  SELECT @string ='FORMSOF(INFLECTIONAL,\"'+@searchString +'\"'+')'\r\n                  SELECT FT_TBL.[JobCandidateID], KEY_TBL.[RANK] FROM [HumanResources].[JobCandidate] AS FT_TBL \r\n                        INNER JOIN CONTAINSTABLE([HumanResources].[JobCandidate],*, @string,LANGUAGE @language) AS KEY_TBL\r\n                   ON  FT_TBL.[JobCandidateID] =KEY_TBL.[KEY]\r\n        END\r\n  \r\n      ELSE --base case, plain CONTAINSTABLE\r\n            BEGIN\r\n                  SELECT @string='\"'+@searchString +'\"'\r\n                  SELECT FT_TBL.[JobCandidateID],KEY_TBL.[RANK] FROM [HumanResources].[JobCandidate] AS FT_TBL \r\n                        INNER JOIN CONTAINSTABLE([HumanResources].[JobCandidate],*,@string,LANGUAGE @language) AS KEY_TBL\r\n                   ON  FT_TBL.[JobCandidateID] =KEY_TBL.[KEY]\r\n            END\r\n\r\nEND;",
          "ExecutionSucceeded": false,
          "ResultMessage": "Cannot use a CONTAINS or FREETEXT predicate on table or indexed view 'HumanResources.JobCandidate' because it is not full-text indexed."
        },
        {
          "CommandText": "/****** Object:  Table [Production].[ScrapReason]    Script Date: 9/26/2023 12:09:58 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[ScrapReason]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Production].[ScrapReason](\r\n\t[ScrapReasonID] [smallint] IDENTITY(1,1) NOT NULL,\r\n\t[Name] [dbo].[Name] NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_ScrapReason_ScrapReasonID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[ScrapReasonID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[ScrapReason]') AND name = N'AK_ScrapReason_Name')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_ScrapReason_Name] ON [Production].[ScrapReason]\r\n(\r\n\t[Name] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_ScrapReason_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[ScrapReason] ADD  CONSTRAINT [DF_ScrapReason_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ScrapReason', N'COLUMN',N'ScrapReasonID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for ScrapReason records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ScrapReason', @level2type=N'COLUMN',@level2name=N'ScrapReasonID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ScrapReason', N'COLUMN',N'Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Failure description.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ScrapReason', @level2type=N'COLUMN',@level2name=N'Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ScrapReason', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ScrapReason', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ScrapReason', N'INDEX',N'AK_ScrapReason_Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ScrapReason', @level2type=N'INDEX',@level2name=N'AK_ScrapReason_Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ScrapReason', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Manufacturing failure reasons lookup table.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ScrapReason'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [HumanResources].[Shift]    Script Date: 9/26/2023 12:09:58 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[HumanResources].[Shift]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [HumanResources].[Shift](\r\n\t[ShiftID] [tinyint] IDENTITY(1,1) NOT NULL,\r\n\t[Name] [dbo].[Name] NOT NULL,\r\n\t[StartTime] [time](7) NOT NULL,\r\n\t[EndTime] [time](7) NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_Shift_ShiftID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[ShiftID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[HumanResources].[Shift]') AND name = N'AK_Shift_Name')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Shift_Name] ON [HumanResources].[Shift]\r\n(\r\n\t[Name] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[HumanResources].[Shift]') AND name = N'AK_Shift_StartTime_EndTime')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Shift_StartTime_EndTime] ON [HumanResources].[Shift]\r\n(\r\n\t[StartTime] ASC,\r\n\t[EndTime] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[HumanResources].[DF_Shift_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [HumanResources].[Shift] ADD  CONSTRAINT [DF_Shift_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Shift', N'COLUMN',N'ShiftID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for Shift records.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Shift', @level2type=N'COLUMN',@level2name=N'ShiftID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Shift', N'COLUMN',N'Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Shift description.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Shift', @level2type=N'COLUMN',@level2name=N'Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Shift', N'COLUMN',N'StartTime'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Shift start time.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Shift', @level2type=N'COLUMN',@level2name=N'StartTime'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Shift', N'COLUMN',N'EndTime'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Shift end time.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Shift', @level2type=N'COLUMN',@level2name=N'EndTime'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Shift', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Shift', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Shift', N'INDEX',N'AK_Shift_Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Shift', @level2type=N'INDEX',@level2name=N'AK_Shift_Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Shift', N'INDEX',N'AK_Shift_StartTime_EndTime'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Shift', @level2type=N'INDEX',@level2name=N'AK_Shift_StartTime_EndTime'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Shift', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Work shift lookup table.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Shift'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Purchasing].[ShipMethod]    Script Date: 9/26/2023 12:09:58 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Purchasing].[ShipMethod]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Purchasing].[ShipMethod](\r\n\t[ShipMethodID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[Name] [dbo].[Name] NOT NULL,\r\n\t[ShipBase] [money] NOT NULL,\r\n\t[ShipRate] [money] NOT NULL,\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_ShipMethod_ShipMethodID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[ShipMethodID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Purchasing].[ShipMethod]') AND name = N'AK_ShipMethod_Name')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_ShipMethod_Name] ON [Purchasing].[ShipMethod]\r\n(\r\n\t[Name] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Purchasing].[ShipMethod]') AND name = N'AK_ShipMethod_rowguid')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_ShipMethod_rowguid] ON [Purchasing].[ShipMethod]\r\n(\r\n\t[rowguid] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Purchasing].[DF_ShipMethod_ShipBase]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Purchasing].[ShipMethod] ADD  CONSTRAINT [DF_ShipMethod_ShipBase]  DEFAULT ((0.00)) FOR [ShipBase]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Purchasing].[DF_ShipMethod_ShipRate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Purchasing].[ShipMethod] ADD  CONSTRAINT [DF_ShipMethod_ShipRate]  DEFAULT ((0.00)) FOR [ShipRate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Purchasing].[DF_ShipMethod_rowguid]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Purchasing].[ShipMethod] ADD  CONSTRAINT [DF_ShipMethod_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Purchasing].[DF_ShipMethod_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Purchasing].[ShipMethod] ADD  CONSTRAINT [DF_ShipMethod_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ShipMethod', N'COLUMN',N'ShipMethodID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for ShipMethod records.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'COLUMN',@level2name=N'ShipMethodID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ShipMethod', N'COLUMN',N'Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Shipping company name.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'COLUMN',@level2name=N'Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ShipMethod', N'COLUMN',N'ShipBase'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Minimum shipping charge.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'COLUMN',@level2name=N'ShipBase'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ShipMethod', N'COLUMN',N'ShipRate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Shipping charge per pound.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'COLUMN',@level2name=N'ShipRate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ShipMethod', N'COLUMN',N'rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'COLUMN',@level2name=N'rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ShipMethod', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ShipMethod', N'INDEX',N'AK_ShipMethod_Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'INDEX',@level2name=N'AK_ShipMethod_Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ShipMethod', N'INDEX',N'AK_ShipMethod_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'INDEX',@level2name=N'AK_ShipMethod_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ShipMethod', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Shipping company lookup table.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Production].[ProductCostHistory]    Script Date: 9/26/2023 12:09:58 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[ProductCostHistory]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Production].[ProductCostHistory](\r\n\t[ProductID] [int] NOT NULL,\r\n\t[StartDate] [datetime] NOT NULL,\r\n\t[EndDate] [datetime] NULL,\r\n\t[StandardCost] [money] NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_ProductCostHistory_ProductID_StartDate] PRIMARY KEY CLUSTERED \r\n(\r\n\t[ProductID] ASC,\r\n\t[StartDate] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_ProductCostHistory_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[ProductCostHistory] ADD  CONSTRAINT [DF_ProductCostHistory_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductCostHistory', N'COLUMN',N'ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product identification number. Foreign key to Product.ProductID' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCostHistory', @level2type=N'COLUMN',@level2name=N'ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductCostHistory', N'COLUMN',N'StartDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product cost start date.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCostHistory', @level2type=N'COLUMN',@level2name=N'StartDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductCostHistory', N'COLUMN',N'EndDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product cost end date.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCostHistory', @level2type=N'COLUMN',@level2name=N'EndDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductCostHistory', N'COLUMN',N'StandardCost'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Standard cost of the product.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCostHistory', @level2type=N'COLUMN',@level2name=N'StandardCost'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductCostHistory', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCostHistory', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductCostHistory', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Changes in the cost of a product over time.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCostHistory'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Production].[ProductDescription]    Script Date: 9/26/2023 12:09:58 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[ProductDescription]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Production].[ProductDescription](\r\n\t[ProductDescriptionID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[Description] [nvarchar](400) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_ProductDescription_ProductDescriptionID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[ProductDescriptionID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[ProductDescription]') AND name = N'AK_ProductDescription_rowguid')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_ProductDescription_rowguid] ON [Production].[ProductDescription]\r\n(\r\n\t[rowguid] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_ProductDescription_rowguid]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[ProductDescription] ADD  CONSTRAINT [DF_ProductDescription_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_ProductDescription_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[ProductDescription] ADD  CONSTRAINT [DF_ProductDescription_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductDescription', N'COLUMN',N'ProductDescriptionID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for ProductDescription records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDescription', @level2type=N'COLUMN',@level2name=N'ProductDescriptionID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductDescription', N'COLUMN',N'Description'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Description of the product.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDescription', @level2type=N'COLUMN',@level2name=N'Description'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductDescription', N'COLUMN',N'rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDescription', @level2type=N'COLUMN',@level2name=N'rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductDescription', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDescription', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductDescription', N'INDEX',N'AK_ProductDescription_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDescription', @level2type=N'INDEX',@level2name=N'AK_ProductDescription_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductDescription', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product descriptions in several languages.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDescription'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Sales].[ShoppingCartItem]    Script Date: 9/26/2023 12:09:58 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[ShoppingCartItem]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Sales].[ShoppingCartItem](\r\n\t[ShoppingCartItemID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[ShoppingCartID] [nvarchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[Quantity] [int] NOT NULL,\r\n\t[ProductID] [int] NOT NULL,\r\n\t[DateCreated] [datetime] NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_ShoppingCartItem_ShoppingCartItemID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[ShoppingCartItemID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Sales].[ShoppingCartItem]') AND name = N'IX_ShoppingCartItem_ShoppingCartID_ProductID')\r\nCREATE NONCLUSTERED INDEX [IX_ShoppingCartItem_ShoppingCartID_ProductID] ON [Sales].[ShoppingCartItem]\r\n(\r\n\t[ShoppingCartID] ASC,\r\n\t[ProductID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_ShoppingCartItem_Quantity]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[ShoppingCartItem] ADD  CONSTRAINT [DF_ShoppingCartItem_Quantity]  DEFAULT ((1)) FOR [Quantity]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_ShoppingCartItem_DateCreated]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[ShoppingCartItem] ADD  CONSTRAINT [DF_ShoppingCartItem_DateCreated]  DEFAULT (getdate()) FOR [DateCreated]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_ShoppingCartItem_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[ShoppingCartItem] ADD  CONSTRAINT [DF_ShoppingCartItem_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'ShoppingCartItem', N'COLUMN',N'ShoppingCartItemID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for ShoppingCartItem records.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'ShoppingCartItem', @level2type=N'COLUMN',@level2name=N'ShoppingCartItemID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'ShoppingCartItem', N'COLUMN',N'ShoppingCartID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Shopping cart identification number.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'ShoppingCartItem', @level2type=N'COLUMN',@level2name=N'ShoppingCartID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'ShoppingCartItem', N'COLUMN',N'Quantity'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product quantity ordered.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'ShoppingCartItem', @level2type=N'COLUMN',@level2name=N'Quantity'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'ShoppingCartItem', N'COLUMN',N'ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product ordered. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'ShoppingCartItem', @level2type=N'COLUMN',@level2name=N'ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'ShoppingCartItem', N'COLUMN',N'DateCreated'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date the time the record was created.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'ShoppingCartItem', @level2type=N'COLUMN',@level2name=N'DateCreated'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'ShoppingCartItem', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'ShoppingCartItem', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'ShoppingCartItem', N'INDEX',N'IX_ShoppingCartItem_ShoppingCartID_ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'ShoppingCartItem', @level2type=N'INDEX',@level2name=N'IX_ShoppingCartItem_ShoppingCartID_ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'ShoppingCartItem', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Contains online customer orders until the order is submitted or cancelled.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'ShoppingCartItem'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Production].[Document]    Script Date: 9/26/2023 12:09:58 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[Document]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Production].[Document](\r\n\t[DocumentNode] [hierarchyid] NOT NULL,\r\n\t[DocumentLevel]  AS ([DocumentNode].[GetLevel]()),\r\n\t[Title] [nvarchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[Owner] [int] NOT NULL,\r\n\t[FolderFlag] [bit] NOT NULL,\r\n\t[FileName] [nvarchar](400) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[FileExtension] [nvarchar](8) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[Revision] [nchar](5) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[ChangeNumber] [int] NOT NULL,\r\n\t[Status] [tinyint] NOT NULL,\r\n\t[DocumentSummary] [nvarchar](max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n\t[Document] [varbinary](max) NULL,\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_Document_DocumentNode] PRIMARY KEY CLUSTERED \r\n(\r\n\t[DocumentNode] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON),\r\n CONSTRAINT [UQ__Document__F73921F793071A63] UNIQUE NONCLUSTERED \r\n(\r\n\t[rowguid] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ARITHABORT ON\r\nSET CONCAT_NULL_YIELDS_NULL ON\r\nSET QUOTED_IDENTIFIER ON\r\nSET ANSI_NULLS ON\r\nSET ANSI_PADDING ON\r\nSET ANSI_WARNINGS ON\r\nSET NUMERIC_ROUNDABORT OFF",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[Document]') AND name = N'AK_Document_DocumentLevel_DocumentNode')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Document_DocumentLevel_DocumentNode] ON [Production].[Document]\r\n(\r\n\t[DocumentLevel] ASC,\r\n\t[DocumentNode] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[Document]') AND name = N'AK_Document_rowguid')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Document_rowguid] ON [Production].[Document]\r\n(\r\n\t[rowguid] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[Document]') AND name = N'IX_Document_FileName_Revision')\r\nCREATE NONCLUSTERED INDEX [IX_Document_FileName_Revision] ON [Production].[Document]\r\n(\r\n\t[FileName] ASC,\r\n\t[Revision] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF not EXISTS (SELECT * FROM sys.fulltext_indexes fti WHERE fti.object_id = OBJECT_ID(N'[Production].[Document]'))\r\nCREATE FULLTEXT INDEX ON [Production].[Document]\r\nKEY INDEX [PK_Document_DocumentNode]ON ([AW2008FullTextCatalog], FILEGROUP [PRIMARY])\r\nWITH (CHANGE_TRACKING = AUTO, STOPLIST = SYSTEM)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_Document_FolderFlag]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[Document] ADD  CONSTRAINT [DF_Document_FolderFlag]  DEFAULT ((0)) FOR [FolderFlag]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_Document_ChangeNumber]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[Document] ADD  CONSTRAINT [DF_Document_ChangeNumber]  DEFAULT ((0)) FOR [ChangeNumber]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_Document_rowguid]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[Document] ADD  CONSTRAINT [DF_Document_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_Document_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[Document] ADD  CONSTRAINT [DF_Document_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Document', N'COLUMN',N'DocumentNode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for Document records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'COLUMN',@level2name=N'DocumentNode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Document', N'COLUMN',N'DocumentLevel'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Depth in the document hierarchy.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'COLUMN',@level2name=N'DocumentLevel'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Document', N'COLUMN',N'Title'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Title of the document.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'COLUMN',@level2name=N'Title'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Document', N'COLUMN',N'Owner'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Employee who controls the document.  Foreign key to Employee.BusinessEntityID' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'COLUMN',@level2name=N'Owner'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Document', N'COLUMN',N'FolderFlag'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'0 = This is a folder, 1 = This is a document.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'COLUMN',@level2name=N'FolderFlag'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Document', N'COLUMN',N'FileName'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'File name of the document' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'COLUMN',@level2name=N'FileName'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Document', N'COLUMN',N'FileExtension'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'File extension indicating the document type. For example, .doc or .txt.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'COLUMN',@level2name=N'FileExtension'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Document', N'COLUMN',N'Revision'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Revision number of the document. ' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'COLUMN',@level2name=N'Revision'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Document', N'COLUMN',N'ChangeNumber'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Engineering change approval number.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'COLUMN',@level2name=N'ChangeNumber'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Document', N'COLUMN',N'Status'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'1 = Pending approval, 2 = Approved, 3 = Obsolete' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'COLUMN',@level2name=N'Status'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Document', N'COLUMN',N'DocumentSummary'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Document abstract.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'COLUMN',@level2name=N'DocumentSummary'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Document', N'COLUMN',N'Document'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Complete document.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'COLUMN',@level2name=N'Document'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Document', N'COLUMN',N'rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Required for FileStream.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'COLUMN',@level2name=N'rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Document', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Document', N'INDEX',N'AK_Document_DocumentLevel_DocumentNode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'INDEX',@level2name=N'AK_Document_DocumentLevel_DocumentNode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Document', N'INDEX',N'AK_Document_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support FileStream.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'INDEX',@level2name=N'AK_Document_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Document', N'INDEX',N'IX_Document_FileName_Revision'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'INDEX',@level2name=N'IX_Document_FileName_Revision'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Document', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product maintenance documents.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Production].[ProductDocument]    Script Date: 9/26/2023 12:09:58 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[ProductDocument]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Production].[ProductDocument](\r\n\t[ProductID] [int] NOT NULL,\r\n\t[DocumentNode] [hierarchyid] NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_ProductDocument_ProductID_DocumentNode] PRIMARY KEY CLUSTERED \r\n(\r\n\t[ProductID] ASC,\r\n\t[DocumentNode] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_ProductDocument_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[ProductDocument] ADD  CONSTRAINT [DF_ProductDocument_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductDocument', N'COLUMN',N'ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product identification number. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDocument', @level2type=N'COLUMN',@level2name=N'ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductDocument', N'COLUMN',N'DocumentNode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Document identification number. Foreign key to Document.DocumentNode.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDocument', @level2type=N'COLUMN',@level2name=N'DocumentNode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductDocument', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDocument', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductDocument', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Cross-reference table mapping products to related product documents.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDocument'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Production].[Location]    Script Date: 9/26/2023 12:09:58 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[Location]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Production].[Location](\r\n\t[LocationID] [smallint] IDENTITY(1,1) NOT NULL,\r\n\t[Name] [dbo].[Name] NOT NULL,\r\n\t[CostRate] [smallmoney] NOT NULL,\r\n\t[Availability] [decimal](8, 2) NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_Location_LocationID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[LocationID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[Location]') AND name = N'AK_Location_Name')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Location_Name] ON [Production].[Location]\r\n(\r\n\t[Name] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_Location_CostRate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[Location] ADD  CONSTRAINT [DF_Location_CostRate]  DEFAULT ((0.00)) FOR [CostRate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_Location_Availability]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[Location] ADD  CONSTRAINT [DF_Location_Availability]  DEFAULT ((0.00)) FOR [Availability]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_Location_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[Location] ADD  CONSTRAINT [DF_Location_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Location', N'COLUMN',N'LocationID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for Location records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Location', @level2type=N'COLUMN',@level2name=N'LocationID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Location', N'COLUMN',N'Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Location description.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Location', @level2type=N'COLUMN',@level2name=N'Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Location', N'COLUMN',N'CostRate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Standard hourly cost of the manufacturing location.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Location', @level2type=N'COLUMN',@level2name=N'CostRate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Location', N'COLUMN',N'Availability'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Work capacity (in hours) of the manufacturing location.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Location', @level2type=N'COLUMN',@level2name=N'Availability'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Location', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Location', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Location', N'INDEX',N'AK_Location_Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Location', @level2type=N'INDEX',@level2name=N'AK_Location_Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Location', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product inventory and manufacturing locations.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Location'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Production].[ProductInventory]    Script Date: 9/26/2023 12:09:58 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[ProductInventory]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Production].[ProductInventory](\r\n\t[ProductID] [int] NOT NULL,\r\n\t[LocationID] [smallint] NOT NULL,\r\n\t[Shelf] [nvarchar](10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[Bin] [tinyint] NOT NULL,\r\n\t[Quantity] [smallint] NOT NULL,\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_ProductInventory_ProductID_LocationID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[ProductID] ASC,\r\n\t[LocationID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_ProductInventory_Quantity]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[ProductInventory] ADD  CONSTRAINT [DF_ProductInventory_Quantity]  DEFAULT ((0)) FOR [Quantity]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_ProductInventory_rowguid]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[ProductInventory] ADD  CONSTRAINT [DF_ProductInventory_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_ProductInventory_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[ProductInventory] ADD  CONSTRAINT [DF_ProductInventory_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductInventory', N'COLUMN',N'ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product identification number. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'COLUMN',@level2name=N'ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductInventory', N'COLUMN',N'LocationID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Inventory location identification number. Foreign key to Location.LocationID. ' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'COLUMN',@level2name=N'LocationID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductInventory', N'COLUMN',N'Shelf'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Storage compartment within an inventory location.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'COLUMN',@level2name=N'Shelf'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductInventory', N'COLUMN',N'Bin'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Storage container on a shelf in an inventory location.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'COLUMN',@level2name=N'Bin'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductInventory', N'COLUMN',N'Quantity'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Quantity of products in the inventory location.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'COLUMN',@level2name=N'Quantity'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductInventory', N'COLUMN',N'rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'COLUMN',@level2name=N'rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductInventory', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductInventory', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product inventory information.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Sales].[SpecialOffer]    Script Date: 9/26/2023 12:09:58 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[SpecialOffer]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Sales].[SpecialOffer](\r\n\t[SpecialOfferID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[Description] [nvarchar](255) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[DiscountPct] [smallmoney] NOT NULL,\r\n\t[Type] [nvarchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[Category] [nvarchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[StartDate] [datetime] NOT NULL,\r\n\t[EndDate] [datetime] NOT NULL,\r\n\t[MinQty] [int] NOT NULL,\r\n\t[MaxQty] [int] NULL,\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_SpecialOffer_SpecialOfferID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[SpecialOfferID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Sales].[SpecialOffer]') AND name = N'AK_SpecialOffer_rowguid')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_SpecialOffer_rowguid] ON [Sales].[SpecialOffer]\r\n(\r\n\t[rowguid] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SpecialOffer_DiscountPct]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SpecialOffer] ADD  CONSTRAINT [DF_SpecialOffer_DiscountPct]  DEFAULT ((0.00)) FOR [DiscountPct]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SpecialOffer_MinQty]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SpecialOffer] ADD  CONSTRAINT [DF_SpecialOffer_MinQty]  DEFAULT ((0)) FOR [MinQty]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SpecialOffer_rowguid]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SpecialOffer] ADD  CONSTRAINT [DF_SpecialOffer_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SpecialOffer_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SpecialOffer] ADD  CONSTRAINT [DF_SpecialOffer_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOffer', N'COLUMN',N'SpecialOfferID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for SpecialOffer records.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'COLUMN',@level2name=N'SpecialOfferID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOffer', N'COLUMN',N'Description'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Discount description.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'COLUMN',@level2name=N'Description'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOffer', N'COLUMN',N'DiscountPct'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Discount precentage.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'COLUMN',@level2name=N'DiscountPct'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOffer', N'COLUMN',N'Type'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Discount type category.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'COLUMN',@level2name=N'Type'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOffer', N'COLUMN',N'Category'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Group the discount applies to such as Reseller or Customer.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'COLUMN',@level2name=N'Category'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOffer', N'COLUMN',N'StartDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Discount start date.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'COLUMN',@level2name=N'StartDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOffer', N'COLUMN',N'EndDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Discount end date.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'COLUMN',@level2name=N'EndDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOffer', N'COLUMN',N'MinQty'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Minimum discount percent allowed.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'COLUMN',@level2name=N'MinQty'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOffer', N'COLUMN',N'MaxQty'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Maximum discount percent allowed.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'COLUMN',@level2name=N'MaxQty'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOffer', N'COLUMN',N'rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'COLUMN',@level2name=N'rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOffer', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOffer', N'INDEX',N'AK_SpecialOffer_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'INDEX',@level2name=N'AK_SpecialOffer_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOffer', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sale discounts lookup table.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Production].[ProductListPriceHistory]    Script Date: 9/26/2023 12:09:59 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[ProductListPriceHistory]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Production].[ProductListPriceHistory](\r\n\t[ProductID] [int] NOT NULL,\r\n\t[StartDate] [datetime] NOT NULL,\r\n\t[EndDate] [datetime] NULL,\r\n\t[ListPrice] [money] NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_ProductListPriceHistory_ProductID_StartDate] PRIMARY KEY CLUSTERED \r\n(\r\n\t[ProductID] ASC,\r\n\t[StartDate] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_ProductListPriceHistory_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[ProductListPriceHistory] ADD  CONSTRAINT [DF_ProductListPriceHistory_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductListPriceHistory', N'COLUMN',N'ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product identification number. Foreign key to Product.ProductID' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductListPriceHistory', @level2type=N'COLUMN',@level2name=N'ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductListPriceHistory', N'COLUMN',N'StartDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'List price start date.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductListPriceHistory', @level2type=N'COLUMN',@level2name=N'StartDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductListPriceHistory', N'COLUMN',N'EndDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'List price end date' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductListPriceHistory', @level2type=N'COLUMN',@level2name=N'EndDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductListPriceHistory', N'COLUMN',N'ListPrice'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product list price.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductListPriceHistory', @level2type=N'COLUMN',@level2name=N'ListPrice'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductListPriceHistory', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductListPriceHistory', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductListPriceHistory', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Changes in the list price of a product over time.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductListPriceHistory'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Person].[CountryRegion]    Script Date: 9/26/2023 12:09:59 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[CountryRegion]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Person].[CountryRegion](\r\n\t[CountryRegionCode] [nvarchar](3) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[Name] [dbo].[Name] NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_CountryRegion_CountryRegionCode] PRIMARY KEY CLUSTERED \r\n(\r\n\t[CountryRegionCode] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Person].[CountryRegion]') AND name = N'AK_CountryRegion_Name')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_CountryRegion_Name] ON [Person].[CountryRegion]\r\n(\r\n\t[Name] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[DF_CountryRegion_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Person].[CountryRegion] ADD  CONSTRAINT [DF_CountryRegion_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'CountryRegion', N'COLUMN',N'CountryRegionCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ISO standard code for countries and regions.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'CountryRegion', @level2type=N'COLUMN',@level2name=N'CountryRegionCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'CountryRegion', N'COLUMN',N'Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Country or region name.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'CountryRegion', @level2type=N'COLUMN',@level2name=N'Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'CountryRegion', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'CountryRegion', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'CountryRegion', N'INDEX',N'AK_CountryRegion_Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'CountryRegion', @level2type=N'INDEX',@level2name=N'AK_CountryRegion_Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'CountryRegion', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Lookup table containing the ISO standard codes for countries and regions.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'CountryRegion'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Sales].[SalesTerritory]    Script Date: 9/26/2023 12:09:59 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[SalesTerritory]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Sales].[SalesTerritory](\r\n\t[TerritoryID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[Name] [dbo].[Name] NOT NULL,\r\n\t[CountryRegionCode] [nvarchar](3) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[Group] [nvarchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[SalesYTD] [money] NOT NULL,\r\n\t[SalesLastYear] [money] NOT NULL,\r\n\t[CostYTD] [money] NOT NULL,\r\n\t[CostLastYear] [money] NOT NULL,\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_SalesTerritory_TerritoryID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[TerritoryID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Sales].[SalesTerritory]') AND name = N'AK_SalesTerritory_Name')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_SalesTerritory_Name] ON [Sales].[SalesTerritory]\r\n(\r\n\t[Name] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Sales].[SalesTerritory]') AND name = N'AK_SalesTerritory_rowguid')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_SalesTerritory_rowguid] ON [Sales].[SalesTerritory]\r\n(\r\n\t[rowguid] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesTerritory_SalesYTD]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesTerritory] ADD  CONSTRAINT [DF_SalesTerritory_SalesYTD]  DEFAULT ((0.00)) FOR [SalesYTD]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesTerritory_SalesLastYear]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesTerritory] ADD  CONSTRAINT [DF_SalesTerritory_SalesLastYear]  DEFAULT ((0.00)) FOR [SalesLastYear]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesTerritory_CostYTD]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesTerritory] ADD  CONSTRAINT [DF_SalesTerritory_CostYTD]  DEFAULT ((0.00)) FOR [CostYTD]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesTerritory_CostLastYear]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesTerritory] ADD  CONSTRAINT [DF_SalesTerritory_CostLastYear]  DEFAULT ((0.00)) FOR [CostLastYear]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesTerritory_rowguid]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesTerritory] ADD  CONSTRAINT [DF_SalesTerritory_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesTerritory_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesTerritory] ADD  CONSTRAINT [DF_SalesTerritory_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritory', N'COLUMN',N'TerritoryID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for SalesTerritory records.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'COLUMN',@level2name=N'TerritoryID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritory', N'COLUMN',N'Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales territory description' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'COLUMN',@level2name=N'Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritory', N'COLUMN',N'CountryRegionCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. ' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'COLUMN',@level2name=N'CountryRegionCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritory', N'COLUMN',N'Group'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Geographic area to which the sales territory belong.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'COLUMN',@level2name=N'Group'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritory', N'COLUMN',N'SalesYTD'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales in the territory year to date.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'COLUMN',@level2name=N'SalesYTD'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritory', N'COLUMN',N'SalesLastYear'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales in the territory the previous year.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'COLUMN',@level2name=N'SalesLastYear'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritory', N'COLUMN',N'CostYTD'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Business costs in the territory year to date.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'COLUMN',@level2name=N'CostYTD'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritory', N'COLUMN',N'CostLastYear'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Business costs in the territory the previous year.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'COLUMN',@level2name=N'CostLastYear'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritory', N'COLUMN',N'rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'COLUMN',@level2name=N'rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritory', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritory', N'INDEX',N'AK_SalesTerritory_Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'INDEX',@level2name=N'AK_SalesTerritory_Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritory', N'INDEX',N'AK_SalesTerritory_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'INDEX',@level2name=N'AK_SalesTerritory_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritory', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales territory lookup table.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Person].[StateProvince]    Script Date: 9/26/2023 12:09:59 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[StateProvince]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Person].[StateProvince](\r\n\t[StateProvinceID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[StateProvinceCode] [nchar](3) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[CountryRegionCode] [nvarchar](3) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[IsOnlyStateProvinceFlag] [dbo].[Flag] NOT NULL,\r\n\t[Name] [dbo].[Name] NOT NULL,\r\n\t[TerritoryID] [int] NOT NULL,\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_StateProvince_StateProvinceID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[StateProvinceID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Person].[StateProvince]') AND name = N'AK_StateProvince_Name')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_StateProvince_Name] ON [Person].[StateProvince]\r\n(\r\n\t[Name] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Person].[StateProvince]') AND name = N'AK_StateProvince_rowguid')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_StateProvince_rowguid] ON [Person].[StateProvince]\r\n(\r\n\t[rowguid] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Person].[StateProvince]') AND name = N'AK_StateProvince_StateProvinceCode_CountryRegionCode')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_StateProvince_StateProvinceCode_CountryRegionCode] ON [Person].[StateProvince]\r\n(\r\n\t[StateProvinceCode] ASC,\r\n\t[CountryRegionCode] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[DF_StateProvince_IsOnlyStateProvinceFlag]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Person].[StateProvince] ADD  CONSTRAINT [DF_StateProvince_IsOnlyStateProvinceFlag]  DEFAULT ((1)) FOR [IsOnlyStateProvinceFlag]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[DF_StateProvince_rowguid]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Person].[StateProvince] ADD  CONSTRAINT [DF_StateProvince_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[DF_StateProvince_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Person].[StateProvince] ADD  CONSTRAINT [DF_StateProvince_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'StateProvince', N'COLUMN',N'StateProvinceID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for StateProvince records.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'COLUMN',@level2name=N'StateProvinceID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'StateProvince', N'COLUMN',N'StateProvinceCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ISO standard state or province code.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'COLUMN',@level2name=N'StateProvinceCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'StateProvince', N'COLUMN',N'CountryRegionCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode. ' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'COLUMN',@level2name=N'CountryRegionCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'StateProvince', N'COLUMN',N'IsOnlyStateProvinceFlag'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'0 = StateProvinceCode exists. 1 = StateProvinceCode unavailable, using CountryRegionCode.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'COLUMN',@level2name=N'IsOnlyStateProvinceFlag'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'StateProvince', N'COLUMN',N'Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'State or province description.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'COLUMN',@level2name=N'Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'StateProvince', N'COLUMN',N'TerritoryID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ID of the territory in which the state or province is located. Foreign key to SalesTerritory.SalesTerritoryID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'COLUMN',@level2name=N'TerritoryID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'StateProvince', N'COLUMN',N'rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'COLUMN',@level2name=N'rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'StateProvince', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'StateProvince', N'INDEX',N'AK_StateProvince_Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'INDEX',@level2name=N'AK_StateProvince_Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'StateProvince', N'INDEX',N'AK_StateProvince_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'INDEX',@level2name=N'AK_StateProvince_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'StateProvince', N'INDEX',N'AK_StateProvince_StateProvinceCode_CountryRegionCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'INDEX',@level2name=N'AK_StateProvince_StateProvinceCode_CountryRegionCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'StateProvince', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'State and province lookup table.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Person].[Address]    Script Date: 9/26/2023 12:09:59 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[Address]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Person].[Address](\r\n\t[AddressID] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,\r\n\t[AddressLine1] [nvarchar](60) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[AddressLine2] [nvarchar](60) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n\t[City] [nvarchar](30) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[StateProvinceID] [int] NOT NULL,\r\n\t[PostalCode] [nvarchar](15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[SpatialLocation] [geography] NULL,\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_Address_AddressID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[AddressID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Person].[Address]') AND name = N'AK_Address_rowguid')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Address_rowguid] ON [Person].[Address]\r\n(\r\n\t[rowguid] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Person].[Address]') AND name = N'IX_Address_AddressLine1_AddressLine2_City_StateProvinceID_PostalCode')\r\nCREATE UNIQUE NONCLUSTERED INDEX [IX_Address_AddressLine1_AddressLine2_City_StateProvinceID_PostalCode] ON [Person].[Address]\r\n(\r\n\t[AddressLine1] ASC,\r\n\t[AddressLine2] ASC,\r\n\t[City] ASC,\r\n\t[StateProvinceID] ASC,\r\n\t[PostalCode] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Person].[Address]') AND name = N'IX_Address_StateProvinceID')\r\nCREATE NONCLUSTERED INDEX [IX_Address_StateProvinceID] ON [Person].[Address]\r\n(\r\n\t[StateProvinceID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[DF_Address_rowguid]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Person].[Address] ADD  CONSTRAINT [DF_Address_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[DF_Address_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Person].[Address] ADD  CONSTRAINT [DF_Address_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Address', N'COLUMN',N'AddressID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for Address records.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'COLUMN',@level2name=N'AddressID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Address', N'COLUMN',N'AddressLine1'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'First street address line.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'COLUMN',@level2name=N'AddressLine1'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Address', N'COLUMN',N'AddressLine2'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Second street address line.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'COLUMN',@level2name=N'AddressLine2'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Address', N'COLUMN',N'City'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Name of the city.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'COLUMN',@level2name=N'City'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Address', N'COLUMN',N'StateProvinceID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique identification number for the state or province. Foreign key to StateProvince table.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'COLUMN',@level2name=N'StateProvinceID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Address', N'COLUMN',N'PostalCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Postal code for the street address.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'COLUMN',@level2name=N'PostalCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Address', N'COLUMN',N'SpatialLocation'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Latitude and longitude of this address.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'COLUMN',@level2name=N'SpatialLocation'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Address', N'COLUMN',N'rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'COLUMN',@level2name=N'rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Address', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Address', N'INDEX',N'AK_Address_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'INDEX',@level2name=N'AK_Address_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Address', N'INDEX',N'IX_Address_AddressLine1_AddressLine2_City_StateProvinceID_PostalCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'INDEX',@level2name=N'IX_Address_AddressLine1_AddressLine2_City_StateProvinceID_PostalCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Address', N'INDEX',N'IX_Address_StateProvinceID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'INDEX',@level2name=N'IX_Address_StateProvinceID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Address', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Street address information for customers, employees, and vendors.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Sales].[SpecialOfferProduct]    Script Date: 9/26/2023 12:09:59 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[SpecialOfferProduct]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Sales].[SpecialOfferProduct](\r\n\t[SpecialOfferID] [int] NOT NULL,\r\n\t[ProductID] [int] NOT NULL,\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_SpecialOfferProduct_SpecialOfferID_ProductID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[SpecialOfferID] ASC,\r\n\t[ProductID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Sales].[SpecialOfferProduct]') AND name = N'AK_SpecialOfferProduct_rowguid')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_SpecialOfferProduct_rowguid] ON [Sales].[SpecialOfferProduct]\r\n(\r\n\t[rowguid] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Sales].[SpecialOfferProduct]') AND name = N'IX_SpecialOfferProduct_ProductID')\r\nCREATE NONCLUSTERED INDEX [IX_SpecialOfferProduct_ProductID] ON [Sales].[SpecialOfferProduct]\r\n(\r\n\t[ProductID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SpecialOfferProduct_rowguid]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SpecialOfferProduct] ADD  CONSTRAINT [DF_SpecialOfferProduct_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SpecialOfferProduct_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SpecialOfferProduct] ADD  CONSTRAINT [DF_SpecialOfferProduct_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOfferProduct', N'COLUMN',N'SpecialOfferID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for SpecialOfferProduct records.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOfferProduct', @level2type=N'COLUMN',@level2name=N'SpecialOfferID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOfferProduct', N'COLUMN',N'ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product identification number. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOfferProduct', @level2type=N'COLUMN',@level2name=N'ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOfferProduct', N'COLUMN',N'rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOfferProduct', @level2type=N'COLUMN',@level2name=N'rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOfferProduct', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOfferProduct', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOfferProduct', N'INDEX',N'AK_SpecialOfferProduct_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOfferProduct', @level2type=N'INDEX',@level2name=N'AK_SpecialOfferProduct_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOfferProduct', N'INDEX',N'IX_SpecialOfferProduct_ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOfferProduct', @level2type=N'INDEX',@level2name=N'IX_SpecialOfferProduct_ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOfferProduct', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Cross-reference table mapping products to special offer discounts.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOfferProduct'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Person].[AddressType]    Script Date: 9/26/2023 12:09:59 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[AddressType]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Person].[AddressType](\r\n\t[AddressTypeID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[Name] [dbo].[Name] NOT NULL,\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_AddressType_AddressTypeID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[AddressTypeID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Person].[AddressType]') AND name = N'AK_AddressType_Name')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_AddressType_Name] ON [Person].[AddressType]\r\n(\r\n\t[Name] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Person].[AddressType]') AND name = N'AK_AddressType_rowguid')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_AddressType_rowguid] ON [Person].[AddressType]\r\n(\r\n\t[rowguid] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[DF_AddressType_rowguid]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Person].[AddressType] ADD  CONSTRAINT [DF_AddressType_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[DF_AddressType_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Person].[AddressType] ADD  CONSTRAINT [DF_AddressType_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'AddressType', N'COLUMN',N'AddressTypeID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for AddressType records.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'AddressType', @level2type=N'COLUMN',@level2name=N'AddressTypeID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'AddressType', N'COLUMN',N'Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Address type description. For example, Billing, Home, or Shipping.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'AddressType', @level2type=N'COLUMN',@level2name=N'Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'AddressType', N'COLUMN',N'rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'AddressType', @level2type=N'COLUMN',@level2name=N'rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'AddressType', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'AddressType', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'AddressType', N'INDEX',N'AK_AddressType_Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'AddressType', @level2type=N'INDEX',@level2name=N'AK_AddressType_Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'AddressType', N'INDEX',N'AK_AddressType_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'AddressType', @level2type=N'INDEX',@level2name=N'AK_AddressType_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'AddressType', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Types of addresses stored in the Address table. ' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'AddressType'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Production].[Illustration]    Script Date: 9/26/2023 12:09:59 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[Illustration]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Production].[Illustration](\r\n\t[IllustrationID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[Diagram] [xml] NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_Illustration_IllustrationID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[IllustrationID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_Illustration_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[Illustration] ADD  CONSTRAINT [DF_Illustration_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Illustration', N'COLUMN',N'IllustrationID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for Illustration records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Illustration', @level2type=N'COLUMN',@level2name=N'IllustrationID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Illustration', N'COLUMN',N'Diagram'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Illustrations used in manufacturing instructions. Stored as XML.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Illustration', @level2type=N'COLUMN',@level2name=N'Diagram'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Illustration', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Illustration', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Illustration', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Bicycle assembly diagrams.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Illustration'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Production].[ProductModelIllustration]    Script Date: 9/26/2023 12:09:59 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[ProductModelIllustration]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Production].[ProductModelIllustration](\r\n\t[ProductModelID] [int] NOT NULL,\r\n\t[IllustrationID] [int] NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_ProductModelIllustration_ProductModelID_IllustrationID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[ProductModelID] ASC,\r\n\t[IllustrationID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_ProductModelIllustration_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[ProductModelIllustration] ADD  CONSTRAINT [DF_ProductModelIllustration_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModelIllustration', N'COLUMN',N'ProductModelID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to ProductModel.ProductModelID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelIllustration', @level2type=N'COLUMN',@level2name=N'ProductModelID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModelIllustration', N'COLUMN',N'IllustrationID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to Illustration.IllustrationID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelIllustration', @level2type=N'COLUMN',@level2name=N'IllustrationID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModelIllustration', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelIllustration', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModelIllustration', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Cross-reference table mapping product models and illustrations.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelIllustration'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [dbo].[AWBuildVersion]    Script Date: 9/26/2023 12:09:59 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AWBuildVersion]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [dbo].[AWBuildVersion](\r\n\t[SystemInformationID] [tinyint] IDENTITY(1,1) NOT NULL,\r\n\t[Database Version] [nvarchar](25) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[VersionDate] [datetime] NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_AWBuildVersion_SystemInformationID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[SystemInformationID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DF_AWBuildVersion_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [dbo].[AWBuildVersion] ADD  CONSTRAINT [DF_AWBuildVersion_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'AWBuildVersion', N'COLUMN',N'SystemInformationID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for AWBuildVersion records.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'AWBuildVersion', @level2type=N'COLUMN',@level2name=N'SystemInformationID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'AWBuildVersion', N'COLUMN',N'Database Version'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Version number of the database in 9.yy.mm.dd.00 format.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'AWBuildVersion', @level2type=N'COLUMN',@level2name=N'Database Version'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'AWBuildVersion', N'COLUMN',N'VersionDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'AWBuildVersion', @level2type=N'COLUMN',@level2name=N'VersionDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'AWBuildVersion', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'AWBuildVersion', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'AWBuildVersion', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Current version number of the AdventureWorks 2012 sample database. ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'AWBuildVersion'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Production].[Culture]    Script Date: 9/26/2023 12:09:59 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[Culture]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Production].[Culture](\r\n\t[CultureID] [nchar](6) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[Name] [dbo].[Name] NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_Culture_CultureID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[CultureID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[Culture]') AND name = N'AK_Culture_Name')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Culture_Name] ON [Production].[Culture]\r\n(\r\n\t[Name] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_Culture_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[Culture] ADD  CONSTRAINT [DF_Culture_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Culture', N'COLUMN',N'CultureID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for Culture records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Culture', @level2type=N'COLUMN',@level2name=N'CultureID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Culture', N'COLUMN',N'Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Culture description.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Culture', @level2type=N'COLUMN',@level2name=N'Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Culture', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Culture', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Culture', N'INDEX',N'AK_Culture_Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Culture', @level2type=N'INDEX',@level2name=N'AK_Culture_Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Culture', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Lookup table containing the languages in which some AdventureWorks data is stored.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Culture'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Production].[ProductModelProductDescriptionCulture]    Script Date: 9/26/2023 12:09:59 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[ProductModelProductDescriptionCulture]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Production].[ProductModelProductDescriptionCulture](\r\n\t[ProductModelID] [int] NOT NULL,\r\n\t[ProductDescriptionID] [int] NOT NULL,\r\n\t[CultureID] [nchar](6) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_ProductModelProductDescriptionCulture_ProductModelID_ProductDescriptionID_CultureID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[ProductModelID] ASC,\r\n\t[ProductDescriptionID] ASC,\r\n\t[CultureID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_ProductModelProductDescriptionCulture_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[ProductModelProductDescriptionCulture] ADD  CONSTRAINT [DF_ProductModelProductDescriptionCulture_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModelProductDescriptionCulture', N'COLUMN',N'ProductModelID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to ProductModel.ProductModelID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelProductDescriptionCulture', @level2type=N'COLUMN',@level2name=N'ProductModelID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModelProductDescriptionCulture', N'COLUMN',N'ProductDescriptionID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to ProductDescription.ProductDescriptionID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelProductDescriptionCulture', @level2type=N'COLUMN',@level2name=N'ProductDescriptionID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModelProductDescriptionCulture', N'COLUMN',N'CultureID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Culture identification number. Foreign key to Culture.CultureID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelProductDescriptionCulture', @level2type=N'COLUMN',@level2name=N'CultureID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModelProductDescriptionCulture', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelProductDescriptionCulture', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModelProductDescriptionCulture', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Cross-reference table mapping product descriptions and the language the description is written in.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelProductDescriptionCulture'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Sales].[SalesPerson]    Script Date: 9/26/2023 12:09:59 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[SalesPerson]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Sales].[SalesPerson](\r\n\t[BusinessEntityID] [int] NOT NULL,\r\n\t[TerritoryID] [int] NULL,\r\n\t[SalesQuota] [money] NULL,\r\n\t[Bonus] [money] NOT NULL,\r\n\t[CommissionPct] [smallmoney] NOT NULL,\r\n\t[SalesYTD] [money] NOT NULL,\r\n\t[SalesLastYear] [money] NOT NULL,\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_SalesPerson_BusinessEntityID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[BusinessEntityID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Sales].[SalesPerson]') AND name = N'AK_SalesPerson_rowguid')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_SalesPerson_rowguid] ON [Sales].[SalesPerson]\r\n(\r\n\t[rowguid] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesPerson_Bonus]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesPerson] ADD  CONSTRAINT [DF_SalesPerson_Bonus]  DEFAULT ((0.00)) FOR [Bonus]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesPerson_CommissionPct]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesPerson] ADD  CONSTRAINT [DF_SalesPerson_CommissionPct]  DEFAULT ((0.00)) FOR [CommissionPct]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesPerson_SalesYTD]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesPerson] ADD  CONSTRAINT [DF_SalesPerson_SalesYTD]  DEFAULT ((0.00)) FOR [SalesYTD]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesPerson_SalesLastYear]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesPerson] ADD  CONSTRAINT [DF_SalesPerson_SalesLastYear]  DEFAULT ((0.00)) FOR [SalesLastYear]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesPerson_rowguid]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesPerson] ADD  CONSTRAINT [DF_SalesPerson_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesPerson_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesPerson] ADD  CONSTRAINT [DF_SalesPerson_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPerson', N'COLUMN',N'BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for SalesPerson records. Foreign key to Employee.BusinessEntityID' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPerson', N'COLUMN',N'TerritoryID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Territory currently assigned to. Foreign key to SalesTerritory.SalesTerritoryID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'COLUMN',@level2name=N'TerritoryID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPerson', N'COLUMN',N'SalesQuota'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Projected yearly sales.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'COLUMN',@level2name=N'SalesQuota'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPerson', N'COLUMN',N'Bonus'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Bonus due if quota is met.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'COLUMN',@level2name=N'Bonus'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPerson', N'COLUMN',N'CommissionPct'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Commision percent received per sale.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'COLUMN',@level2name=N'CommissionPct'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPerson', N'COLUMN',N'SalesYTD'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales total year to date.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'COLUMN',@level2name=N'SalesYTD'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPerson', N'COLUMN',N'SalesLastYear'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales total of previous year.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'COLUMN',@level2name=N'SalesLastYear'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPerson', N'COLUMN',N'rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'COLUMN',@level2name=N'rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPerson', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPerson', N'INDEX',N'AK_SalesPerson_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'INDEX',@level2name=N'AK_SalesPerson_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPerson', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales representative current information.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  XmlSchemaCollection [StoreSurveySchemaCollection]    Script Date: 9/26/2023 12:09:59 PM ******/\r\nIF NOT EXISTS (SELECT * FROM sys.xml_schema_collections c, sys.schemas s WHERE c.schema_id = s.schema_id AND (quotename(s.name) + '.' + quotename(c.name)) = N'[Sales].[StoreSurveySchemaCollection]')\r\nCREATE XML SCHEMA COLLECTION [Sales].[StoreSurveySchemaCollection] AS N'<xsd:schema xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:t=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey\" targetNamespace=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey\" elementFormDefault=\"qualified\"><xsd:element name=\"StoreSurvey\"><xsd:complexType><xsd:complexContent><xsd:restriction base=\"xsd:anyType\"><xsd:sequence><xsd:element name=\"ContactName\" type=\"xsd:string\" minOccurs=\"0\" /><xsd:element name=\"JobTitle\" type=\"xsd:string\" minOccurs=\"0\" /><xsd:element name=\"AnnualSales\" type=\"xsd:decimal\" minOccurs=\"0\" /><xsd:element name=\"AnnualRevenue\" type=\"xsd:decimal\" minOccurs=\"0\" /><xsd:element name=\"BankName\" type=\"xsd:string\" minOccurs=\"0\" /><xsd:element name=\"BusinessType\" type=\"t:BusinessType\" minOccurs=\"0\" /><xsd:element name=\"YearOpened\" type=\"xsd:gYear\" minOccurs=\"0\" /><xsd:element name=\"Specialty\" type=\"t:SpecialtyType\" minOccurs=\"0\" /><xsd:element name=\"SquareFeet\" type=\"xsd:float\" minOccurs=\"0\" /><xsd:element name=\"Brands\" type=\"t:BrandType\" minOccurs=\"0\" /><xsd:element name=\"Internet\" type=\"t:InternetType\" minOccurs=\"0\" /><xsd:element name=\"NumberEmployees\" type=\"xsd:int\" minOccurs=\"0\" /><xsd:element name=\"Comments\" type=\"xsd:string\" minOccurs=\"0\" /></xsd:sequence></xsd:restriction></xsd:complexContent></xsd:complexType></xsd:element><xsd:simpleType name=\"BrandType\"><xsd:restriction base=\"xsd:string\"><xsd:enumeration value=\"AW\" /><xsd:enumeration value=\"2\" /><xsd:enumeration value=\"3\" /><xsd:enumeration value=\"4+\" /></xsd:restriction></xsd:simpleType><xsd:simpleType name=\"BusinessType\"><xsd:restriction base=\"xsd:string\"><xsd:enumeration value=\"BM\" /><xsd:enumeration value=\"BS\" /><xsd:enumeration value=\"D\" /><xsd:enumeration value=\"OS\" /><xsd:enumeration value=\"SGS\" /></xsd:restriction></xsd:simpleType><xsd:simpleType name=\"InternetType\"><xsd:restriction base=\"xsd:string\"><xsd:enumeration value=\"56kb\" /><xsd:enumeration value=\"ISDN\" /><xsd:enumeration value=\"DSL\" /><xsd:enumeration value=\"T1\" /><xsd:enumeration value=\"T2\" /><xsd:enumeration value=\"T3\" /></xsd:restriction></xsd:simpleType><xsd:simpleType name=\"SpecialtyType\"><xsd:restriction base=\"xsd:string\"><xsd:enumeration value=\"Family\" /><xsd:enumeration value=\"Kids\" /><xsd:enumeration value=\"BMX\" /><xsd:enumeration value=\"Touring\" /><xsd:enumeration value=\"Road\" /><xsd:enumeration value=\"Mountain\" /><xsd:enumeration value=\"All\" /></xsd:restriction></xsd:simpleType></xsd:schema>'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'XML SCHEMA COLLECTION',N'StoreSurveySchemaCollection', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Collection of XML schemas for the Demographics column in the Sales.Store table.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'XML SCHEMA COLLECTION',@level1name=N'StoreSurveySchemaCollection'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Sales].[Store]    Script Date: 9/26/2023 12:09:59 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[Store]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Sales].[Store](\r\n\t[BusinessEntityID] [int] NOT NULL,\r\n\t[Name] [dbo].[Name] NOT NULL,\r\n\t[SalesPersonID] [int] NULL,\r\n\t[Demographics] [xml](CONTENT [Sales].[StoreSurveySchemaCollection]) NULL,\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_Store_BusinessEntityID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[BusinessEntityID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Sales].[Store]') AND name = N'AK_Store_rowguid')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Store_rowguid] ON [Sales].[Store]\r\n(\r\n\t[rowguid] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Sales].[Store]') AND name = N'IX_Store_SalesPersonID')\r\nCREATE NONCLUSTERED INDEX [IX_Store_SalesPersonID] ON [Sales].[Store]\r\n(\r\n\t[SalesPersonID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ARITHABORT ON\r\nSET CONCAT_NULL_YIELDS_NULL ON\r\nSET QUOTED_IDENTIFIER ON\r\nSET ANSI_NULLS ON\r\nSET ANSI_PADDING ON\r\nSET ANSI_WARNINGS ON\r\nSET NUMERIC_ROUNDABORT OFF",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Sales].[Store]') AND name = N'PXML_Store_Demographics')\r\nCREATE PRIMARY XML INDEX [PXML_Store_Demographics] ON [Sales].[Store]\r\n(\r\n\t[Demographics]\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_Store_rowguid]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[Store] ADD  CONSTRAINT [DF_Store_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_Store_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[Store] ADD  CONSTRAINT [DF_Store_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Store', N'COLUMN',N'BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to Customer.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Store', N'COLUMN',N'Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Name of the store.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store', @level2type=N'COLUMN',@level2name=N'Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Store', N'COLUMN',N'SalesPersonID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ID of the sales person assigned to the customer. Foreign key to SalesPerson.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store', @level2type=N'COLUMN',@level2name=N'SalesPersonID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Store', N'COLUMN',N'Demographics'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Demographic informationg about the store such as the number of employees, annual sales and store type.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store', @level2type=N'COLUMN',@level2name=N'Demographics'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Store', N'COLUMN',N'rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store', @level2type=N'COLUMN',@level2name=N'rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Store', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Store', N'INDEX',N'AK_Store_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store', @level2type=N'INDEX',@level2name=N'AK_Store_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Store', N'INDEX',N'IX_Store_SalesPersonID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store', @level2type=N'INDEX',@level2name=N'IX_Store_SalesPersonID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Store', N'INDEX',N'PXML_Store_Demographics'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary XML index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store', @level2type=N'INDEX',@level2name=N'PXML_Store_Demographics'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Store', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Customers (resellers) of Adventure Works products.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Production].[ProductPhoto]    Script Date: 9/26/2023 12:09:59 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[ProductPhoto]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Production].[ProductPhoto](\r\n\t[ProductPhotoID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[ThumbNailPhoto] [varbinary](max) NULL,\r\n\t[ThumbnailPhotoFileName] [nvarchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n\t[LargePhoto] [varbinary](max) NULL,\r\n\t[LargePhotoFileName] [nvarchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_ProductPhoto_ProductPhotoID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[ProductPhotoID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_ProductPhoto_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[ProductPhoto] ADD  CONSTRAINT [DF_ProductPhoto_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductPhoto', N'COLUMN',N'ProductPhotoID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for ProductPhoto records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductPhoto', @level2type=N'COLUMN',@level2name=N'ProductPhotoID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductPhoto', N'COLUMN',N'ThumbNailPhoto'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Small image of the product.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductPhoto', @level2type=N'COLUMN',@level2name=N'ThumbNailPhoto'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductPhoto', N'COLUMN',N'ThumbnailPhotoFileName'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Small image file name.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductPhoto', @level2type=N'COLUMN',@level2name=N'ThumbnailPhotoFileName'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductPhoto', N'COLUMN',N'LargePhoto'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Large image of the product.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductPhoto', @level2type=N'COLUMN',@level2name=N'LargePhoto'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductPhoto', N'COLUMN',N'LargePhotoFileName'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Large image file name.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductPhoto', @level2type=N'COLUMN',@level2name=N'LargePhotoFileName'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductPhoto', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductPhoto', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductPhoto', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product images.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductPhoto'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Production].[ProductProductPhoto]    Script Date: 9/26/2023 12:09:59 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[ProductProductPhoto]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Production].[ProductProductPhoto](\r\n\t[ProductID] [int] NOT NULL,\r\n\t[ProductPhotoID] [int] NOT NULL,\r\n\t[Primary] [dbo].[Flag] NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_ProductProductPhoto_ProductID_ProductPhotoID] PRIMARY KEY NONCLUSTERED \r\n(\r\n\t[ProductID] ASC,\r\n\t[ProductPhotoID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_ProductProductPhoto_Primary]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[ProductProductPhoto] ADD  CONSTRAINT [DF_ProductProductPhoto_Primary]  DEFAULT ((0)) FOR [Primary]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_ProductProductPhoto_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[ProductProductPhoto] ADD  CONSTRAINT [DF_ProductProductPhoto_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductProductPhoto', N'COLUMN',N'ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product identification number. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductProductPhoto', @level2type=N'COLUMN',@level2name=N'ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductProductPhoto', N'COLUMN',N'ProductPhotoID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductProductPhoto', @level2type=N'COLUMN',@level2name=N'ProductPhotoID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductProductPhoto', N'COLUMN',N'Primary'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'0 = Photo is not the principal image. 1 = Photo is the principal image.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductProductPhoto', @level2type=N'COLUMN',@level2name=N'Primary'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductProductPhoto', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductProductPhoto', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductProductPhoto', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Cross-reference table mapping products and product photos.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductProductPhoto'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Production].[TransactionHistory]    Script Date: 9/26/2023 12:09:59 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[TransactionHistory]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Production].[TransactionHistory](\r\n\t[TransactionID] [int] IDENTITY(100000,1) NOT NULL,\r\n\t[ProductID] [int] NOT NULL,\r\n\t[ReferenceOrderID] [int] NOT NULL,\r\n\t[ReferenceOrderLineID] [int] NOT NULL,\r\n\t[TransactionDate] [datetime] NOT NULL,\r\n\t[TransactionType] [nchar](1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[Quantity] [int] NOT NULL,\r\n\t[ActualCost] [money] NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_TransactionHistory_TransactionID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[TransactionID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[TransactionHistory]') AND name = N'IX_TransactionHistory_ProductID')\r\nCREATE NONCLUSTERED INDEX [IX_TransactionHistory_ProductID] ON [Production].[TransactionHistory]\r\n(\r\n\t[ProductID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[TransactionHistory]') AND name = N'IX_TransactionHistory_ReferenceOrderID_ReferenceOrderLineID')\r\nCREATE NONCLUSTERED INDEX [IX_TransactionHistory_ReferenceOrderID_ReferenceOrderLineID] ON [Production].[TransactionHistory]\r\n(\r\n\t[ReferenceOrderID] ASC,\r\n\t[ReferenceOrderLineID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_TransactionHistory_ReferenceOrderLineID]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[TransactionHistory] ADD  CONSTRAINT [DF_TransactionHistory_ReferenceOrderLineID]  DEFAULT ((0)) FOR [ReferenceOrderLineID]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_TransactionHistory_TransactionDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[TransactionHistory] ADD  CONSTRAINT [DF_TransactionHistory_TransactionDate]  DEFAULT (getdate()) FOR [TransactionDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_TransactionHistory_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[TransactionHistory] ADD  CONSTRAINT [DF_TransactionHistory_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistory', N'COLUMN',N'TransactionID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for TransactionHistory records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'COLUMN',@level2name=N'TransactionID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistory', N'COLUMN',N'ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product identification number. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'COLUMN',@level2name=N'ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistory', N'COLUMN',N'ReferenceOrderID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Purchase order, sales order, or work order identification number.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'COLUMN',@level2name=N'ReferenceOrderID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistory', N'COLUMN',N'ReferenceOrderLineID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Line number associated with the purchase order, sales order, or work order.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'COLUMN',@level2name=N'ReferenceOrderLineID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistory', N'COLUMN',N'TransactionDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time of the transaction.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'COLUMN',@level2name=N'TransactionDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistory', N'COLUMN',N'TransactionType'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'W = WorkOrder, S = SalesOrder, P = PurchaseOrder' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'COLUMN',@level2name=N'TransactionType'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistory', N'COLUMN',N'Quantity'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product quantity.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'COLUMN',@level2name=N'Quantity'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistory', N'COLUMN',N'ActualCost'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product cost.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'COLUMN',@level2name=N'ActualCost'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistory', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistory', N'INDEX',N'IX_TransactionHistory_ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'INDEX',@level2name=N'IX_TransactionHistory_ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistory', N'INDEX',N'IX_TransactionHistory_ReferenceOrderID_ReferenceOrderLineID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'INDEX',@level2name=N'IX_TransactionHistory_ReferenceOrderID_ReferenceOrderLineID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistory', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Record of each purchase order, sales order, or work order transaction year to date.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Production].[ProductReview]    Script Date: 9/26/2023 12:09:59 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[ProductReview]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Production].[ProductReview](\r\n\t[ProductReviewID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[ProductID] [int] NOT NULL,\r\n\t[ReviewerName] [dbo].[Name] NOT NULL,\r\n\t[ReviewDate] [datetime] NOT NULL,\r\n\t[EmailAddress] [nvarchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[Rating] [int] NOT NULL,\r\n\t[Comments] [nvarchar](3850) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_ProductReview_ProductReviewID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[ProductReviewID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[ProductReview]') AND name = N'IX_ProductReview_ProductID_Name')\r\nCREATE NONCLUSTERED INDEX [IX_ProductReview_ProductID_Name] ON [Production].[ProductReview]\r\n(\r\n\t[ProductID] ASC,\r\n\t[ReviewerName] ASC\r\n)\r\nINCLUDE ( \t[Comments]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF not EXISTS (SELECT * FROM sys.fulltext_indexes fti WHERE fti.object_id = OBJECT_ID(N'[Production].[ProductReview]'))\r\nCREATE FULLTEXT INDEX ON [Production].[ProductReview]\r\nKEY INDEX [PK_ProductReview_ProductReviewID]ON ([AW2008FullTextCatalog], FILEGROUP [PRIMARY])\r\nWITH (CHANGE_TRACKING = AUTO, STOPLIST = SYSTEM)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_ProductReview_ReviewDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[ProductReview] ADD  CONSTRAINT [DF_ProductReview_ReviewDate]  DEFAULT (getdate()) FOR [ReviewDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_ProductReview_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[ProductReview] ADD  CONSTRAINT [DF_ProductReview_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductReview', N'COLUMN',N'ProductReviewID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for ProductReview records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview', @level2type=N'COLUMN',@level2name=N'ProductReviewID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductReview', N'COLUMN',N'ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product identification number. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview', @level2type=N'COLUMN',@level2name=N'ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductReview', N'COLUMN',N'ReviewerName'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Name of the reviewer.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview', @level2type=N'COLUMN',@level2name=N'ReviewerName'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductReview', N'COLUMN',N'ReviewDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date review was submitted.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview', @level2type=N'COLUMN',@level2name=N'ReviewDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductReview', N'COLUMN',N'EmailAddress'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Reviewer''s e-mail address.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview', @level2type=N'COLUMN',@level2name=N'EmailAddress'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductReview', N'COLUMN',N'Rating'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product rating given by the reviewer. Scale is 1 to 5 with 5 as the highest rating.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview', @level2type=N'COLUMN',@level2name=N'Rating'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductReview', N'COLUMN',N'Comments'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Reviewer''s comments' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview', @level2type=N'COLUMN',@level2name=N'Comments'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductReview', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductReview', N'INDEX',N'IX_ProductReview_ProductID_Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview', @level2type=N'INDEX',@level2name=N'IX_ProductReview_ProductID_Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductReview', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Customer reviews of products they have purchased.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Production].[TransactionHistoryArchive]    Script Date: 9/26/2023 12:09:59 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[TransactionHistoryArchive]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Production].[TransactionHistoryArchive](\r\n\t[TransactionID] [int] NOT NULL,\r\n\t[ProductID] [int] NOT NULL,\r\n\t[ReferenceOrderID] [int] NOT NULL,\r\n\t[ReferenceOrderLineID] [int] NOT NULL,\r\n\t[TransactionDate] [datetime] NOT NULL,\r\n\t[TransactionType] [nchar](1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[Quantity] [int] NOT NULL,\r\n\t[ActualCost] [money] NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_TransactionHistoryArchive_TransactionID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[TransactionID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[TransactionHistoryArchive]') AND name = N'IX_TransactionHistoryArchive_ProductID')\r\nCREATE NONCLUSTERED INDEX [IX_TransactionHistoryArchive_ProductID] ON [Production].[TransactionHistoryArchive]\r\n(\r\n\t[ProductID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[TransactionHistoryArchive]') AND name = N'IX_TransactionHistoryArchive_ReferenceOrderID_ReferenceOrderLineID')\r\nCREATE NONCLUSTERED INDEX [IX_TransactionHistoryArchive_ReferenceOrderID_ReferenceOrderLineID] ON [Production].[TransactionHistoryArchive]\r\n(\r\n\t[ReferenceOrderID] ASC,\r\n\t[ReferenceOrderLineID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_TransactionHistoryArchive_ReferenceOrderLineID]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[TransactionHistoryArchive] ADD  CONSTRAINT [DF_TransactionHistoryArchive_ReferenceOrderLineID]  DEFAULT ((0)) FOR [ReferenceOrderLineID]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_TransactionHistoryArchive_TransactionDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[TransactionHistoryArchive] ADD  CONSTRAINT [DF_TransactionHistoryArchive_TransactionDate]  DEFAULT (getdate()) FOR [TransactionDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_TransactionHistoryArchive_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[TransactionHistoryArchive] ADD  CONSTRAINT [DF_TransactionHistoryArchive_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistoryArchive', N'COLUMN',N'TransactionID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for TransactionHistoryArchive records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'COLUMN',@level2name=N'TransactionID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistoryArchive', N'COLUMN',N'ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product identification number. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'COLUMN',@level2name=N'ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistoryArchive', N'COLUMN',N'ReferenceOrderID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Purchase order, sales order, or work order identification number.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'COLUMN',@level2name=N'ReferenceOrderID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistoryArchive', N'COLUMN',N'ReferenceOrderLineID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Line number associated with the purchase order, sales order, or work order.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'COLUMN',@level2name=N'ReferenceOrderLineID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistoryArchive', N'COLUMN',N'TransactionDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time of the transaction.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'COLUMN',@level2name=N'TransactionDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistoryArchive', N'COLUMN',N'TransactionType'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'W = Work Order, S = Sales Order, P = Purchase Order' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'COLUMN',@level2name=N'TransactionType'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistoryArchive', N'COLUMN',N'Quantity'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product quantity.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'COLUMN',@level2name=N'Quantity'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistoryArchive', N'COLUMN',N'ActualCost'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product cost.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'COLUMN',@level2name=N'ActualCost'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistoryArchive', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistoryArchive', N'INDEX',N'IX_TransactionHistoryArchive_ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'INDEX',@level2name=N'IX_TransactionHistoryArchive_ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistoryArchive', N'INDEX',N'IX_TransactionHistoryArchive_ReferenceOrderID_ReferenceOrderLineID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'INDEX',@level2name=N'IX_TransactionHistoryArchive_ReferenceOrderID_ReferenceOrderLineID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistoryArchive', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Transactions for previous years.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Person].[BusinessEntityAddress]    Script Date: 9/26/2023 12:10:00 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[BusinessEntityAddress]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Person].[BusinessEntityAddress](\r\n\t[BusinessEntityID] [int] NOT NULL,\r\n\t[AddressID] [int] NOT NULL,\r\n\t[AddressTypeID] [int] NOT NULL,\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_BusinessEntityAddress_BusinessEntityID_AddressID_AddressTypeID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[BusinessEntityID] ASC,\r\n\t[AddressID] ASC,\r\n\t[AddressTypeID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Person].[BusinessEntityAddress]') AND name = N'AK_BusinessEntityAddress_rowguid')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_BusinessEntityAddress_rowguid] ON [Person].[BusinessEntityAddress]\r\n(\r\n\t[rowguid] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Person].[BusinessEntityAddress]') AND name = N'IX_BusinessEntityAddress_AddressID')\r\nCREATE NONCLUSTERED INDEX [IX_BusinessEntityAddress_AddressID] ON [Person].[BusinessEntityAddress]\r\n(\r\n\t[AddressID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Person].[BusinessEntityAddress]') AND name = N'IX_BusinessEntityAddress_AddressTypeID')\r\nCREATE NONCLUSTERED INDEX [IX_BusinessEntityAddress_AddressTypeID] ON [Person].[BusinessEntityAddress]\r\n(\r\n\t[AddressTypeID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[DF_BusinessEntityAddress_rowguid]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Person].[BusinessEntityAddress] ADD  CONSTRAINT [DF_BusinessEntityAddress_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[DF_BusinessEntityAddress_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Person].[BusinessEntityAddress] ADD  CONSTRAINT [DF_BusinessEntityAddress_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityAddress', N'COLUMN',N'BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to BusinessEntity.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityAddress', N'COLUMN',N'AddressID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to Address.AddressID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress', @level2type=N'COLUMN',@level2name=N'AddressID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityAddress', N'COLUMN',N'AddressTypeID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to AddressType.AddressTypeID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress', @level2type=N'COLUMN',@level2name=N'AddressTypeID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityAddress', N'COLUMN',N'rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress', @level2type=N'COLUMN',@level2name=N'rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityAddress', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityAddress', N'INDEX',N'AK_BusinessEntityAddress_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress', @level2type=N'INDEX',@level2name=N'AK_BusinessEntityAddress_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityAddress', N'INDEX',N'IX_BusinessEntityAddress_AddressID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress', @level2type=N'INDEX',@level2name=N'IX_BusinessEntityAddress_AddressID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityAddress', N'INDEX',N'IX_BusinessEntityAddress_AddressTypeID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress', @level2type=N'INDEX',@level2name=N'IX_BusinessEntityAddress_AddressTypeID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityAddress', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Cross-reference table mapping customers, vendors, and employees to their addresses.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  UserDefinedDataType [dbo].[AccountNumber]    Script Date: 9/26/2023 12:10:00 PM ******/\r\nIF NOT EXISTS (SELECT * FROM sys.types st JOIN sys.schemas ss ON st.schema_id = ss.schema_id WHERE st.name = N'AccountNumber' AND ss.name = N'dbo')\r\nCREATE TYPE [dbo].[AccountNumber] FROM [nvarchar](15) NULL",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Purchasing].[Vendor]    Script Date: 9/26/2023 12:10:00 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Purchasing].[Vendor]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Purchasing].[Vendor](\r\n\t[BusinessEntityID] [int] NOT NULL,\r\n\t[AccountNumber] [dbo].[AccountNumber] NOT NULL,\r\n\t[Name] [dbo].[Name] NOT NULL,\r\n\t[CreditRating] [tinyint] NOT NULL,\r\n\t[PreferredVendorStatus] [dbo].[Flag] NOT NULL,\r\n\t[ActiveFlag] [dbo].[Flag] NOT NULL,\r\n\t[PurchasingWebServiceURL] [nvarchar](1024) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_Vendor_BusinessEntityID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[BusinessEntityID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Purchasing].[Vendor]') AND name = N'AK_Vendor_AccountNumber')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Vendor_AccountNumber] ON [Purchasing].[Vendor]\r\n(\r\n\t[AccountNumber] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Purchasing].[DF_Vendor_PreferredVendorStatus]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Purchasing].[Vendor] ADD  CONSTRAINT [DF_Vendor_PreferredVendorStatus]  DEFAULT ((1)) FOR [PreferredVendorStatus]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Purchasing].[DF_Vendor_ActiveFlag]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Purchasing].[Vendor] ADD  CONSTRAINT [DF_Vendor_ActiveFlag]  DEFAULT ((1)) FOR [ActiveFlag]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Purchasing].[DF_Vendor_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Purchasing].[Vendor] ADD  CONSTRAINT [DF_Vendor_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.triggers WHERE object_id = OBJECT_ID(N'[Purchasing].[dVendor]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE TRIGGER [Purchasing].[dVendor] ON [Purchasing].[Vendor] \r\nINSTEAD OF DELETE NOT FOR REPLICATION AS \r\nBEGIN\r\n    DECLARE @Count int;\r\n\r\n    SET @Count = @@ROWCOUNT;\r\n    IF @Count = 0 \r\n        RETURN;\r\n\r\n    SET NOCOUNT ON;\r\n\r\n    BEGIN TRY\r\n        DECLARE @DeleteCount int;\r\n\r\n        SELECT @DeleteCount = COUNT(*) FROM deleted;\r\n        IF @DeleteCount > 0 \r\n        BEGIN\r\n            RAISERROR\r\n                (N''Vendors cannot be deleted. They can only be marked as not active.'', -- Message\r\n                10, -- Severity.\r\n                1); -- State.\r\n\r\n        -- Rollback any active or uncommittable transactions\r\n            IF @@TRANCOUNT > 0\r\n            BEGIN\r\n                ROLLBACK TRANSACTION;\r\n            END\r\n        END;\r\n    END TRY\r\n    BEGIN CATCH\r\n        EXECUTE [dbo].[uspPrintError];\r\n\r\n        -- Rollback any active or uncommittable transactions before\r\n        -- inserting information in the ErrorLog\r\n        IF @@TRANCOUNT > 0\r\n        BEGIN\r\n            ROLLBACK TRANSACTION;\r\n        END\r\n\r\n        EXECUTE [dbo].[uspLogError];\r\n    END CATCH;\r\nEND;\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "ALTER TABLE [Purchasing].[Vendor] ENABLE TRIGGER [dVendor]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'Vendor', N'COLUMN',N'BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for Vendor records.  Foreign key to BusinessEntity.BusinessEntityID' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'Vendor', N'COLUMN',N'AccountNumber'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Vendor account (identification) number.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'COLUMN',@level2name=N'AccountNumber'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'Vendor', N'COLUMN',N'Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Company name.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'COLUMN',@level2name=N'Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'Vendor', N'COLUMN',N'CreditRating'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'1 = Superior, 2 = Excellent, 3 = Above average, 4 = Average, 5 = Below average' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'COLUMN',@level2name=N'CreditRating'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'Vendor', N'COLUMN',N'PreferredVendorStatus'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'0 = Do not use if another vendor is available. 1 = Preferred over other vendors supplying the same product.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'COLUMN',@level2name=N'PreferredVendorStatus'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'Vendor', N'COLUMN',N'ActiveFlag'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'0 = Vendor no longer used. 1 = Vendor is actively used.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'COLUMN',@level2name=N'ActiveFlag'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'Vendor', N'COLUMN',N'PurchasingWebServiceURL'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Vendor URL.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'COLUMN',@level2name=N'PurchasingWebServiceURL'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'Vendor', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'Vendor', N'INDEX',N'AK_Vendor_AccountNumber'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'INDEX',@level2name=N'AK_Vendor_AccountNumber'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'Vendor', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Companies from whom Adventure Works Cycles purchases parts or other goods.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'Vendor', N'TRIGGER',N'dVendor'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'INSTEAD OF DELETE trigger which keeps Vendors from being deleted.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'TRIGGER',@level2name=N'dVendor'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Purchasing].[ProductVendor]    Script Date: 9/26/2023 12:10:00 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Purchasing].[ProductVendor]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Purchasing].[ProductVendor](\r\n\t[ProductID] [int] NOT NULL,\r\n\t[BusinessEntityID] [int] NOT NULL,\r\n\t[AverageLeadTime] [int] NOT NULL,\r\n\t[StandardPrice] [money] NOT NULL,\r\n\t[LastReceiptCost] [money] NULL,\r\n\t[LastReceiptDate] [datetime] NULL,\r\n\t[MinOrderQty] [int] NOT NULL,\r\n\t[MaxOrderQty] [int] NOT NULL,\r\n\t[OnOrderQty] [int] NULL,\r\n\t[UnitMeasureCode] [nchar](3) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_ProductVendor_ProductID_BusinessEntityID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[ProductID] ASC,\r\n\t[BusinessEntityID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Purchasing].[ProductVendor]') AND name = N'IX_ProductVendor_BusinessEntityID')\r\nCREATE NONCLUSTERED INDEX [IX_ProductVendor_BusinessEntityID] ON [Purchasing].[ProductVendor]\r\n(\r\n\t[BusinessEntityID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Purchasing].[ProductVendor]') AND name = N'IX_ProductVendor_UnitMeasureCode')\r\nCREATE NONCLUSTERED INDEX [IX_ProductVendor_UnitMeasureCode] ON [Purchasing].[ProductVendor]\r\n(\r\n\t[UnitMeasureCode] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Purchasing].[DF_ProductVendor_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Purchasing].[ProductVendor] ADD  CONSTRAINT [DF_ProductVendor_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ProductVendor', N'COLUMN',N'ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'COLUMN',@level2name=N'ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ProductVendor', N'COLUMN',N'BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to Vendor.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ProductVendor', N'COLUMN',N'AverageLeadTime'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The average span of time (in days) between placing an order with the vendor and receiving the purchased product.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'COLUMN',@level2name=N'AverageLeadTime'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ProductVendor', N'COLUMN',N'StandardPrice'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The vendor''s usual selling price.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'COLUMN',@level2name=N'StandardPrice'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ProductVendor', N'COLUMN',N'LastReceiptCost'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The selling price when last purchased.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'COLUMN',@level2name=N'LastReceiptCost'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ProductVendor', N'COLUMN',N'LastReceiptDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date the product was last received by the vendor.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'COLUMN',@level2name=N'LastReceiptDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ProductVendor', N'COLUMN',N'MinOrderQty'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The maximum quantity that should be ordered.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'COLUMN',@level2name=N'MinOrderQty'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ProductVendor', N'COLUMN',N'MaxOrderQty'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The minimum quantity that should be ordered.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'COLUMN',@level2name=N'MaxOrderQty'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ProductVendor', N'COLUMN',N'OnOrderQty'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The quantity currently on order.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'COLUMN',@level2name=N'OnOrderQty'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ProductVendor', N'COLUMN',N'UnitMeasureCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The product''s unit of measure.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'COLUMN',@level2name=N'UnitMeasureCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ProductVendor', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ProductVendor', N'INDEX',N'IX_ProductVendor_BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'INDEX',@level2name=N'IX_ProductVendor_BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ProductVendor', N'INDEX',N'IX_ProductVendor_UnitMeasureCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'INDEX',@level2name=N'IX_ProductVendor_UnitMeasureCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ProductVendor', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Cross-reference table mapping vendors with the products they supply.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Person].[ContactType]    Script Date: 9/26/2023 12:10:00 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[ContactType]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Person].[ContactType](\r\n\t[ContactTypeID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[Name] [dbo].[Name] NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_ContactType_ContactTypeID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[ContactTypeID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Person].[ContactType]') AND name = N'AK_ContactType_Name')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_ContactType_Name] ON [Person].[ContactType]\r\n(\r\n\t[Name] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[DF_ContactType_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Person].[ContactType] ADD  CONSTRAINT [DF_ContactType_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'ContactType', N'COLUMN',N'ContactTypeID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for ContactType records.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'ContactType', @level2type=N'COLUMN',@level2name=N'ContactTypeID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'ContactType', N'COLUMN',N'Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Contact type description.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'ContactType', @level2type=N'COLUMN',@level2name=N'Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'ContactType', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'ContactType', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'ContactType', N'INDEX',N'AK_ContactType_Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'ContactType', @level2type=N'INDEX',@level2name=N'AK_ContactType_Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'ContactType', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Lookup table containing the types of business entity contacts.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'ContactType'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Person].[BusinessEntityContact]    Script Date: 9/26/2023 12:10:00 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[BusinessEntityContact]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Person].[BusinessEntityContact](\r\n\t[BusinessEntityID] [int] NOT NULL,\r\n\t[PersonID] [int] NOT NULL,\r\n\t[ContactTypeID] [int] NOT NULL,\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_BusinessEntityContact_BusinessEntityID_PersonID_ContactTypeID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[BusinessEntityID] ASC,\r\n\t[PersonID] ASC,\r\n\t[ContactTypeID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Person].[BusinessEntityContact]') AND name = N'AK_BusinessEntityContact_rowguid')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_BusinessEntityContact_rowguid] ON [Person].[BusinessEntityContact]\r\n(\r\n\t[rowguid] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Person].[BusinessEntityContact]') AND name = N'IX_BusinessEntityContact_ContactTypeID')\r\nCREATE NONCLUSTERED INDEX [IX_BusinessEntityContact_ContactTypeID] ON [Person].[BusinessEntityContact]\r\n(\r\n\t[ContactTypeID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Person].[BusinessEntityContact]') AND name = N'IX_BusinessEntityContact_PersonID')\r\nCREATE NONCLUSTERED INDEX [IX_BusinessEntityContact_PersonID] ON [Person].[BusinessEntityContact]\r\n(\r\n\t[PersonID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[DF_BusinessEntityContact_rowguid]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Person].[BusinessEntityContact] ADD  CONSTRAINT [DF_BusinessEntityContact_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[DF_BusinessEntityContact_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Person].[BusinessEntityContact] ADD  CONSTRAINT [DF_BusinessEntityContact_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityContact', N'COLUMN',N'BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to BusinessEntity.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityContact', N'COLUMN',N'PersonID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to Person.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact', @level2type=N'COLUMN',@level2name=N'PersonID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityContact', N'COLUMN',N'ContactTypeID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key.  Foreign key to ContactType.ContactTypeID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact', @level2type=N'COLUMN',@level2name=N'ContactTypeID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityContact', N'COLUMN',N'rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact', @level2type=N'COLUMN',@level2name=N'rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityContact', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityContact', N'INDEX',N'AK_BusinessEntityContact_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact', @level2type=N'INDEX',@level2name=N'AK_BusinessEntityContact_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityContact', N'INDEX',N'IX_BusinessEntityContact_ContactTypeID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact', @level2type=N'INDEX',@level2name=N'IX_BusinessEntityContact_ContactTypeID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityContact', N'INDEX',N'IX_BusinessEntityContact_PersonID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact', @level2type=N'INDEX',@level2name=N'IX_BusinessEntityContact_PersonID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityContact', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Cross-reference table mapping stores, vendors, and employees to people' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Sales].[Currency]    Script Date: 9/26/2023 12:10:00 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[Currency]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Sales].[Currency](\r\n\t[CurrencyCode] [nchar](3) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[Name] [dbo].[Name] NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_Currency_CurrencyCode] PRIMARY KEY CLUSTERED \r\n(\r\n\t[CurrencyCode] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Sales].[Currency]') AND name = N'AK_Currency_Name')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Currency_Name] ON [Sales].[Currency]\r\n(\r\n\t[Name] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_Currency_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[Currency] ADD  CONSTRAINT [DF_Currency_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Currency', N'COLUMN',N'CurrencyCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The ISO code for the Currency.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Currency', @level2type=N'COLUMN',@level2name=N'CurrencyCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Currency', N'COLUMN',N'Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Currency name.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Currency', @level2type=N'COLUMN',@level2name=N'Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Currency', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Currency', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Currency', N'INDEX',N'AK_Currency_Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Currency', @level2type=N'INDEX',@level2name=N'AK_Currency_Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Currency', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Lookup table containing standard ISO currencies.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Currency'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Sales].[CountryRegionCurrency]    Script Date: 9/26/2023 12:10:00 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[CountryRegionCurrency]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Sales].[CountryRegionCurrency](\r\n\t[CountryRegionCode] [nvarchar](3) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[CurrencyCode] [nchar](3) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_CountryRegionCurrency_CountryRegionCode_CurrencyCode] PRIMARY KEY CLUSTERED \r\n(\r\n\t[CountryRegionCode] ASC,\r\n\t[CurrencyCode] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Sales].[CountryRegionCurrency]') AND name = N'IX_CountryRegionCurrency_CurrencyCode')\r\nCREATE NONCLUSTERED INDEX [IX_CountryRegionCurrency_CurrencyCode] ON [Sales].[CountryRegionCurrency]\r\n(\r\n\t[CurrencyCode] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_CountryRegionCurrency_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[CountryRegionCurrency] ADD  CONSTRAINT [DF_CountryRegionCurrency_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CountryRegionCurrency', N'COLUMN',N'CountryRegionCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CountryRegionCurrency', @level2type=N'COLUMN',@level2name=N'CountryRegionCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CountryRegionCurrency', N'COLUMN',N'CurrencyCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ISO standard currency code. Foreign key to Currency.CurrencyCode.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CountryRegionCurrency', @level2type=N'COLUMN',@level2name=N'CurrencyCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CountryRegionCurrency', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CountryRegionCurrency', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CountryRegionCurrency', N'INDEX',N'IX_CountryRegionCurrency_CurrencyCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CountryRegionCurrency', @level2type=N'INDEX',@level2name=N'IX_CountryRegionCurrency_CurrencyCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CountryRegionCurrency', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Cross-reference table mapping ISO currency codes to a country or region.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CountryRegionCurrency'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Production].[WorkOrder]    Script Date: 9/26/2023 12:10:00 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[WorkOrder]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Production].[WorkOrder](\r\n\t[WorkOrderID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[ProductID] [int] NOT NULL,\r\n\t[OrderQty] [int] NOT NULL,\r\n\t[StockedQty]  AS (isnull([OrderQty]-[ScrappedQty],(0))),\r\n\t[ScrappedQty] [smallint] NOT NULL,\r\n\t[StartDate] [datetime] NOT NULL,\r\n\t[EndDate] [datetime] NULL,\r\n\t[DueDate] [datetime] NOT NULL,\r\n\t[ScrapReasonID] [smallint] NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_WorkOrder_WorkOrderID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[WorkOrderID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[WorkOrder]') AND name = N'IX_WorkOrder_ProductID')\r\nCREATE NONCLUSTERED INDEX [IX_WorkOrder_ProductID] ON [Production].[WorkOrder]\r\n(\r\n\t[ProductID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[WorkOrder]') AND name = N'IX_WorkOrder_ScrapReasonID')\r\nCREATE NONCLUSTERED INDEX [IX_WorkOrder_ScrapReasonID] ON [Production].[WorkOrder]\r\n(\r\n\t[ScrapReasonID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_WorkOrder_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[WorkOrder] ADD  CONSTRAINT [DF_WorkOrder_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.triggers WHERE object_id = OBJECT_ID(N'[Production].[iWorkOrder]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE TRIGGER [Production].[iWorkOrder] ON [Production].[WorkOrder] \r\nAFTER INSERT AS \r\nBEGIN\r\n    DECLARE @Count int;\r\n\r\n    SET @Count = @@ROWCOUNT;\r\n    IF @Count = 0 \r\n        RETURN;\r\n\r\n    SET NOCOUNT ON;\r\n\r\n    BEGIN TRY\r\n        INSERT INTO [Production].[TransactionHistory](\r\n            [ProductID]\r\n            ,[ReferenceOrderID]\r\n            ,[TransactionType]\r\n            ,[TransactionDate]\r\n            ,[Quantity]\r\n            ,[ActualCost])\r\n        SELECT \r\n            inserted.[ProductID]\r\n            ,inserted.[WorkOrderID]\r\n            ,''W''\r\n            ,GETDATE()\r\n            ,inserted.[OrderQty]\r\n            ,0\r\n        FROM inserted;\r\n    END TRY\r\n    BEGIN CATCH\r\n        EXECUTE [dbo].[uspPrintError];\r\n\r\n        -- Rollback any active or uncommittable transactions before\r\n        -- inserting information in the ErrorLog\r\n        IF @@TRANCOUNT > 0\r\n        BEGIN\r\n            ROLLBACK TRANSACTION;\r\n        END\r\n\r\n        EXECUTE [dbo].[uspLogError];\r\n    END CATCH;\r\nEND;\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "ALTER TABLE [Production].[WorkOrder] ENABLE TRIGGER [iWorkOrder]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.triggers WHERE object_id = OBJECT_ID(N'[Production].[uWorkOrder]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE TRIGGER [Production].[uWorkOrder] ON [Production].[WorkOrder] \r\nAFTER UPDATE AS \r\nBEGIN\r\n    DECLARE @Count int;\r\n\r\n    SET @Count = @@ROWCOUNT;\r\n    IF @Count = 0 \r\n        RETURN;\r\n\r\n    SET NOCOUNT ON;\r\n\r\n    BEGIN TRY\r\n        IF UPDATE([ProductID]) OR UPDATE([OrderQty])\r\n        BEGIN\r\n            INSERT INTO [Production].[TransactionHistory](\r\n                [ProductID]\r\n                ,[ReferenceOrderID]\r\n                ,[TransactionType]\r\n                ,[TransactionDate]\r\n                ,[Quantity])\r\n            SELECT \r\n                inserted.[ProductID]\r\n                ,inserted.[WorkOrderID]\r\n                ,''W''\r\n                ,GETDATE()\r\n                ,inserted.[OrderQty]\r\n            FROM inserted;\r\n        END;\r\n    END TRY\r\n    BEGIN CATCH\r\n        EXECUTE [dbo].[uspPrintError];\r\n\r\n        -- Rollback any active or uncommittable transactions before\r\n        -- inserting information in the ErrorLog\r\n        IF @@TRANCOUNT > 0\r\n        BEGIN\r\n            ROLLBACK TRANSACTION;\r\n        END\r\n\r\n        EXECUTE [dbo].[uspLogError];\r\n    END CATCH;\r\nEND;\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "ALTER TABLE [Production].[WorkOrder] ENABLE TRIGGER [uWorkOrder]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrder', N'COLUMN',N'WorkOrderID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for WorkOrder records.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'COLUMN',@level2name=N'WorkOrderID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrder', N'COLUMN',N'ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product identification number. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'COLUMN',@level2name=N'ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrder', N'COLUMN',N'OrderQty'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product quantity to build.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'COLUMN',@level2name=N'OrderQty'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrder', N'COLUMN',N'StockedQty'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Quantity built and put in inventory.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'COLUMN',@level2name=N'StockedQty'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrder', N'COLUMN',N'ScrappedQty'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Quantity that failed inspection.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'COLUMN',@level2name=N'ScrappedQty'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrder', N'COLUMN',N'StartDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Work order start date.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'COLUMN',@level2name=N'StartDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrder', N'COLUMN',N'EndDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Work order end date.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'COLUMN',@level2name=N'EndDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrder', N'COLUMN',N'DueDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Work order due date.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'COLUMN',@level2name=N'DueDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrder', N'COLUMN',N'ScrapReasonID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Reason for inspection failure.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'COLUMN',@level2name=N'ScrapReasonID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrder', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrder', N'INDEX',N'IX_WorkOrder_ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'INDEX',@level2name=N'IX_WorkOrder_ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrder', N'INDEX',N'IX_WorkOrder_ScrapReasonID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'INDEX',@level2name=N'IX_WorkOrder_ScrapReasonID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrder', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Manufacturing work orders.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrder', N'TRIGGER',N'iWorkOrder'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'AFTER INSERT trigger that inserts a row in the TransactionHistory table.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'TRIGGER',@level2name=N'iWorkOrder'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrder', N'TRIGGER',N'uWorkOrder'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'AFTER UPDATE trigger that inserts a row in the TransactionHistory table, updates ModifiedDate in the WorkOrder table.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'TRIGGER',@level2name=N'uWorkOrder'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Purchasing].[PurchaseOrderHeader]    Script Date: 9/26/2023 12:10:00 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderHeader]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Purchasing].[PurchaseOrderHeader](\r\n\t[PurchaseOrderID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[RevisionNumber] [tinyint] NOT NULL,\r\n\t[Status] [tinyint] NOT NULL,\r\n\t[EmployeeID] [int] NOT NULL,\r\n\t[VendorID] [int] NOT NULL,\r\n\t[ShipMethodID] [int] NOT NULL,\r\n\t[OrderDate] [datetime] NOT NULL,\r\n\t[ShipDate] [datetime] NULL,\r\n\t[SubTotal] [money] NOT NULL,\r\n\t[TaxAmt] [money] NOT NULL,\r\n\t[Freight] [money] NOT NULL,\r\n\t[TotalDue]  AS (isnull(([SubTotal]+[TaxAmt])+[Freight],(0))) PERSISTED NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_PurchaseOrderHeader_PurchaseOrderID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[PurchaseOrderID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderHeader]') AND name = N'IX_PurchaseOrderHeader_EmployeeID')\r\nCREATE NONCLUSTERED INDEX [IX_PurchaseOrderHeader_EmployeeID] ON [Purchasing].[PurchaseOrderHeader]\r\n(\r\n\t[EmployeeID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderHeader]') AND name = N'IX_PurchaseOrderHeader_VendorID')\r\nCREATE NONCLUSTERED INDEX [IX_PurchaseOrderHeader_VendorID] ON [Purchasing].[PurchaseOrderHeader]\r\n(\r\n\t[VendorID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Purchasing].[DF_PurchaseOrderHeader_RevisionNumber]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Purchasing].[PurchaseOrderHeader] ADD  CONSTRAINT [DF_PurchaseOrderHeader_RevisionNumber]  DEFAULT ((0)) FOR [RevisionNumber]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Purchasing].[DF_PurchaseOrderHeader_Status]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Purchasing].[PurchaseOrderHeader] ADD  CONSTRAINT [DF_PurchaseOrderHeader_Status]  DEFAULT ((1)) FOR [Status]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Purchasing].[DF_PurchaseOrderHeader_OrderDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Purchasing].[PurchaseOrderHeader] ADD  CONSTRAINT [DF_PurchaseOrderHeader_OrderDate]  DEFAULT (getdate()) FOR [OrderDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Purchasing].[DF_PurchaseOrderHeader_SubTotal]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Purchasing].[PurchaseOrderHeader] ADD  CONSTRAINT [DF_PurchaseOrderHeader_SubTotal]  DEFAULT ((0.00)) FOR [SubTotal]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Purchasing].[DF_PurchaseOrderHeader_TaxAmt]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Purchasing].[PurchaseOrderHeader] ADD  CONSTRAINT [DF_PurchaseOrderHeader_TaxAmt]  DEFAULT ((0.00)) FOR [TaxAmt]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Purchasing].[DF_PurchaseOrderHeader_Freight]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Purchasing].[PurchaseOrderHeader] ADD  CONSTRAINT [DF_PurchaseOrderHeader_Freight]  DEFAULT ((0.00)) FOR [Freight]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Purchasing].[DF_PurchaseOrderHeader_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Purchasing].[PurchaseOrderHeader] ADD  CONSTRAINT [DF_PurchaseOrderHeader_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.triggers WHERE object_id = OBJECT_ID(N'[Purchasing].[uPurchaseOrderHeader]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE TRIGGER [Purchasing].[uPurchaseOrderHeader] ON [Purchasing].[PurchaseOrderHeader] \r\nAFTER UPDATE AS \r\nBEGIN\r\n    DECLARE @Count int;\r\n\r\n    SET @Count = @@ROWCOUNT;\r\n    IF @Count = 0 \r\n        RETURN;\r\n\r\n    SET NOCOUNT ON;\r\n\r\n    BEGIN TRY\r\n        -- Update RevisionNumber for modification of any field EXCEPT the Status.\r\n        IF NOT UPDATE([Status])\r\n        BEGIN\r\n            UPDATE [Purchasing].[PurchaseOrderHeader]\r\n            SET [Purchasing].[PurchaseOrderHeader].[RevisionNumber] = \r\n                [Purchasing].[PurchaseOrderHeader].[RevisionNumber] + 1\r\n            WHERE [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID] IN \r\n                (SELECT inserted.[PurchaseOrderID] FROM inserted);\r\n        END;\r\n    END TRY\r\n    BEGIN CATCH\r\n        EXECUTE [dbo].[uspPrintError];\r\n\r\n        -- Rollback any active or uncommittable transactions before\r\n        -- inserting information in the ErrorLog\r\n        IF @@TRANCOUNT > 0\r\n        BEGIN\r\n            ROLLBACK TRANSACTION;\r\n        END\r\n\r\n        EXECUTE [dbo].[uspLogError];\r\n    END CATCH;\r\nEND;\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "ALTER TABLE [Purchasing].[PurchaseOrderHeader] ENABLE TRIGGER [uPurchaseOrderHeader]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'COLUMN',N'PurchaseOrderID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'COLUMN',@level2name=N'PurchaseOrderID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'COLUMN',N'RevisionNumber'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Incremental number to track changes to the purchase order over time.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'COLUMN',@level2name=N'RevisionNumber'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'COLUMN',N'Status'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Order current status. 1 = Pending; 2 = Approved; 3 = Rejected; 4 = Complete' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'COLUMN',@level2name=N'Status'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'COLUMN',N'EmployeeID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Employee who created the purchase order. Foreign key to Employee.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'COLUMN',@level2name=N'EmployeeID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'COLUMN',N'VendorID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Vendor with whom the purchase order is placed. Foreign key to Vendor.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'COLUMN',@level2name=N'VendorID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'COLUMN',N'ShipMethodID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Shipping method. Foreign key to ShipMethod.ShipMethodID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'COLUMN',@level2name=N'ShipMethodID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'COLUMN',N'OrderDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Purchase order creation date.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'COLUMN',@level2name=N'OrderDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'COLUMN',N'ShipDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Estimated shipment date from the vendor.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'COLUMN',@level2name=N'ShipDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'COLUMN',N'SubTotal'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Purchase order subtotal. Computed as SUM(PurchaseOrderDetail.LineTotal)for the appropriate PurchaseOrderID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'COLUMN',@level2name=N'SubTotal'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'COLUMN',N'TaxAmt'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Tax amount.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'COLUMN',@level2name=N'TaxAmt'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'COLUMN',N'Freight'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Shipping cost.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'COLUMN',@level2name=N'Freight'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'COLUMN',N'TotalDue'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Total due to vendor. Computed as Subtotal + TaxAmt + Freight.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'COLUMN',@level2name=N'TotalDue'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'INDEX',N'IX_PurchaseOrderHeader_EmployeeID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'INDEX',@level2name=N'IX_PurchaseOrderHeader_EmployeeID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'INDEX',N'IX_PurchaseOrderHeader_VendorID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'INDEX',@level2name=N'IX_PurchaseOrderHeader_VendorID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'General purchase order information. See PurchaseOrderDetail.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'TRIGGER',N'uPurchaseOrderHeader'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'AFTER UPDATE trigger that updates the RevisionNumber and ModifiedDate columns in the PurchaseOrderHeader table.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'TRIGGER',@level2name=N'uPurchaseOrderHeader'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Purchasing].[PurchaseOrderDetail]    Script Date: 9/26/2023 12:10:00 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderDetail]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Purchasing].[PurchaseOrderDetail](\r\n\t[PurchaseOrderID] [int] NOT NULL,\r\n\t[PurchaseOrderDetailID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[DueDate] [datetime] NOT NULL,\r\n\t[OrderQty] [smallint] NOT NULL,\r\n\t[ProductID] [int] NOT NULL,\r\n\t[UnitPrice] [money] NOT NULL,\r\n\t[LineTotal]  AS (isnull([OrderQty]*[UnitPrice],(0.00))),\r\n\t[ReceivedQty] [decimal](8, 2) NOT NULL,\r\n\t[RejectedQty] [decimal](8, 2) NOT NULL,\r\n\t[StockedQty]  AS (isnull([ReceivedQty]-[RejectedQty],(0.00))),\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_PurchaseOrderDetail_PurchaseOrderID_PurchaseOrderDetailID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[PurchaseOrderID] ASC,\r\n\t[PurchaseOrderDetailID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderDetail]') AND name = N'IX_PurchaseOrderDetail_ProductID')\r\nCREATE NONCLUSTERED INDEX [IX_PurchaseOrderDetail_ProductID] ON [Purchasing].[PurchaseOrderDetail]\r\n(\r\n\t[ProductID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Purchasing].[DF_PurchaseOrderDetail_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Purchasing].[PurchaseOrderDetail] ADD  CONSTRAINT [DF_PurchaseOrderDetail_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.triggers WHERE object_id = OBJECT_ID(N'[Purchasing].[iPurchaseOrderDetail]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE TRIGGER [Purchasing].[iPurchaseOrderDetail] ON [Purchasing].[PurchaseOrderDetail] \r\nAFTER INSERT AS\r\nBEGIN\r\n    DECLARE @Count int;\r\n\r\n    SET @Count = @@ROWCOUNT;\r\n    IF @Count = 0 \r\n        RETURN;\r\n\r\n    SET NOCOUNT ON;\r\n\r\n    BEGIN TRY\r\n        INSERT INTO [Production].[TransactionHistory]\r\n            ([ProductID]\r\n            ,[ReferenceOrderID]\r\n            ,[ReferenceOrderLineID]\r\n            ,[TransactionType]\r\n            ,[TransactionDate]\r\n            ,[Quantity]\r\n            ,[ActualCost])\r\n        SELECT \r\n            inserted.[ProductID]\r\n            ,inserted.[PurchaseOrderID]\r\n            ,inserted.[PurchaseOrderDetailID]\r\n            ,''P''\r\n            ,GETDATE()\r\n            ,inserted.[OrderQty]\r\n            ,inserted.[UnitPrice]\r\n        FROM inserted \r\n            INNER JOIN [Purchasing].[PurchaseOrderHeader] \r\n            ON inserted.[PurchaseOrderID] = [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID];\r\n\r\n        -- Update SubTotal in PurchaseOrderHeader record. Note that this causes the \r\n        -- PurchaseOrderHeader trigger to fire which will update the RevisionNumber.\r\n        UPDATE [Purchasing].[PurchaseOrderHeader]\r\n        SET [Purchasing].[PurchaseOrderHeader].[SubTotal] = \r\n            (SELECT SUM([Purchasing].[PurchaseOrderDetail].[LineTotal])\r\n                FROM [Purchasing].[PurchaseOrderDetail]\r\n                WHERE [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID] = [Purchasing].[PurchaseOrderDetail].[PurchaseOrderID])\r\n        WHERE [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID] IN (SELECT inserted.[PurchaseOrderID] FROM inserted);\r\n    END TRY\r\n    BEGIN CATCH\r\n        EXECUTE [dbo].[uspPrintError];\r\n\r\n        -- Rollback any active or uncommittable transactions before\r\n        -- inserting information in the ErrorLog\r\n        IF @@TRANCOUNT > 0\r\n        BEGIN\r\n            ROLLBACK TRANSACTION;\r\n        END\r\n\r\n        EXECUTE [dbo].[uspLogError];\r\n    END CATCH;\r\nEND;\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "ALTER TABLE [Purchasing].[PurchaseOrderDetail] ENABLE TRIGGER [iPurchaseOrderDetail]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.triggers WHERE object_id = OBJECT_ID(N'[Purchasing].[uPurchaseOrderDetail]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE TRIGGER [Purchasing].[uPurchaseOrderDetail] ON [Purchasing].[PurchaseOrderDetail] \r\nAFTER UPDATE AS \r\nBEGIN\r\n    DECLARE @Count int;\r\n\r\n    SET @Count = @@ROWCOUNT;\r\n    IF @Count = 0 \r\n        RETURN;\r\n\r\n    SET NOCOUNT ON;\r\n\r\n    BEGIN TRY\r\n        IF UPDATE([ProductID]) OR UPDATE([OrderQty]) OR UPDATE([UnitPrice])\r\n        -- Insert record into TransactionHistory \r\n        BEGIN\r\n            INSERT INTO [Production].[TransactionHistory]\r\n                ([ProductID]\r\n                ,[ReferenceOrderID]\r\n                ,[ReferenceOrderLineID]\r\n                ,[TransactionType]\r\n                ,[TransactionDate]\r\n                ,[Quantity]\r\n                ,[ActualCost])\r\n            SELECT \r\n                inserted.[ProductID]\r\n                ,inserted.[PurchaseOrderID]\r\n                ,inserted.[PurchaseOrderDetailID]\r\n                ,''P''\r\n                ,GETDATE()\r\n                ,inserted.[OrderQty]\r\n                ,inserted.[UnitPrice]\r\n            FROM inserted \r\n                INNER JOIN [Purchasing].[PurchaseOrderDetail] \r\n                ON inserted.[PurchaseOrderID] = [Purchasing].[PurchaseOrderDetail].[PurchaseOrderID];\r\n\r\n            -- Update SubTotal in PurchaseOrderHeader record. Note that this causes the \r\n            -- PurchaseOrderHeader trigger to fire which will update the RevisionNumber.\r\n            UPDATE [Purchasing].[PurchaseOrderHeader]\r\n            SET [Purchasing].[PurchaseOrderHeader].[SubTotal] = \r\n                (SELECT SUM([Purchasing].[PurchaseOrderDetail].[LineTotal])\r\n                    FROM [Purchasing].[PurchaseOrderDetail]\r\n                    WHERE [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID] \r\n                        = [Purchasing].[PurchaseOrderDetail].[PurchaseOrderID])\r\n            WHERE [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID] \r\n                IN (SELECT inserted.[PurchaseOrderID] FROM inserted);\r\n\r\n            UPDATE [Purchasing].[PurchaseOrderDetail]\r\n            SET [Purchasing].[PurchaseOrderDetail].[ModifiedDate] = GETDATE()\r\n            FROM inserted\r\n            WHERE inserted.[PurchaseOrderID] = [Purchasing].[PurchaseOrderDetail].[PurchaseOrderID]\r\n                AND inserted.[PurchaseOrderDetailID] = [Purchasing].[PurchaseOrderDetail].[PurchaseOrderDetailID];\r\n        END;\r\n    END TRY\r\n    BEGIN CATCH\r\n        EXECUTE [dbo].[uspPrintError];\r\n\r\n        -- Rollback any active or uncommittable transactions before\r\n        -- inserting information in the ErrorLog\r\n        IF @@TRANCOUNT > 0\r\n        BEGIN\r\n            ROLLBACK TRANSACTION;\r\n        END\r\n\r\n        EXECUTE [dbo].[uspLogError];\r\n    END CATCH;\r\nEND;\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "ALTER TABLE [Purchasing].[PurchaseOrderDetail] ENABLE TRIGGER [uPurchaseOrderDetail]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderDetail', N'COLUMN',N'PurchaseOrderID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'COLUMN',@level2name=N'PurchaseOrderID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderDetail', N'COLUMN',N'PurchaseOrderDetailID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. One line number per purchased product.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'COLUMN',@level2name=N'PurchaseOrderDetailID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderDetail', N'COLUMN',N'DueDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date the product is expected to be received.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'COLUMN',@level2name=N'DueDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderDetail', N'COLUMN',N'OrderQty'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Quantity ordered.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'COLUMN',@level2name=N'OrderQty'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderDetail', N'COLUMN',N'ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product identification number. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'COLUMN',@level2name=N'ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderDetail', N'COLUMN',N'UnitPrice'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Vendor''s selling price of a single product.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'COLUMN',@level2name=N'UnitPrice'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderDetail', N'COLUMN',N'LineTotal'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Per product subtotal. Computed as OrderQty * UnitPrice.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'COLUMN',@level2name=N'LineTotal'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderDetail', N'COLUMN',N'ReceivedQty'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Quantity actually received from the vendor.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'COLUMN',@level2name=N'ReceivedQty'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderDetail', N'COLUMN',N'RejectedQty'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Quantity rejected during inspection.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'COLUMN',@level2name=N'RejectedQty'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderDetail', N'COLUMN',N'StockedQty'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Quantity accepted into inventory. Computed as ReceivedQty - RejectedQty.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'COLUMN',@level2name=N'StockedQty'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderDetail', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderDetail', N'INDEX',N'IX_PurchaseOrderDetail_ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'INDEX',@level2name=N'IX_PurchaseOrderDetail_ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderDetail', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Individual products associated with a specific purchase order. See PurchaseOrderHeader.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderDetail', N'TRIGGER',N'iPurchaseOrderDetail'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'AFTER INSERT trigger that inserts a row in the TransactionHistory table and updates the PurchaseOrderHeader.SubTotal column.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'TRIGGER',@level2name=N'iPurchaseOrderDetail'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderDetail', N'TRIGGER',N'uPurchaseOrderDetail'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'AFTER UPDATE trigger that inserts a row in the TransactionHistory table, updates ModifiedDate in PurchaseOrderDetail and updates the PurchaseOrderHeader.SubTotal column.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'TRIGGER',@level2name=N'uPurchaseOrderDetail'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Sales].[CreditCard]    Script Date: 9/26/2023 12:10:00 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[CreditCard]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Sales].[CreditCard](\r\n\t[CreditCardID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[CardType] [nvarchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[CardNumber] [nvarchar](25) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[ExpMonth] [tinyint] NOT NULL,\r\n\t[ExpYear] [smallint] NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_CreditCard_CreditCardID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[CreditCardID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Sales].[CreditCard]') AND name = N'AK_CreditCard_CardNumber')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_CreditCard_CardNumber] ON [Sales].[CreditCard]\r\n(\r\n\t[CardNumber] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_CreditCard_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[CreditCard] ADD  CONSTRAINT [DF_CreditCard_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CreditCard', N'COLUMN',N'CreditCardID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for CreditCard records.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CreditCard', @level2type=N'COLUMN',@level2name=N'CreditCardID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CreditCard', N'COLUMN',N'CardType'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Credit card name.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CreditCard', @level2type=N'COLUMN',@level2name=N'CardType'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CreditCard', N'COLUMN',N'CardNumber'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Credit card number.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CreditCard', @level2type=N'COLUMN',@level2name=N'CardNumber'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CreditCard', N'COLUMN',N'ExpMonth'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Credit card expiration month.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CreditCard', @level2type=N'COLUMN',@level2name=N'ExpMonth'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CreditCard', N'COLUMN',N'ExpYear'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Credit card expiration year.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CreditCard', @level2type=N'COLUMN',@level2name=N'ExpYear'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CreditCard', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CreditCard', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CreditCard', N'INDEX',N'AK_CreditCard_CardNumber'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CreditCard', @level2type=N'INDEX',@level2name=N'AK_CreditCard_CardNumber'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CreditCard', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Customer credit card information.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CreditCard'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Production].[WorkOrderRouting]    Script Date: 9/26/2023 12:10:00 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[WorkOrderRouting]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Production].[WorkOrderRouting](\r\n\t[WorkOrderID] [int] NOT NULL,\r\n\t[ProductID] [int] NOT NULL,\r\n\t[OperationSequence] [smallint] NOT NULL,\r\n\t[LocationID] [smallint] NOT NULL,\r\n\t[ScheduledStartDate] [datetime] NOT NULL,\r\n\t[ScheduledEndDate] [datetime] NOT NULL,\r\n\t[ActualStartDate] [datetime] NULL,\r\n\t[ActualEndDate] [datetime] NULL,\r\n\t[ActualResourceHrs] [decimal](9, 4) NULL,\r\n\t[PlannedCost] [money] NOT NULL,\r\n\t[ActualCost] [money] NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_WorkOrderRouting_WorkOrderID_ProductID_OperationSequence] PRIMARY KEY CLUSTERED \r\n(\r\n\t[WorkOrderID] ASC,\r\n\t[ProductID] ASC,\r\n\t[OperationSequence] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[WorkOrderRouting]') AND name = N'IX_WorkOrderRouting_ProductID')\r\nCREATE NONCLUSTERED INDEX [IX_WorkOrderRouting_ProductID] ON [Production].[WorkOrderRouting]\r\n(\r\n\t[ProductID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Production].[DF_WorkOrderRouting_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Production].[WorkOrderRouting] ADD  CONSTRAINT [DF_WorkOrderRouting_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrderRouting', N'COLUMN',N'WorkOrderID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to WorkOrder.WorkOrderID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'COLUMN',@level2name=N'WorkOrderID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrderRouting', N'COLUMN',N'ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'COLUMN',@level2name=N'ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrderRouting', N'COLUMN',N'OperationSequence'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Indicates the manufacturing process sequence.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'COLUMN',@level2name=N'OperationSequence'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrderRouting', N'COLUMN',N'LocationID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Manufacturing location where the part is processed. Foreign key to Location.LocationID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'COLUMN',@level2name=N'LocationID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrderRouting', N'COLUMN',N'ScheduledStartDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Planned manufacturing start date.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'COLUMN',@level2name=N'ScheduledStartDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrderRouting', N'COLUMN',N'ScheduledEndDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Planned manufacturing end date.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'COLUMN',@level2name=N'ScheduledEndDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrderRouting', N'COLUMN',N'ActualStartDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Actual start date.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'COLUMN',@level2name=N'ActualStartDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrderRouting', N'COLUMN',N'ActualEndDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Actual end date.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'COLUMN',@level2name=N'ActualEndDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrderRouting', N'COLUMN',N'ActualResourceHrs'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Number of manufacturing hours used.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'COLUMN',@level2name=N'ActualResourceHrs'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrderRouting', N'COLUMN',N'PlannedCost'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Estimated manufacturing cost.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'COLUMN',@level2name=N'PlannedCost'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrderRouting', N'COLUMN',N'ActualCost'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Actual manufacturing cost.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'COLUMN',@level2name=N'ActualCost'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrderRouting', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrderRouting', N'INDEX',N'IX_WorkOrderRouting_ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'INDEX',@level2name=N'IX_WorkOrderRouting_ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrderRouting', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Work order details.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Sales].[CurrencyRate]    Script Date: 9/26/2023 12:10:00 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[CurrencyRate]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Sales].[CurrencyRate](\r\n\t[CurrencyRateID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[CurrencyRateDate] [datetime] NOT NULL,\r\n\t[FromCurrencyCode] [nchar](3) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[ToCurrencyCode] [nchar](3) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[AverageRate] [money] NOT NULL,\r\n\t[EndOfDayRate] [money] NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_CurrencyRate_CurrencyRateID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[CurrencyRateID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Sales].[CurrencyRate]') AND name = N'AK_CurrencyRate_CurrencyRateDate_FromCurrencyCode_ToCurrencyCode')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_CurrencyRate_CurrencyRateDate_FromCurrencyCode_ToCurrencyCode] ON [Sales].[CurrencyRate]\r\n(\r\n\t[CurrencyRateDate] ASC,\r\n\t[FromCurrencyCode] ASC,\r\n\t[ToCurrencyCode] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_CurrencyRate_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[CurrencyRate] ADD  CONSTRAINT [DF_CurrencyRate_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CurrencyRate', N'COLUMN',N'CurrencyRateID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for CurrencyRate records.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CurrencyRate', @level2type=N'COLUMN',@level2name=N'CurrencyRateID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CurrencyRate', N'COLUMN',N'CurrencyRateDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the exchange rate was obtained.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CurrencyRate', @level2type=N'COLUMN',@level2name=N'CurrencyRateDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CurrencyRate', N'COLUMN',N'FromCurrencyCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Exchange rate was converted from this currency code.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CurrencyRate', @level2type=N'COLUMN',@level2name=N'FromCurrencyCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CurrencyRate', N'COLUMN',N'ToCurrencyCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Exchange rate was converted to this currency code.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CurrencyRate', @level2type=N'COLUMN',@level2name=N'ToCurrencyCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CurrencyRate', N'COLUMN',N'AverageRate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Average exchange rate for the day.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CurrencyRate', @level2type=N'COLUMN',@level2name=N'AverageRate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CurrencyRate', N'COLUMN',N'EndOfDayRate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Final exchange rate for the day.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CurrencyRate', @level2type=N'COLUMN',@level2name=N'EndOfDayRate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CurrencyRate', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CurrencyRate', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CurrencyRate', N'INDEX',N'AK_CurrencyRate_CurrencyRateDate_FromCurrencyCode_ToCurrencyCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CurrencyRate', @level2type=N'INDEX',@level2name=N'AK_CurrencyRate_CurrencyRateDate_FromCurrencyCode_ToCurrencyCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CurrencyRate', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Currency exchange rates.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CurrencyRate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  UserDefinedFunction [dbo].[ufnLeadingZeros]    Script Date: 9/26/2023 12:10:00 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ufnLeadingZeros]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))\r\nBEGIN\r\nexecute dbo.sp_executesql @statement = N'\r\nCREATE FUNCTION [dbo].[ufnLeadingZeros](\r\n    @Value int\r\n) \r\nRETURNS varchar(8) \r\nWITH SCHEMABINDING \r\nAS \r\nBEGIN\r\n    DECLARE @ReturnValue varchar(8);\r\n\r\n    SET @ReturnValue = CONVERT(varchar(8), @Value);\r\n    SET @ReturnValue = REPLICATE(''0'', 8 - DATALENGTH(@ReturnValue)) + @ReturnValue;\r\n\r\n    RETURN (@ReturnValue);\r\nEND;\r\n' \r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'FUNCTION',N'ufnLeadingZeros', N'PARAMETER',N'@Value'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the scalar function ufnLeadingZeros. Enter a valid integer.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'FUNCTION',@level1name=N'ufnLeadingZeros', @level2type=N'PARAMETER',@level2name=N'@Value'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'FUNCTION',N'ufnLeadingZeros', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Scalar function used by the Sales.Customer table to help set the account number.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'FUNCTION',@level1name=N'ufnLeadingZeros'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Sales].[Customer]    Script Date: 9/26/2023 12:10:00 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[Customer]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Sales].[Customer](\r\n\t[CustomerID] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,\r\n\t[PersonID] [int] NULL,\r\n\t[StoreID] [int] NULL,\r\n\t[TerritoryID] [int] NULL,\r\n\t[AccountNumber]  AS (isnull('AW'+[dbo].[ufnLeadingZeros]([CustomerID]),'')),\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_Customer_CustomerID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[CustomerID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ARITHABORT ON\r\nSET CONCAT_NULL_YIELDS_NULL ON\r\nSET QUOTED_IDENTIFIER ON\r\nSET ANSI_NULLS ON\r\nSET ANSI_PADDING ON\r\nSET ANSI_WARNINGS ON\r\nSET NUMERIC_ROUNDABORT OFF",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Sales].[Customer]') AND name = N'AK_Customer_AccountNumber')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Customer_AccountNumber] ON [Sales].[Customer]\r\n(\r\n\t[AccountNumber] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": false,
          "ResultMessage": "Index cannot be created on computed column 'AccountNumber' of table 'Customer' because the underlying object 'ufnLeadingZeros' has a different owner."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Sales].[Customer]') AND name = N'AK_Customer_rowguid')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Customer_rowguid] ON [Sales].[Customer]\r\n(\r\n\t[rowguid] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Sales].[Customer]') AND name = N'IX_Customer_TerritoryID')\r\nCREATE NONCLUSTERED INDEX [IX_Customer_TerritoryID] ON [Sales].[Customer]\r\n(\r\n\t[TerritoryID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_Customer_rowguid]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[Customer] ADD  CONSTRAINT [DF_Customer_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_Customer_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[Customer] ADD  CONSTRAINT [DF_Customer_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Customer', N'COLUMN',N'CustomerID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'COLUMN',@level2name=N'CustomerID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Customer', N'COLUMN',N'PersonID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key to Person.BusinessEntityID' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'COLUMN',@level2name=N'PersonID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Customer', N'COLUMN',N'StoreID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key to Store.BusinessEntityID' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'COLUMN',@level2name=N'StoreID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Customer', N'COLUMN',N'TerritoryID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ID of the territory in which the customer is located. Foreign key to SalesTerritory.SalesTerritoryID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'COLUMN',@level2name=N'TerritoryID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Customer', N'COLUMN',N'AccountNumber'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique number identifying the customer assigned by the accounting system.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'COLUMN',@level2name=N'AccountNumber'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Customer', N'COLUMN',N'rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'COLUMN',@level2name=N'rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Customer', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Customer', N'INDEX',N'AK_Customer_AccountNumber'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'INDEX',@level2name=N'AK_Customer_AccountNumber'",
          "ExecutionSucceeded": false,
          "ResultMessage": "An invalid parameter or option was specified for procedure 'sp_addextendedproperty'."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Customer', N'INDEX',N'AK_Customer_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'INDEX',@level2name=N'AK_Customer_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Customer', N'INDEX',N'IX_Customer_TerritoryID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'INDEX',@level2name=N'IX_Customer_TerritoryID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Customer', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Current customer information. Also see the Person and Store tables.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [HumanResources].[Department]    Script Date: 9/26/2023 12:10:00 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[HumanResources].[Department]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [HumanResources].[Department](\r\n\t[DepartmentID] [smallint] IDENTITY(1,1) NOT NULL,\r\n\t[Name] [dbo].[Name] NOT NULL,\r\n\t[GroupName] [dbo].[Name] NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_Department_DepartmentID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[DepartmentID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[HumanResources].[Department]') AND name = N'AK_Department_Name')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_Department_Name] ON [HumanResources].[Department]\r\n(\r\n\t[Name] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[HumanResources].[DF_Department_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [HumanResources].[Department] ADD  CONSTRAINT [DF_Department_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Department', N'COLUMN',N'DepartmentID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for Department records.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Department', @level2type=N'COLUMN',@level2name=N'DepartmentID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Department', N'COLUMN',N'Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Name of the department.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Department', @level2type=N'COLUMN',@level2name=N'Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Department', N'COLUMN',N'GroupName'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Name of the group to which the department belongs.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Department', @level2type=N'COLUMN',@level2name=N'GroupName'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Department', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Department', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Department', N'INDEX',N'AK_Department_Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Department', @level2type=N'INDEX',@level2name=N'AK_Department_Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Department', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Lookup table containing the departments within the Adventure Works Cycles company.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Department'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  UserDefinedDataType [dbo].[OrderNumber]    Script Date: 9/26/2023 12:10:00 PM ******/\r\nIF NOT EXISTS (SELECT * FROM sys.types st JOIN sys.schemas ss ON st.schema_id = ss.schema_id WHERE st.name = N'OrderNumber' AND ss.name = N'dbo')\r\nCREATE TYPE [dbo].[OrderNumber] FROM [nvarchar](25) NULL",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  UserDefinedFunction [dbo].[ufnGetAccountingEndDate]    Script Date: 9/26/2023 12:10:00 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ufnGetAccountingEndDate]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))\r\nBEGIN\r\nexecute dbo.sp_executesql @statement = N'\r\nCREATE FUNCTION [dbo].[ufnGetAccountingEndDate]()\r\nRETURNS [datetime] \r\nAS \r\nBEGIN\r\n    RETURN DATEADD(millisecond, -2, CONVERT(datetime, ''20040701'', 112));\r\nEND;\r\n' \r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'FUNCTION',N'ufnGetAccountingEndDate', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Scalar function used in the uSalesOrderHeader trigger to set the starting account date.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'FUNCTION',@level1name=N'ufnGetAccountingEndDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  UserDefinedFunction [dbo].[ufnGetAccountingStartDate]    Script Date: 9/26/2023 12:10:00 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ufnGetAccountingStartDate]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))\r\nBEGIN\r\nexecute dbo.sp_executesql @statement = N'\r\nCREATE FUNCTION [dbo].[ufnGetAccountingStartDate]()\r\nRETURNS [datetime] \r\nAS \r\nBEGIN\r\n    RETURN CONVERT(datetime, ''20030701'', 112);\r\nEND;\r\n' \r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'FUNCTION',N'ufnGetAccountingStartDate', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Scalar function used in the uSalesOrderHeader trigger to set the ending account date.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'FUNCTION',@level1name=N'ufnGetAccountingStartDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Sales].[SalesOrderHeader]    Script Date: 9/26/2023 12:10:00 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Sales].[SalesOrderHeader](\r\n\t[SalesOrderID] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,\r\n\t[RevisionNumber] [tinyint] NOT NULL,\r\n\t[OrderDate] [datetime] NOT NULL,\r\n\t[DueDate] [datetime] NOT NULL,\r\n\t[ShipDate] [datetime] NULL,\r\n\t[Status] [tinyint] NOT NULL,\r\n\t[OnlineOrderFlag] [dbo].[Flag] NOT NULL,\r\n\t[SalesOrderNumber]  AS (isnull(N'SO'+CONVERT([nvarchar](23),[SalesOrderID]),N'*** ERROR ***')),\r\n\t[PurchaseOrderNumber] [dbo].[OrderNumber] NULL,\r\n\t[AccountNumber] [dbo].[AccountNumber] NULL,\r\n\t[CustomerID] [int] NOT NULL,\r\n\t[SalesPersonID] [int] NULL,\r\n\t[TerritoryID] [int] NULL,\r\n\t[BillToAddressID] [int] NOT NULL,\r\n\t[ShipToAddressID] [int] NOT NULL,\r\n\t[ShipMethodID] [int] NOT NULL,\r\n\t[CreditCardID] [int] NULL,\r\n\t[CreditCardApprovalCode] [varchar](15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n\t[CurrencyRateID] [int] NULL,\r\n\t[SubTotal] [money] NOT NULL,\r\n\t[TaxAmt] [money] NOT NULL,\r\n\t[Freight] [money] NOT NULL,\r\n\t[TotalDue]  AS (isnull(([SubTotal]+[TaxAmt])+[Freight],(0))),\r\n\t[Comment] [nvarchar](128) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_SalesOrderHeader_SalesOrderID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[SalesOrderID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]') AND name = N'AK_SalesOrderHeader_rowguid')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_SalesOrderHeader_rowguid] ON [Sales].[SalesOrderHeader]\r\n(\r\n\t[rowguid] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ARITHABORT ON\r\nSET CONCAT_NULL_YIELDS_NULL ON\r\nSET QUOTED_IDENTIFIER ON\r\nSET ANSI_NULLS ON\r\nSET ANSI_PADDING ON\r\nSET ANSI_WARNINGS ON\r\nSET NUMERIC_ROUNDABORT OFF",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]') AND name = N'AK_SalesOrderHeader_SalesOrderNumber')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_SalesOrderHeader_SalesOrderNumber] ON [Sales].[SalesOrderHeader]\r\n(\r\n\t[SalesOrderNumber] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]') AND name = N'IX_SalesOrderHeader_CustomerID')\r\nCREATE NONCLUSTERED INDEX [IX_SalesOrderHeader_CustomerID] ON [Sales].[SalesOrderHeader]\r\n(\r\n\t[CustomerID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]') AND name = N'IX_SalesOrderHeader_SalesPersonID')\r\nCREATE NONCLUSTERED INDEX [IX_SalesOrderHeader_SalesPersonID] ON [Sales].[SalesOrderHeader]\r\n(\r\n\t[SalesPersonID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesOrderHeader_RevisionNumber]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesOrderHeader] ADD  CONSTRAINT [DF_SalesOrderHeader_RevisionNumber]  DEFAULT ((0)) FOR [RevisionNumber]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesOrderHeader_OrderDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesOrderHeader] ADD  CONSTRAINT [DF_SalesOrderHeader_OrderDate]  DEFAULT (getdate()) FOR [OrderDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesOrderHeader_Status]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesOrderHeader] ADD  CONSTRAINT [DF_SalesOrderHeader_Status]  DEFAULT ((1)) FOR [Status]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesOrderHeader_OnlineOrderFlag]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesOrderHeader] ADD  CONSTRAINT [DF_SalesOrderHeader_OnlineOrderFlag]  DEFAULT ((1)) FOR [OnlineOrderFlag]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesOrderHeader_SubTotal]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesOrderHeader] ADD  CONSTRAINT [DF_SalesOrderHeader_SubTotal]  DEFAULT ((0.00)) FOR [SubTotal]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesOrderHeader_TaxAmt]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesOrderHeader] ADD  CONSTRAINT [DF_SalesOrderHeader_TaxAmt]  DEFAULT ((0.00)) FOR [TaxAmt]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesOrderHeader_Freight]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesOrderHeader] ADD  CONSTRAINT [DF_SalesOrderHeader_Freight]  DEFAULT ((0.00)) FOR [Freight]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesOrderHeader_rowguid]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesOrderHeader] ADD  CONSTRAINT [DF_SalesOrderHeader_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesOrderHeader_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesOrderHeader] ADD  CONSTRAINT [DF_SalesOrderHeader_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.triggers WHERE object_id = OBJECT_ID(N'[Sales].[uSalesOrderHeader]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE TRIGGER [Sales].[uSalesOrderHeader] ON [Sales].[SalesOrderHeader] \r\nAFTER UPDATE NOT FOR REPLICATION AS \r\nBEGIN\r\n    DECLARE @Count int;\r\n\r\n    SET @Count = @@ROWCOUNT;\r\n    IF @Count = 0 \r\n        RETURN;\r\n\r\n    SET NOCOUNT ON;\r\n\r\n    BEGIN TRY\r\n        -- Update RevisionNumber for modification of any field EXCEPT the Status.\r\n        IF NOT UPDATE([Status])\r\n        BEGIN\r\n            UPDATE [Sales].[SalesOrderHeader]\r\n            SET [Sales].[SalesOrderHeader].[RevisionNumber] = \r\n                [Sales].[SalesOrderHeader].[RevisionNumber] + 1\r\n            WHERE [Sales].[SalesOrderHeader].[SalesOrderID] IN \r\n                (SELECT inserted.[SalesOrderID] FROM inserted);\r\n        END;\r\n\r\n        -- Update the SalesPerson SalesYTD when SubTotal is updated\r\n        IF UPDATE([SubTotal])\r\n        BEGIN\r\n            DECLARE @StartDate datetime,\r\n                    @EndDate datetime\r\n\r\n            SET @StartDate = [dbo].[ufnGetAccountingStartDate]();\r\n            SET @EndDate = [dbo].[ufnGetAccountingEndDate]();\r\n\r\n            UPDATE [Sales].[SalesPerson]\r\n            SET [Sales].[SalesPerson].[SalesYTD] = \r\n                (SELECT SUM([Sales].[SalesOrderHeader].[SubTotal])\r\n                FROM [Sales].[SalesOrderHeader] \r\n                WHERE [Sales].[SalesPerson].[BusinessEntityID] = [Sales].[SalesOrderHeader].[SalesPersonID]\r\n                    AND ([Sales].[SalesOrderHeader].[Status] = 5) -- Shipped\r\n                    AND [Sales].[SalesOrderHeader].[OrderDate] BETWEEN @StartDate AND @EndDate)\r\n            WHERE [Sales].[SalesPerson].[BusinessEntityID] \r\n                IN (SELECT DISTINCT inserted.[SalesPersonID] FROM inserted \r\n                    WHERE inserted.[OrderDate] BETWEEN @StartDate AND @EndDate);\r\n\r\n            -- Update the SalesTerritory SalesYTD when SubTotal is updated\r\n            UPDATE [Sales].[SalesTerritory]\r\n            SET [Sales].[SalesTerritory].[SalesYTD] = \r\n                (SELECT SUM([Sales].[SalesOrderHeader].[SubTotal])\r\n                FROM [Sales].[SalesOrderHeader] \r\n                WHERE [Sales].[SalesTerritory].[TerritoryID] = [Sales].[SalesOrderHeader].[TerritoryID]\r\n                    AND ([Sales].[SalesOrderHeader].[Status] = 5) -- Shipped\r\n                    AND [Sales].[SalesOrderHeader].[OrderDate] BETWEEN @StartDate AND @EndDate)\r\n            WHERE [Sales].[SalesTerritory].[TerritoryID] \r\n                IN (SELECT DISTINCT inserted.[TerritoryID] FROM inserted \r\n                    WHERE inserted.[OrderDate] BETWEEN @StartDate AND @EndDate);\r\n        END;\r\n    END TRY\r\n    BEGIN CATCH\r\n        EXECUTE [dbo].[uspPrintError];\r\n\r\n        -- Rollback any active or uncommittable transactions before\r\n        -- inserting information in the ErrorLog\r\n        IF @@TRANCOUNT > 0\r\n        BEGIN\r\n            ROLLBACK TRANSACTION;\r\n        END\r\n\r\n        EXECUTE [dbo].[uspLogError];\r\n    END CATCH;\r\nEND;\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "ALTER TABLE [Sales].[SalesOrderHeader] ENABLE TRIGGER [uSalesOrderHeader]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'COLUMN',N'SalesOrderID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'SalesOrderID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'COLUMN',N'RevisionNumber'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Incremental number to track changes to the sales order over time.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'RevisionNumber'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'COLUMN',N'OrderDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Dates the sales order was created.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'OrderDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'COLUMN',N'DueDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date the order is due to the customer.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'DueDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'COLUMN',N'ShipDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date the order was shipped to the customer.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'ShipDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'COLUMN',N'Status'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Order current status. 1 = In process; 2 = Approved; 3 = Backordered; 4 = Rejected; 5 = Shipped; 6 = Cancelled' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'Status'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'COLUMN',N'OnlineOrderFlag'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'0 = Order placed by sales person. 1 = Order placed online by customer.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'OnlineOrderFlag'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'COLUMN',N'SalesOrderNumber'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique sales order identification number.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'SalesOrderNumber'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'COLUMN',N'PurchaseOrderNumber'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Customer purchase order number reference. ' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'PurchaseOrderNumber'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'COLUMN',N'AccountNumber'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Financial accounting number reference.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'AccountNumber'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'COLUMN',N'CustomerID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Customer identification number. Foreign key to Customer.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'CustomerID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'COLUMN',N'SalesPersonID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales person who created the sales order. Foreign key to SalesPerson.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'SalesPersonID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'COLUMN',N'TerritoryID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Territory in which the sale was made. Foreign key to SalesTerritory.SalesTerritoryID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'TerritoryID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'COLUMN',N'BillToAddressID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Customer billing address. Foreign key to Address.AddressID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'BillToAddressID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'COLUMN',N'ShipToAddressID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Customer shipping address. Foreign key to Address.AddressID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'ShipToAddressID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'COLUMN',N'ShipMethodID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Shipping method. Foreign key to ShipMethod.ShipMethodID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'ShipMethodID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'COLUMN',N'CreditCardID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Credit card identification number. Foreign key to CreditCard.CreditCardID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'CreditCardID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'COLUMN',N'CreditCardApprovalCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Approval code provided by the credit card company.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'CreditCardApprovalCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'COLUMN',N'CurrencyRateID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Currency exchange rate used. Foreign key to CurrencyRate.CurrencyRateID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'CurrencyRateID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'COLUMN',N'SubTotal'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales subtotal. Computed as SUM(SalesOrderDetail.LineTotal)for the appropriate SalesOrderID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'SubTotal'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'COLUMN',N'TaxAmt'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Tax amount.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'TaxAmt'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'COLUMN',N'Freight'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Shipping cost.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'Freight'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'COLUMN',N'TotalDue'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Total due from customer. Computed as Subtotal + TaxAmt + Freight.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'TotalDue'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'COLUMN',N'Comment'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales representative comments.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'Comment'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'COLUMN',N'rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'INDEX',N'AK_SalesOrderHeader_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'INDEX',@level2name=N'AK_SalesOrderHeader_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'INDEX',N'AK_SalesOrderHeader_SalesOrderNumber'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'INDEX',@level2name=N'AK_SalesOrderHeader_SalesOrderNumber'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'INDEX',N'IX_SalesOrderHeader_CustomerID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'INDEX',@level2name=N'IX_SalesOrderHeader_CustomerID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'INDEX',N'IX_SalesOrderHeader_SalesPersonID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'INDEX',@level2name=N'IX_SalesOrderHeader_SalesPersonID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'General sales order information.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'TRIGGER',N'uSalesOrderHeader'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'AFTER UPDATE trigger that updates the RevisionNumber and ModifiedDate columns in the SalesOrderHeader table.Updates the SalesYTD column in the SalesPerson and SalesTerritory tables.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'TRIGGER',@level2name=N'uSalesOrderHeader'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Sales].[SalesOrderDetail]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[SalesOrderDetail]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Sales].[SalesOrderDetail](\r\n\t[SalesOrderID] [int] NOT NULL,\r\n\t[SalesOrderDetailID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[CarrierTrackingNumber] [nvarchar](25) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n\t[OrderQty] [smallint] NOT NULL,\r\n\t[ProductID] [int] NOT NULL,\r\n\t[SpecialOfferID] [int] NOT NULL,\r\n\t[UnitPrice] [money] NOT NULL,\r\n\t[UnitPriceDiscount] [money] NOT NULL,\r\n\t[LineTotal]  AS (isnull(([UnitPrice]*((1.0)-[UnitPriceDiscount]))*[OrderQty],(0.0))),\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_SalesOrderDetail_SalesOrderID_SalesOrderDetailID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[SalesOrderID] ASC,\r\n\t[SalesOrderDetailID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Sales].[SalesOrderDetail]') AND name = N'AK_SalesOrderDetail_rowguid')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_SalesOrderDetail_rowguid] ON [Sales].[SalesOrderDetail]\r\n(\r\n\t[rowguid] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Sales].[SalesOrderDetail]') AND name = N'IX_SalesOrderDetail_ProductID')\r\nCREATE NONCLUSTERED INDEX [IX_SalesOrderDetail_ProductID] ON [Sales].[SalesOrderDetail]\r\n(\r\n\t[ProductID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesOrderDetail_UnitPriceDiscount]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesOrderDetail] ADD  CONSTRAINT [DF_SalesOrderDetail_UnitPriceDiscount]  DEFAULT ((0.0)) FOR [UnitPriceDiscount]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesOrderDetail_rowguid]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesOrderDetail] ADD  CONSTRAINT [DF_SalesOrderDetail_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesOrderDetail_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesOrderDetail] ADD  CONSTRAINT [DF_SalesOrderDetail_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.triggers WHERE object_id = OBJECT_ID(N'[Sales].[iduSalesOrderDetail]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE TRIGGER [Sales].[iduSalesOrderDetail] ON [Sales].[SalesOrderDetail] \r\nAFTER INSERT, DELETE, UPDATE AS \r\nBEGIN\r\n    DECLARE @Count int;\r\n\r\n    SET @Count = @@ROWCOUNT;\r\n    IF @Count = 0 \r\n        RETURN;\r\n\r\n    SET NOCOUNT ON;\r\n\r\n    BEGIN TRY\r\n        -- If inserting or updating these columns\r\n        IF UPDATE([ProductID]) OR UPDATE([OrderQty]) OR UPDATE([UnitPrice]) OR UPDATE([UnitPriceDiscount]) \r\n        -- Insert record into TransactionHistory\r\n        BEGIN\r\n            INSERT INTO [Production].[TransactionHistory]\r\n                ([ProductID]\r\n                ,[ReferenceOrderID]\r\n                ,[ReferenceOrderLineID]\r\n                ,[TransactionType]\r\n                ,[TransactionDate]\r\n                ,[Quantity]\r\n                ,[ActualCost])\r\n            SELECT \r\n                inserted.[ProductID]\r\n                ,inserted.[SalesOrderID]\r\n                ,inserted.[SalesOrderDetailID]\r\n                ,''S''\r\n                ,GETDATE()\r\n                ,inserted.[OrderQty]\r\n                ,inserted.[UnitPrice]\r\n            FROM inserted \r\n                INNER JOIN [Sales].[SalesOrderHeader] \r\n                ON inserted.[SalesOrderID] = [Sales].[SalesOrderHeader].[SalesOrderID];\r\n\r\n            UPDATE [Person].[Person] \r\n            SET [Demographics].modify(''declare default element namespace \r\n                \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \r\n                replace value of (/IndividualSurvey/TotalPurchaseYTD)[1] \r\n                with data(/IndividualSurvey/TotalPurchaseYTD)[1] + sql:column (\"inserted.LineTotal\")'') \r\n            FROM inserted \r\n                INNER JOIN [Sales].[SalesOrderHeader] AS SOH\r\n                ON inserted.[SalesOrderID] = SOH.[SalesOrderID] \r\n                INNER JOIN [Sales].[Customer] AS C\r\n                ON SOH.[CustomerID] = C.[CustomerID]\r\n            WHERE C.[PersonID] = [Person].[Person].[BusinessEntityID];\r\n        END;\r\n\r\n        -- Update SubTotal in SalesOrderHeader record. Note that this causes the \r\n        -- SalesOrderHeader trigger to fire which will update the RevisionNumber.\r\n        UPDATE [Sales].[SalesOrderHeader]\r\n        SET [Sales].[SalesOrderHeader].[SubTotal] = \r\n            (SELECT SUM([Sales].[SalesOrderDetail].[LineTotal])\r\n                FROM [Sales].[SalesOrderDetail]\r\n                WHERE [Sales].[SalesOrderHeader].[SalesOrderID] = [Sales].[SalesOrderDetail].[SalesOrderID])\r\n        WHERE [Sales].[SalesOrderHeader].[SalesOrderID] IN (SELECT inserted.[SalesOrderID] FROM inserted);\r\n\r\n        UPDATE [Person].[Person] \r\n        SET [Demographics].modify(''declare default element namespace \r\n            \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \r\n            replace value of (/IndividualSurvey/TotalPurchaseYTD)[1] \r\n            with data(/IndividualSurvey/TotalPurchaseYTD)[1] - sql:column(\"deleted.LineTotal\")'') \r\n        FROM deleted \r\n            INNER JOIN [Sales].[SalesOrderHeader] \r\n            ON deleted.[SalesOrderID] = [Sales].[SalesOrderHeader].[SalesOrderID] \r\n            INNER JOIN [Sales].[Customer]\r\n            ON [Sales].[Customer].[CustomerID] = [Sales].[SalesOrderHeader].[CustomerID]\r\n        WHERE [Sales].[Customer].[PersonID] = [Person].[Person].[BusinessEntityID];\r\n    END TRY\r\n    BEGIN CATCH\r\n        EXECUTE [dbo].[uspPrintError];\r\n\r\n        -- Rollback any active or uncommittable transactions before\r\n        -- inserting information in the ErrorLog\r\n        IF @@TRANCOUNT > 0\r\n        BEGIN\r\n            ROLLBACK TRANSACTION;\r\n        END\r\n\r\n        EXECUTE [dbo].[uspLogError];\r\n    END CATCH;\r\nEND;\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "ALTER TABLE [Sales].[SalesOrderDetail] ENABLE TRIGGER [iduSalesOrderDetail]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderDetail', N'COLUMN',N'SalesOrderID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to SalesOrderHeader.SalesOrderID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'COLUMN',@level2name=N'SalesOrderID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderDetail', N'COLUMN',N'SalesOrderDetailID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. One incremental unique number per product sold.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'COLUMN',@level2name=N'SalesOrderDetailID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderDetail', N'COLUMN',N'CarrierTrackingNumber'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Shipment tracking number supplied by the shipper.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'COLUMN',@level2name=N'CarrierTrackingNumber'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderDetail', N'COLUMN',N'OrderQty'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Quantity ordered per product.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'COLUMN',@level2name=N'OrderQty'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderDetail', N'COLUMN',N'ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product sold to customer. Foreign key to Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'COLUMN',@level2name=N'ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderDetail', N'COLUMN',N'SpecialOfferID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Promotional code. Foreign key to SpecialOffer.SpecialOfferID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'COLUMN',@level2name=N'SpecialOfferID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderDetail', N'COLUMN',N'UnitPrice'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Selling price of a single product.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'COLUMN',@level2name=N'UnitPrice'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderDetail', N'COLUMN',N'UnitPriceDiscount'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Discount amount.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'COLUMN',@level2name=N'UnitPriceDiscount'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderDetail', N'COLUMN',N'LineTotal'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Per product subtotal. Computed as UnitPrice * (1 - UnitPriceDiscount) * OrderQty.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'COLUMN',@level2name=N'LineTotal'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderDetail', N'COLUMN',N'rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'COLUMN',@level2name=N'rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderDetail', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderDetail', N'INDEX',N'AK_SalesOrderDetail_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'INDEX',@level2name=N'AK_SalesOrderDetail_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderDetail', N'INDEX',N'IX_SalesOrderDetail_ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'INDEX',@level2name=N'IX_SalesOrderDetail_ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderDetail', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Individual products associated with a specific sales order. See SalesOrderHeader.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderDetail', N'TRIGGER',N'iduSalesOrderDetail'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'AFTER INSERT, DELETE, UPDATE trigger that inserts a row in the TransactionHistory table, updates ModifiedDate in SalesOrderDetail and updates the SalesOrderHeader.SubTotal column.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'TRIGGER',@level2name=N'iduSalesOrderDetail'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Person].[EmailAddress]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[EmailAddress]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Person].[EmailAddress](\r\n\t[BusinessEntityID] [int] NOT NULL,\r\n\t[EmailAddressID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[EmailAddress] [nvarchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_EmailAddress_BusinessEntityID_EmailAddressID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[BusinessEntityID] ASC,\r\n\t[EmailAddressID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Person].[EmailAddress]') AND name = N'IX_EmailAddress_EmailAddress')\r\nCREATE NONCLUSTERED INDEX [IX_EmailAddress_EmailAddress] ON [Person].[EmailAddress]\r\n(\r\n\t[EmailAddress] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[DF_EmailAddress_rowguid]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Person].[EmailAddress] ADD  CONSTRAINT [DF_EmailAddress_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[DF_EmailAddress_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Person].[EmailAddress] ADD  CONSTRAINT [DF_EmailAddress_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'EmailAddress', N'COLUMN',N'BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Person associated with this email address.  Foreign key to Person.BusinessEntityID' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'EmailAddress', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'EmailAddress', N'COLUMN',N'EmailAddressID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. ID of this email address.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'EmailAddress', @level2type=N'COLUMN',@level2name=N'EmailAddressID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'EmailAddress', N'COLUMN',N'EmailAddress'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'E-mail address for the person.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'EmailAddress', @level2type=N'COLUMN',@level2name=N'EmailAddress'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'EmailAddress', N'COLUMN',N'rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'EmailAddress', @level2type=N'COLUMN',@level2name=N'rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'EmailAddress', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'EmailAddress', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'EmailAddress', N'INDEX',N'IX_EmailAddress_EmailAddress'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'EmailAddress', @level2type=N'INDEX',@level2name=N'IX_EmailAddress_EmailAddress'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'EmailAddress', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Where to send a person email.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'EmailAddress'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [HumanResources].[EmployeeDepartmentHistory]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[HumanResources].[EmployeeDepartmentHistory]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [HumanResources].[EmployeeDepartmentHistory](\r\n\t[BusinessEntityID] [int] NOT NULL,\r\n\t[DepartmentID] [smallint] NOT NULL,\r\n\t[ShiftID] [tinyint] NOT NULL,\r\n\t[StartDate] [date] NOT NULL,\r\n\t[EndDate] [date] NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_EmployeeDepartmentHistory_BusinessEntityID_StartDate_DepartmentID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[BusinessEntityID] ASC,\r\n\t[StartDate] ASC,\r\n\t[DepartmentID] ASC,\r\n\t[ShiftID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[HumanResources].[EmployeeDepartmentHistory]') AND name = N'IX_EmployeeDepartmentHistory_DepartmentID')\r\nCREATE NONCLUSTERED INDEX [IX_EmployeeDepartmentHistory_DepartmentID] ON [HumanResources].[EmployeeDepartmentHistory]\r\n(\r\n\t[DepartmentID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[HumanResources].[EmployeeDepartmentHistory]') AND name = N'IX_EmployeeDepartmentHistory_ShiftID')\r\nCREATE NONCLUSTERED INDEX [IX_EmployeeDepartmentHistory_ShiftID] ON [HumanResources].[EmployeeDepartmentHistory]\r\n(\r\n\t[ShiftID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[HumanResources].[DF_EmployeeDepartmentHistory_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [HumanResources].[EmployeeDepartmentHistory] ADD  CONSTRAINT [DF_EmployeeDepartmentHistory_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'EmployeeDepartmentHistory', N'COLUMN',N'BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Employee identification number. Foreign key to Employee.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'EmployeeDepartmentHistory', N'COLUMN',N'DepartmentID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Department in which the employee worked including currently. Foreign key to Department.DepartmentID.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory', @level2type=N'COLUMN',@level2name=N'DepartmentID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'EmployeeDepartmentHistory', N'COLUMN',N'ShiftID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory', @level2type=N'COLUMN',@level2name=N'ShiftID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'EmployeeDepartmentHistory', N'COLUMN',N'StartDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date the employee started work in the department.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory', @level2type=N'COLUMN',@level2name=N'StartDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'EmployeeDepartmentHistory', N'COLUMN',N'EndDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date the employee left the department. NULL = Current department.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory', @level2type=N'COLUMN',@level2name=N'EndDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'EmployeeDepartmentHistory', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'EmployeeDepartmentHistory', N'INDEX',N'IX_EmployeeDepartmentHistory_DepartmentID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory', @level2type=N'INDEX',@level2name=N'IX_EmployeeDepartmentHistory_DepartmentID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'EmployeeDepartmentHistory', N'INDEX',N'IX_EmployeeDepartmentHistory_ShiftID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory', @level2type=N'INDEX',@level2name=N'IX_EmployeeDepartmentHistory_ShiftID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'EmployeeDepartmentHistory', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Employee department transfers.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Sales].[SalesReason]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[SalesReason]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Sales].[SalesReason](\r\n\t[SalesReasonID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[Name] [dbo].[Name] NOT NULL,\r\n\t[ReasonType] [dbo].[Name] NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_SalesReason_SalesReasonID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[SalesReasonID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesReason_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesReason] ADD  CONSTRAINT [DF_SalesReason_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesReason', N'COLUMN',N'SalesReasonID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for SalesReason records.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesReason', @level2type=N'COLUMN',@level2name=N'SalesReasonID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesReason', N'COLUMN',N'Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales reason description.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesReason', @level2type=N'COLUMN',@level2name=N'Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesReason', N'COLUMN',N'ReasonType'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Category the sales reason belongs to.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesReason', @level2type=N'COLUMN',@level2name=N'ReasonType'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesReason', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesReason', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesReason', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Lookup table of customer purchase reasons.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesReason'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Sales].[SalesOrderHeaderSalesReason]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[SalesOrderHeaderSalesReason]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Sales].[SalesOrderHeaderSalesReason](\r\n\t[SalesOrderID] [int] NOT NULL,\r\n\t[SalesReasonID] [int] NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_SalesOrderHeaderSalesReason_SalesOrderID_SalesReasonID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[SalesOrderID] ASC,\r\n\t[SalesReasonID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesOrderHeaderSalesReason_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesOrderHeaderSalesReason] ADD  CONSTRAINT [DF_SalesOrderHeaderSalesReason_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeaderSalesReason', N'COLUMN',N'SalesOrderID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to SalesOrderHeader.SalesOrderID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeaderSalesReason', @level2type=N'COLUMN',@level2name=N'SalesOrderID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeaderSalesReason', N'COLUMN',N'SalesReasonID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Foreign key to SalesReason.SalesReasonID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeaderSalesReason', @level2type=N'COLUMN',@level2name=N'SalesReasonID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeaderSalesReason', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeaderSalesReason', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeaderSalesReason', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Cross-reference table mapping sales orders to sales reason codes.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeaderSalesReason'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Person].[Password]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[Password]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Person].[Password](\r\n\t[BusinessEntityID] [int] NOT NULL,\r\n\t[PasswordHash] [varchar](128) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[PasswordSalt] [varchar](10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_Password_BusinessEntityID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[BusinessEntityID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[DF_Password_rowguid]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Person].[Password] ADD  CONSTRAINT [DF_Password_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[DF_Password_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Person].[Password] ADD  CONSTRAINT [DF_Password_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Password', N'COLUMN',N'PasswordHash'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Password for the e-mail account.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Password', @level2type=N'COLUMN',@level2name=N'PasswordHash'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Password', N'COLUMN',N'PasswordSalt'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Random value concatenated with the password string before the password is hashed.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Password', @level2type=N'COLUMN',@level2name=N'PasswordSalt'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Password', N'COLUMN',N'rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Password', @level2type=N'COLUMN',@level2name=N'rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Password', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Password', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Password', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'One way hashed authentication information' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Password'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Sales].[SalesPersonQuotaHistory]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[SalesPersonQuotaHistory]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Sales].[SalesPersonQuotaHistory](\r\n\t[BusinessEntityID] [int] NOT NULL,\r\n\t[QuotaDate] [datetime] NOT NULL,\r\n\t[SalesQuota] [money] NOT NULL,\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_SalesPersonQuotaHistory_BusinessEntityID_QuotaDate] PRIMARY KEY CLUSTERED \r\n(\r\n\t[BusinessEntityID] ASC,\r\n\t[QuotaDate] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Sales].[SalesPersonQuotaHistory]') AND name = N'AK_SalesPersonQuotaHistory_rowguid')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_SalesPersonQuotaHistory_rowguid] ON [Sales].[SalesPersonQuotaHistory]\r\n(\r\n\t[rowguid] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesPersonQuotaHistory_rowguid]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesPersonQuotaHistory] ADD  CONSTRAINT [DF_SalesPersonQuotaHistory_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesPersonQuotaHistory_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesPersonQuotaHistory] ADD  CONSTRAINT [DF_SalesPersonQuotaHistory_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPersonQuotaHistory', N'COLUMN',N'BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales person identification number. Foreign key to SalesPerson.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPersonQuotaHistory', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPersonQuotaHistory', N'COLUMN',N'QuotaDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales quota date.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPersonQuotaHistory', @level2type=N'COLUMN',@level2name=N'QuotaDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPersonQuotaHistory', N'COLUMN',N'SalesQuota'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales quota amount.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPersonQuotaHistory', @level2type=N'COLUMN',@level2name=N'SalesQuota'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPersonQuotaHistory', N'COLUMN',N'rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPersonQuotaHistory', @level2type=N'COLUMN',@level2name=N'rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPersonQuotaHistory', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPersonQuotaHistory', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPersonQuotaHistory', N'INDEX',N'AK_SalesPersonQuotaHistory_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPersonQuotaHistory', @level2type=N'INDEX',@level2name=N'AK_SalesPersonQuotaHistory_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPersonQuotaHistory', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales performance tracking.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPersonQuotaHistory'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Sales].[SalesTaxRate]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[SalesTaxRate]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Sales].[SalesTaxRate](\r\n\t[SalesTaxRateID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[StateProvinceID] [int] NOT NULL,\r\n\t[TaxType] [tinyint] NOT NULL,\r\n\t[TaxRate] [smallmoney] NOT NULL,\r\n\t[Name] [dbo].[Name] NOT NULL,\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_SalesTaxRate_SalesTaxRateID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[SalesTaxRateID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Sales].[SalesTaxRate]') AND name = N'AK_SalesTaxRate_rowguid')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_SalesTaxRate_rowguid] ON [Sales].[SalesTaxRate]\r\n(\r\n\t[rowguid] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Sales].[SalesTaxRate]') AND name = N'AK_SalesTaxRate_StateProvinceID_TaxType')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_SalesTaxRate_StateProvinceID_TaxType] ON [Sales].[SalesTaxRate]\r\n(\r\n\t[StateProvinceID] ASC,\r\n\t[TaxType] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesTaxRate_TaxRate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesTaxRate] ADD  CONSTRAINT [DF_SalesTaxRate_TaxRate]  DEFAULT ((0.00)) FOR [TaxRate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesTaxRate_rowguid]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesTaxRate] ADD  CONSTRAINT [DF_SalesTaxRate_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesTaxRate_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesTaxRate] ADD  CONSTRAINT [DF_SalesTaxRate_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTaxRate', N'COLUMN',N'SalesTaxRateID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for SalesTaxRate records.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'COLUMN',@level2name=N'SalesTaxRateID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTaxRate', N'COLUMN',N'StateProvinceID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'State, province, or country/region the sales tax applies to.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'COLUMN',@level2name=N'StateProvinceID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTaxRate', N'COLUMN',N'TaxType'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'1 = Tax applied to retail transactions, 2 = Tax applied to wholesale transactions, 3 = Tax applied to all sales (retail and wholesale) transactions.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'COLUMN',@level2name=N'TaxType'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTaxRate', N'COLUMN',N'TaxRate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Tax rate amount.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'COLUMN',@level2name=N'TaxRate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTaxRate', N'COLUMN',N'Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Tax rate description.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'COLUMN',@level2name=N'Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTaxRate', N'COLUMN',N'rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'COLUMN',@level2name=N'rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTaxRate', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTaxRate', N'INDEX',N'AK_SalesTaxRate_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'INDEX',@level2name=N'AK_SalesTaxRate_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTaxRate', N'INDEX',N'AK_SalesTaxRate_StateProvinceID_TaxType'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'INDEX',@level2name=N'AK_SalesTaxRate_StateProvinceID_TaxType'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTaxRate', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Tax rate lookup table.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Sales].[PersonCreditCard]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[PersonCreditCard]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Sales].[PersonCreditCard](\r\n\t[BusinessEntityID] [int] NOT NULL,\r\n\t[CreditCardID] [int] NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_PersonCreditCard_BusinessEntityID_CreditCardID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[BusinessEntityID] ASC,\r\n\t[CreditCardID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_PersonCreditCard_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[PersonCreditCard] ADD  CONSTRAINT [DF_PersonCreditCard_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'PersonCreditCard', N'COLUMN',N'BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Business entity identification number. Foreign key to Person.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'PersonCreditCard', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'PersonCreditCard', N'COLUMN',N'CreditCardID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Credit card identification number. Foreign key to CreditCard.CreditCardID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'PersonCreditCard', @level2type=N'COLUMN',@level2name=N'CreditCardID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'PersonCreditCard', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'PersonCreditCard', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'PersonCreditCard', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Cross-reference table mapping people to their credit card information in the CreditCard table. ' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'PersonCreditCard'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Person].[PhoneNumberType]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[PhoneNumberType]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Person].[PhoneNumberType](\r\n\t[PhoneNumberTypeID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[Name] [dbo].[Name] NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_PhoneNumberType_PhoneNumberTypeID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[PhoneNumberTypeID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[DF_PhoneNumberType_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Person].[PhoneNumberType] ADD  CONSTRAINT [DF_PhoneNumberType_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'PhoneNumberType', N'COLUMN',N'PhoneNumberTypeID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key for telephone number type records.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PhoneNumberType', @level2type=N'COLUMN',@level2name=N'PhoneNumberTypeID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'PhoneNumberType', N'COLUMN',N'Name'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Name of the telephone number type' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PhoneNumberType', @level2type=N'COLUMN',@level2name=N'Name'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'PhoneNumberType', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PhoneNumberType', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'PhoneNumberType', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Type of phone number of a person.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PhoneNumberType'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  UserDefinedDataType [dbo].[Phone]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nIF NOT EXISTS (SELECT * FROM sys.types st JOIN sys.schemas ss ON st.schema_id = ss.schema_id WHERE st.name = N'Phone' AND ss.name = N'dbo')\r\nCREATE TYPE [dbo].[Phone] FROM [nvarchar](25) NULL",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Person].[PersonPhone]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[PersonPhone]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Person].[PersonPhone](\r\n\t[BusinessEntityID] [int] NOT NULL,\r\n\t[PhoneNumber] [dbo].[Phone] NOT NULL,\r\n\t[PhoneNumberTypeID] [int] NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_PersonPhone_BusinessEntityID_PhoneNumber_PhoneNumberTypeID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[BusinessEntityID] ASC,\r\n\t[PhoneNumber] ASC,\r\n\t[PhoneNumberTypeID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ANSI_PADDING ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Person].[PersonPhone]') AND name = N'IX_PersonPhone_PhoneNumber')\r\nCREATE NONCLUSTERED INDEX [IX_PersonPhone_PhoneNumber] ON [Person].[PersonPhone]\r\n(\r\n\t[PhoneNumber] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Person].[DF_PersonPhone_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Person].[PersonPhone] ADD  CONSTRAINT [DF_PersonPhone_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'PersonPhone', N'COLUMN',N'BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Business entity identification number. Foreign key to Person.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PersonPhone', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'PersonPhone', N'COLUMN',N'PhoneNumber'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Telephone number identification number.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PersonPhone', @level2type=N'COLUMN',@level2name=N'PhoneNumber'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'PersonPhone', N'COLUMN',N'PhoneNumberTypeID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Kind of phone number. Foreign key to PhoneNumberType.PhoneNumberTypeID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PersonPhone', @level2type=N'COLUMN',@level2name=N'PhoneNumberTypeID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'PersonPhone', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PersonPhone', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'PersonPhone', N'INDEX',N'IX_PersonPhone_PhoneNumber'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Nonclustered index.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PersonPhone', @level2type=N'INDEX',@level2name=N'IX_PersonPhone_PhoneNumber'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'PersonPhone', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Telephone number and type of a person.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PersonPhone'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  Table [Sales].[SalesTerritoryHistory]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[SalesTerritoryHistory]') AND type in (N'U'))\r\nBEGIN\r\nCREATE TABLE [Sales].[SalesTerritoryHistory](\r\n\t[BusinessEntityID] [int] NOT NULL,\r\n\t[TerritoryID] [int] NOT NULL,\r\n\t[StartDate] [datetime] NOT NULL,\r\n\t[EndDate] [datetime] NULL,\r\n\t[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,\r\n\t[ModifiedDate] [datetime] NOT NULL,\r\n CONSTRAINT [PK_SalesTerritoryHistory_BusinessEntityID_StartDate_TerritoryID] PRIMARY KEY CLUSTERED \r\n(\r\n\t[BusinessEntityID] ASC,\r\n\t[StartDate] ASC,\r\n\t[TerritoryID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)\r\n)\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Sales].[SalesTerritoryHistory]') AND name = N'AK_SalesTerritoryHistory_rowguid')\r\nCREATE UNIQUE NONCLUSTERED INDEX [AK_SalesTerritoryHistory_rowguid] ON [Sales].[SalesTerritoryHistory]\r\n(\r\n\t[rowguid] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesTerritoryHistory_rowguid]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesTerritoryHistory] ADD  CONSTRAINT [DF_SalesTerritoryHistory_rowguid]  DEFAULT (newid()) FOR [rowguid]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Sales].[DF_SalesTerritoryHistory_ModifiedDate]') AND type = 'D')\r\nBEGIN\r\nALTER TABLE [Sales].[SalesTerritoryHistory] ADD  CONSTRAINT [DF_SalesTerritoryHistory_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]\r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritoryHistory', N'COLUMN',N'BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. The sales rep.  Foreign key to SalesPerson.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritoryHistory', @level2type=N'COLUMN',@level2name=N'BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritoryHistory', N'COLUMN',N'TerritoryID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Territory identification number. Foreign key to SalesTerritory.SalesTerritoryID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritoryHistory', @level2type=N'COLUMN',@level2name=N'TerritoryID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritoryHistory', N'COLUMN',N'StartDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key. Date the sales representive started work in the territory.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritoryHistory', @level2type=N'COLUMN',@level2name=N'StartDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritoryHistory', N'COLUMN',N'EndDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date the sales representative left work in the territory.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritoryHistory', @level2type=N'COLUMN',@level2name=N'EndDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritoryHistory', N'COLUMN',N'rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritoryHistory', @level2type=N'COLUMN',@level2name=N'rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritoryHistory', N'COLUMN',N'ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date and time the record was last updated.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritoryHistory', @level2type=N'COLUMN',@level2name=N'ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritoryHistory', N'INDEX',N'AK_SalesTerritoryHistory_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique nonclustered index. Used to support replication samples.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritoryHistory', @level2type=N'INDEX',@level2name=N'AK_SalesTerritoryHistory_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritoryHistory', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales representative transfers to other sales territories.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritoryHistory'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  UserDefinedFunction [dbo].[ufnGetContactInformation]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ufnGetContactInformation]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))\r\nBEGIN\r\nexecute dbo.sp_executesql @statement = N'\r\nCREATE FUNCTION [dbo].[ufnGetContactInformation](@PersonID int)\r\nRETURNS @retContactInformation TABLE \r\n(\r\n    -- Columns returned by the function\r\n    [PersonID] int NOT NULL, \r\n    [FirstName] [nvarchar](50) NULL, \r\n    [LastName] [nvarchar](50) NULL, \r\n\t[JobTitle] [nvarchar](50) NULL,\r\n    [BusinessEntityType] [nvarchar](50) NULL\r\n)\r\nAS \r\n-- Returns the first name, last name, job title and business entity type for the specified contact.\r\n-- Since a contact can serve multiple roles, more than one row may be returned.\r\nBEGIN\r\n\tIF @PersonID IS NOT NULL \r\n\t\tBEGIN\r\n\t\tIF EXISTS(SELECT * FROM [HumanResources].[Employee] e \r\n\t\t\t\t\tWHERE e.[BusinessEntityID] = @PersonID) \r\n\t\t\tINSERT INTO @retContactInformation\r\n\t\t\t\tSELECT @PersonID, p.FirstName, p.LastName, e.[JobTitle], ''Employee''\r\n\t\t\t\tFROM [HumanResources].[Employee] AS e\r\n\t\t\t\t\tINNER JOIN [Person].[Person] p\r\n\t\t\t\t\tON p.[BusinessEntityID] = e.[BusinessEntityID]\r\n\t\t\t\tWHERE e.[BusinessEntityID] = @PersonID;\r\n\r\n\t\tIF EXISTS(SELECT * FROM [Purchasing].[Vendor] AS v\r\n\t\t\t\t\tINNER JOIN [Person].[BusinessEntityContact] bec \r\n\t\t\t\t\tON bec.[BusinessEntityID] = v.[BusinessEntityID]\r\n\t\t\t\t\tWHERE bec.[PersonID] = @PersonID)\r\n\t\t\tINSERT INTO @retContactInformation\r\n\t\t\t\tSELECT @PersonID, p.FirstName, p.LastName, ct.[Name], ''Vendor Contact'' \r\n\t\t\t\tFROM [Purchasing].[Vendor] AS v\r\n\t\t\t\t\tINNER JOIN [Person].[BusinessEntityContact] bec \r\n\t\t\t\t\tON bec.[BusinessEntityID] = v.[BusinessEntityID]\r\n\t\t\t\t\tINNER JOIN [Person].ContactType ct\r\n\t\t\t\t\tON ct.[ContactTypeID] = bec.[ContactTypeID]\r\n\t\t\t\t\tINNER JOIN [Person].[Person] p\r\n\t\t\t\t\tON p.[BusinessEntityID] = bec.[PersonID]\r\n\t\t\t\tWHERE bec.[PersonID] = @PersonID;\r\n\t\t\r\n\t\tIF EXISTS(SELECT * FROM [Sales].[Store] AS s\r\n\t\t\t\t\tINNER JOIN [Person].[BusinessEntityContact] bec \r\n\t\t\t\t\tON bec.[BusinessEntityID] = s.[BusinessEntityID]\r\n\t\t\t\t\tWHERE bec.[PersonID] = @PersonID)\r\n\t\t\tINSERT INTO @retContactInformation\r\n\t\t\t\tSELECT @PersonID, p.FirstName, p.LastName, ct.[Name], ''Store Contact'' \r\n\t\t\t\tFROM [Sales].[Store] AS s\r\n\t\t\t\t\tINNER JOIN [Person].[BusinessEntityContact] bec \r\n\t\t\t\t\tON bec.[BusinessEntityID] = s.[BusinessEntityID]\r\n\t\t\t\t\tINNER JOIN [Person].ContactType ct\r\n\t\t\t\t\tON ct.[ContactTypeID] = bec.[ContactTypeID]\r\n\t\t\t\t\tINNER JOIN [Person].[Person] p\r\n\t\t\t\t\tON p.[BusinessEntityID] = bec.[PersonID]\r\n\t\t\t\tWHERE bec.[PersonID] = @PersonID;\r\n\r\n\t\tIF EXISTS(SELECT * FROM [Person].[Person] AS p\r\n\t\t\t\t\tINNER JOIN [Sales].[Customer] AS c\r\n\t\t\t\t\tON c.[PersonID] = p.[BusinessEntityID]\r\n\t\t\t\t\tWHERE p.[BusinessEntityID] = @PersonID AND c.[StoreID] IS NULL) \r\n\t\t\tINSERT INTO @retContactInformation\r\n\t\t\t\tSELECT @PersonID, p.FirstName, p.LastName, NULL, ''Consumer'' \r\n\t\t\t\tFROM [Person].[Person] AS p\r\n\t\t\t\t\tINNER JOIN [Sales].[Customer] AS c\r\n\t\t\t\t\tON c.[PersonID] = p.[BusinessEntityID]\r\n\t\t\t\t\tWHERE p.[BusinessEntityID] = @PersonID AND c.[StoreID] IS NULL; \r\n\t\tEND\r\n\r\n\tRETURN;\r\nEND;\r\n' \r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'FUNCTION',N'ufnGetContactInformation', N'PARAMETER',N'@PersonID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the table value function ufnGetContactInformation. Enter a valid PersonID from the Person.Contact table.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'FUNCTION',@level1name=N'ufnGetContactInformation', @level2type=N'PARAMETER',@level2name=N'@PersonID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'FUNCTION',N'ufnGetContactInformation', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Table value function returning the first name, last name, job title and contact type for a given contact.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'FUNCTION',@level1name=N'ufnGetContactInformation'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  UserDefinedFunction [dbo].[ufnGetProductDealerPrice]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ufnGetProductDealerPrice]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))\r\nBEGIN\r\nexecute dbo.sp_executesql @statement = N'\r\n\r\n\r\nCREATE FUNCTION [dbo].[ufnGetProductDealerPrice](@ProductID [int], @OrderDate [datetime])\r\nRETURNS [money] \r\nAS \r\n-- Returns the dealer price for the product on a specific date.\r\nBEGIN\r\n    DECLARE @DealerPrice money;\r\n    DECLARE @DealerDiscount money;\r\n\r\n    SET @DealerDiscount = 0.60  -- 60% of list price\r\n\r\n    SELECT @DealerPrice = plph.[ListPrice] * @DealerDiscount \r\n    FROM [Production].[Product] p \r\n        INNER JOIN [Production].[ProductListPriceHistory] plph \r\n        ON p.[ProductID] = plph.[ProductID] \r\n            AND p.[ProductID] = @ProductID \r\n            AND @OrderDate BETWEEN plph.[StartDate] AND COALESCE(plph.[EndDate], CONVERT(datetime, ''99991231'', 112)); -- Make sure we get all the prices!\r\n\r\n    RETURN @DealerPrice;\r\nEND;\r\n' \r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'FUNCTION',N'ufnGetProductDealerPrice', N'PARAMETER',N'@ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the scalar function ufnGetProductDealerPrice. Enter a valid ProductID from the Production.Product table.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'FUNCTION',@level1name=N'ufnGetProductDealerPrice', @level2type=N'PARAMETER',@level2name=N'@ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'FUNCTION',N'ufnGetProductDealerPrice', N'PARAMETER',N'@OrderDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the scalar function ufnGetProductDealerPrice. Enter a valid order date.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'FUNCTION',@level1name=N'ufnGetProductDealerPrice', @level2type=N'PARAMETER',@level2name=N'@OrderDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'FUNCTION',N'ufnGetProductDealerPrice', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Scalar function returning the dealer price for a given product on a particular order date.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'FUNCTION',@level1name=N'ufnGetProductDealerPrice'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  UserDefinedFunction [dbo].[ufnGetProductListPrice]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ufnGetProductListPrice]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))\r\nBEGIN\r\nexecute dbo.sp_executesql @statement = N'\r\nCREATE FUNCTION [dbo].[ufnGetProductListPrice](@ProductID [int], @OrderDate [datetime])\r\nRETURNS [money] \r\nAS \r\nBEGIN\r\n    DECLARE @ListPrice money;\r\n\r\n    SELECT @ListPrice = plph.[ListPrice] \r\n    FROM [Production].[Product] p \r\n        INNER JOIN [Production].[ProductListPriceHistory] plph \r\n        ON p.[ProductID] = plph.[ProductID] \r\n            AND p.[ProductID] = @ProductID \r\n            AND @OrderDate BETWEEN plph.[StartDate] AND COALESCE(plph.[EndDate], CONVERT(datetime, ''99991231'', 112)); -- Make sure we get all the prices!\r\n\r\n    RETURN @ListPrice;\r\nEND;\r\n' \r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'FUNCTION',N'ufnGetProductListPrice', N'PARAMETER',N'@ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the scalar function ufnGetProductListPrice. Enter a valid ProductID from the Production.Product table.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'FUNCTION',@level1name=N'ufnGetProductListPrice', @level2type=N'PARAMETER',@level2name=N'@ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'FUNCTION',N'ufnGetProductListPrice', N'PARAMETER',N'@OrderDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the scalar function ufnGetProductListPrice. Enter a valid order date.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'FUNCTION',@level1name=N'ufnGetProductListPrice', @level2type=N'PARAMETER',@level2name=N'@OrderDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'FUNCTION',N'ufnGetProductListPrice', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Scalar function returning the list price for a given product on a particular order date.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'FUNCTION',@level1name=N'ufnGetProductListPrice'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  UserDefinedFunction [dbo].[ufnGetProductStandardCost]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ufnGetProductStandardCost]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))\r\nBEGIN\r\nexecute dbo.sp_executesql @statement = N'\r\nCREATE FUNCTION [dbo].[ufnGetProductStandardCost](@ProductID [int], @OrderDate [datetime])\r\nRETURNS [money] \r\nAS \r\n-- Returns the standard cost for the product on a specific date.\r\nBEGIN\r\n    DECLARE @StandardCost money;\r\n\r\n    SELECT @StandardCost = pch.[StandardCost] \r\n    FROM [Production].[Product] p \r\n        INNER JOIN [Production].[ProductCostHistory] pch \r\n        ON p.[ProductID] = pch.[ProductID] \r\n            AND p.[ProductID] = @ProductID \r\n            AND @OrderDate BETWEEN pch.[StartDate] AND COALESCE(pch.[EndDate], CONVERT(datetime, ''99991231'', 112)); -- Make sure we get all the prices!\r\n\r\n    RETURN @StandardCost;\r\nEND;\r\n' \r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'FUNCTION',N'ufnGetProductStandardCost', N'PARAMETER',N'@ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the scalar function ufnGetProductStandardCost. Enter a valid ProductID from the Production.Product table.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'FUNCTION',@level1name=N'ufnGetProductStandardCost', @level2type=N'PARAMETER',@level2name=N'@ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'FUNCTION',N'ufnGetProductStandardCost', N'PARAMETER',N'@OrderDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the scalar function ufnGetProductStandardCost. Enter a valid order date.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'FUNCTION',@level1name=N'ufnGetProductStandardCost', @level2type=N'PARAMETER',@level2name=N'@OrderDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'FUNCTION',N'ufnGetProductStandardCost', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Scalar function returning the standard cost for a given product on a particular order date.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'FUNCTION',@level1name=N'ufnGetProductStandardCost'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  UserDefinedFunction [dbo].[ufnGetStock]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ufnGetStock]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))\r\nBEGIN\r\nexecute dbo.sp_executesql @statement = N'\r\nCREATE FUNCTION [dbo].[ufnGetStock](@ProductID [int])\r\nRETURNS [int] \r\nAS \r\n-- Returns the stock level for the product. This function is used internally only\r\nBEGIN\r\n    DECLARE @ret int;\r\n    \r\n    SELECT @ret = SUM(p.[Quantity]) \r\n    FROM [Production].[ProductInventory] p \r\n    WHERE p.[ProductID] = @ProductID \r\n        AND p.[LocationID] = ''6''; -- Only look at inventory in the misc storage\r\n    \r\n    IF (@ret IS NULL) \r\n        SET @ret = 0\r\n    \r\n    RETURN @ret\r\nEND;\r\n' \r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'FUNCTION',N'ufnGetStock', N'PARAMETER',N'@ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the scalar function ufnGetStock. Enter a valid ProductID from the Production.ProductInventory table.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'FUNCTION',@level1name=N'ufnGetStock', @level2type=N'PARAMETER',@level2name=N'@ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'FUNCTION',N'ufnGetStock', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Scalar function returning the quantity of inventory in LocationID 6 (Miscellaneous Storage)for a specified ProductID.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'FUNCTION',@level1name=N'ufnGetStock'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  UserDefinedFunction [dbo].[ufnGetDocumentStatusText]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ufnGetDocumentStatusText]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))\r\nBEGIN\r\nexecute dbo.sp_executesql @statement = N'\r\nCREATE FUNCTION [dbo].[ufnGetDocumentStatusText](@Status [tinyint])\r\nRETURNS [nvarchar](16) \r\nAS \r\n-- Returns the sales order status text representation for the status value.\r\nBEGIN\r\n    DECLARE @ret [nvarchar](16);\r\n\r\n    SET @ret = \r\n        CASE @Status\r\n            WHEN 1 THEN N''Pending approval''\r\n            WHEN 2 THEN N''Approved''\r\n            WHEN 3 THEN N''Obsolete''\r\n            ELSE N''** Invalid **''\r\n        END;\r\n    \r\n    RETURN @ret\r\nEND;\r\n' \r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'FUNCTION',N'ufnGetDocumentStatusText', N'PARAMETER',N'@Status'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the scalar function ufnGetDocumentStatusText. Enter a valid integer.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'FUNCTION',@level1name=N'ufnGetDocumentStatusText', @level2type=N'PARAMETER',@level2name=N'@Status'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'FUNCTION',N'ufnGetDocumentStatusText', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Scalar function returning the text representation of the Status column in the Document table.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'FUNCTION',@level1name=N'ufnGetDocumentStatusText'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  UserDefinedFunction [dbo].[ufnGetPurchaseOrderStatusText]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ufnGetPurchaseOrderStatusText]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))\r\nBEGIN\r\nexecute dbo.sp_executesql @statement = N'\r\nCREATE FUNCTION [dbo].[ufnGetPurchaseOrderStatusText](@Status [tinyint])\r\nRETURNS [nvarchar](15) \r\nAS \r\n-- Returns the sales order status text representation for the status value.\r\nBEGIN\r\n    DECLARE @ret [nvarchar](15);\r\n\r\n    SET @ret = \r\n        CASE @Status\r\n            WHEN 1 THEN ''Pending''\r\n            WHEN 2 THEN ''Approved''\r\n            WHEN 3 THEN ''Rejected''\r\n            WHEN 4 THEN ''Complete''\r\n            ELSE ''** Invalid **''\r\n        END;\r\n    \r\n    RETURN @ret\r\nEND;\r\n' \r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'FUNCTION',N'ufnGetPurchaseOrderStatusText', N'PARAMETER',N'@Status'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the scalar function ufnGetPurchaseOrdertStatusText. Enter a valid integer.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'FUNCTION',@level1name=N'ufnGetPurchaseOrderStatusText', @level2type=N'PARAMETER',@level2name=N'@Status'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'FUNCTION',N'ufnGetPurchaseOrderStatusText', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Scalar function returning the text representation of the Status column in the PurchaseOrderHeader table.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'FUNCTION',@level1name=N'ufnGetPurchaseOrderStatusText'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  UserDefinedFunction [dbo].[ufnGetSalesOrderStatusText]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ufnGetSalesOrderStatusText]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))\r\nBEGIN\r\nexecute dbo.sp_executesql @statement = N'\r\nCREATE FUNCTION [dbo].[ufnGetSalesOrderStatusText](@Status [tinyint])\r\nRETURNS [nvarchar](15) \r\nAS \r\n-- Returns the sales order status text representation for the status value.\r\nBEGIN\r\n    DECLARE @ret [nvarchar](15);\r\n\r\n    SET @ret = \r\n        CASE @Status\r\n            WHEN 1 THEN ''In process''\r\n            WHEN 2 THEN ''Approved''\r\n            WHEN 3 THEN ''Backordered''\r\n            WHEN 4 THEN ''Rejected''\r\n            WHEN 5 THEN ''Shipped''\r\n            WHEN 6 THEN ''Cancelled''\r\n            ELSE ''** Invalid **''\r\n        END;\r\n    \r\n    RETURN @ret\r\nEND;\r\n' \r\nEND",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'FUNCTION',N'ufnGetSalesOrderStatusText', N'PARAMETER',N'@Status'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Input parameter for the scalar function ufnGetSalesOrderStatusText. Enter a valid integer.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'FUNCTION',@level1name=N'ufnGetSalesOrderStatusText', @level2type=N'PARAMETER',@level2name=N'@Status'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'FUNCTION',N'ufnGetSalesOrderStatusText', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Scalar function returning the text representation of the Status column in the SalesOrderHeader table.' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'FUNCTION',@level1name=N'ufnGetSalesOrderStatusText'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  View [Sales].[vStoreWithContacts]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[Sales].[vStoreWithContacts]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE VIEW [Sales].[vStoreWithContacts] AS \r\nSELECT \r\n    s.[BusinessEntityID] \r\n    ,s.[Name] \r\n    ,ct.[Name] AS [ContactType] \r\n    ,p.[Title] \r\n    ,p.[FirstName] \r\n    ,p.[MiddleName] \r\n    ,p.[LastName] \r\n    ,p.[Suffix] \r\n    ,pp.[PhoneNumber] \r\n\t,pnt.[Name] AS [PhoneNumberType]\r\n    ,ea.[EmailAddress] \r\n    ,p.[EmailPromotion] \r\nFROM [Sales].[Store] s\r\n    INNER JOIN [Person].[BusinessEntityContact] bec \r\n    ON bec.[BusinessEntityID] = s.[BusinessEntityID]\r\n\tINNER JOIN [Person].[ContactType] ct\r\n\tON ct.[ContactTypeID] = bec.[ContactTypeID]\r\n\tINNER JOIN [Person].[Person] p\r\n\tON p.[BusinessEntityID] = bec.[PersonID]\r\n\tLEFT OUTER JOIN [Person].[EmailAddress] ea\r\n\tON ea.[BusinessEntityID] = p.[BusinessEntityID]\r\n\tLEFT OUTER JOIN [Person].[PersonPhone] pp\r\n\tON pp.[BusinessEntityID] = p.[BusinessEntityID]\r\n\tLEFT OUTER JOIN [Person].[PhoneNumberType] pnt\r\n\tON pnt.[PhoneNumberTypeID] = pp.[PhoneNumberTypeID];\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'VIEW',N'vStoreWithContacts', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Stores (including store contacts) that sell Adventure Works Cycles products to consumers.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'VIEW',@level1name=N'vStoreWithContacts'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  View [Sales].[vStoreWithAddresses]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[Sales].[vStoreWithAddresses]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE VIEW [Sales].[vStoreWithAddresses] AS \r\nSELECT \r\n    s.[BusinessEntityID] \r\n    ,s.[Name] \r\n    ,at.[Name] AS [AddressType]\r\n    ,a.[AddressLine1] \r\n    ,a.[AddressLine2] \r\n    ,a.[City] \r\n    ,sp.[Name] AS [StateProvinceName] \r\n    ,a.[PostalCode] \r\n    ,cr.[Name] AS [CountryRegionName] \r\nFROM [Sales].[Store] s\r\n    INNER JOIN [Person].[BusinessEntityAddress] bea \r\n    ON bea.[BusinessEntityID] = s.[BusinessEntityID] \r\n    INNER JOIN [Person].[Address] a \r\n    ON a.[AddressID] = bea.[AddressID]\r\n    INNER JOIN [Person].[StateProvince] sp \r\n    ON sp.[StateProvinceID] = a.[StateProvinceID]\r\n    INNER JOIN [Person].[CountryRegion] cr \r\n    ON cr.[CountryRegionCode] = sp.[CountryRegionCode]\r\n    INNER JOIN [Person].[AddressType] at \r\n    ON at.[AddressTypeID] = bea.[AddressTypeID];\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'VIEW',N'vStoreWithAddresses', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Stores (including store addresses) that sell Adventure Works Cycles products to consumers.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'VIEW',@level1name=N'vStoreWithAddresses'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  View [Purchasing].[vVendorWithContacts]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[Purchasing].[vVendorWithContacts]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE VIEW [Purchasing].[vVendorWithContacts] AS \r\nSELECT \r\n    v.[BusinessEntityID]\r\n    ,v.[Name]\r\n    ,ct.[Name] AS [ContactType] \r\n    ,p.[Title] \r\n    ,p.[FirstName] \r\n    ,p.[MiddleName] \r\n    ,p.[LastName] \r\n    ,p.[Suffix] \r\n    ,pp.[PhoneNumber] \r\n\t,pnt.[Name] AS [PhoneNumberType]\r\n    ,ea.[EmailAddress] \r\n    ,p.[EmailPromotion] \r\nFROM [Purchasing].[Vendor] v\r\n    INNER JOIN [Person].[BusinessEntityContact] bec \r\n    ON bec.[BusinessEntityID] = v.[BusinessEntityID]\r\n\tINNER JOIN [Person].ContactType ct\r\n\tON ct.[ContactTypeID] = bec.[ContactTypeID]\r\n\tINNER JOIN [Person].[Person] p\r\n\tON p.[BusinessEntityID] = bec.[PersonID]\r\n\tLEFT OUTER JOIN [Person].[EmailAddress] ea\r\n\tON ea.[BusinessEntityID] = p.[BusinessEntityID]\r\n\tLEFT OUTER JOIN [Person].[PersonPhone] pp\r\n\tON pp.[BusinessEntityID] = p.[BusinessEntityID]\r\n\tLEFT OUTER JOIN [Person].[PhoneNumberType] pnt\r\n\tON pnt.[PhoneNumberTypeID] = pp.[PhoneNumberTypeID];\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'VIEW',N'vVendorWithContacts', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Vendor (company) names  and the names of vendor employees to contact.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'VIEW',@level1name=N'vVendorWithContacts'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  View [Purchasing].[vVendorWithAddresses]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[Purchasing].[vVendorWithAddresses]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE VIEW [Purchasing].[vVendorWithAddresses] AS \r\nSELECT \r\n    v.[BusinessEntityID]\r\n    ,v.[Name]\r\n    ,at.[Name] AS [AddressType]\r\n    ,a.[AddressLine1] \r\n    ,a.[AddressLine2] \r\n    ,a.[City] \r\n    ,sp.[Name] AS [StateProvinceName] \r\n    ,a.[PostalCode] \r\n    ,cr.[Name] AS [CountryRegionName] \r\nFROM [Purchasing].[Vendor] v\r\n    INNER JOIN [Person].[BusinessEntityAddress] bea \r\n    ON bea.[BusinessEntityID] = v.[BusinessEntityID] \r\n    INNER JOIN [Person].[Address] a \r\n    ON a.[AddressID] = bea.[AddressID]\r\n    INNER JOIN [Person].[StateProvince] sp \r\n    ON sp.[StateProvinceID] = a.[StateProvinceID]\r\n    INNER JOIN [Person].[CountryRegion] cr \r\n    ON cr.[CountryRegionCode] = sp.[CountryRegionCode]\r\n    INNER JOIN [Person].[AddressType] at \r\n    ON at.[AddressTypeID] = bea.[AddressTypeID];\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'VIEW',N'vVendorWithAddresses', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Vendor (company) names and addresses .' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'VIEW',@level1name=N'vVendorWithAddresses'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  View [Person].[vAdditionalContactInfo]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[Person].[vAdditionalContactInfo]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE VIEW [Person].[vAdditionalContactInfo] \r\nAS \r\nSELECT \r\n    [BusinessEntityID] \r\n    ,[FirstName]\r\n    ,[MiddleName]\r\n    ,[LastName]\r\n    ,[ContactInfo].ref.value(N''declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \r\n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \r\n        (act:telephoneNumber)[1]/act:number'', ''nvarchar(50)'') AS [TelephoneNumber] \r\n    ,LTRIM(RTRIM([ContactInfo].ref.value(N''declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \r\n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \r\n        (act:telephoneNumber/act:SpecialInstructions/text())[1]'', ''nvarchar(max)''))) AS [TelephoneSpecialInstructions] \r\n    ,[ContactInfo].ref.value(N''declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \r\n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\";\r\n        (act:homePostalAddress/act:Street)[1]'', ''nvarchar(50)'') AS [Street] \r\n    ,[ContactInfo].ref.value(N''declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \r\n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \r\n        (act:homePostalAddress/act:City)[1]'', ''nvarchar(50)'') AS [City] \r\n    ,[ContactInfo].ref.value(N''declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \r\n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \r\n        (act:homePostalAddress/act:StateProvince)[1]'', ''nvarchar(50)'') AS [StateProvince] \r\n    ,[ContactInfo].ref.value(N''declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \r\n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \r\n        (act:homePostalAddress/act:PostalCode)[1]'', ''nvarchar(50)'') AS [PostalCode] \r\n    ,[ContactInfo].ref.value(N''declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \r\n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \r\n        (act:homePostalAddress/act:CountryRegion)[1]'', ''nvarchar(50)'') AS [CountryRegion] \r\n    ,[ContactInfo].ref.value(N''declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \r\n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \r\n        (act:homePostalAddress/act:SpecialInstructions/text())[1]'', ''nvarchar(max)'') AS [HomeAddressSpecialInstructions] \r\n    ,[ContactInfo].ref.value(N''declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \r\n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \r\n        (act:eMail/act:eMailAddress)[1]'', ''nvarchar(128)'') AS [EMailAddress] \r\n    ,LTRIM(RTRIM([ContactInfo].ref.value(N''declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \r\n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \r\n        (act:eMail/act:SpecialInstructions/text())[1]'', ''nvarchar(max)''))) AS [EMailSpecialInstructions] \r\n    ,[ContactInfo].ref.value(N''declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \r\n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \r\n        (act:eMail/act:SpecialInstructions/act:telephoneNumber/act:number)[1]'', ''nvarchar(50)'') AS [EMailTelephoneNumber] \r\n    ,[rowguid] \r\n    ,[ModifiedDate]\r\nFROM [Person].[Person]\r\nOUTER APPLY [AdditionalContactInfo].nodes(\r\n    ''declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \r\n    /ci:AdditionalContactInfo'') AS ContactInfo(ref) \r\nWHERE [AdditionalContactInfo] IS NOT NULL;\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'VIEW',N'vAdditionalContactInfo', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Displays the contact name and content from each element in the xml column AdditionalContactInfo for that person.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'VIEW',@level1name=N'vAdditionalContactInfo'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  View [HumanResources].[vEmployee]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[HumanResources].[vEmployee]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE VIEW [HumanResources].[vEmployee] \r\nAS \r\nSELECT \r\n    e.[BusinessEntityID]\r\n    ,p.[Title]\r\n    ,p.[FirstName]\r\n    ,p.[MiddleName]\r\n    ,p.[LastName]\r\n    ,p.[Suffix]\r\n    ,e.[JobTitle]  \r\n    ,pp.[PhoneNumber]\r\n    ,pnt.[Name] AS [PhoneNumberType]\r\n    ,ea.[EmailAddress]\r\n    ,p.[EmailPromotion]\r\n    ,a.[AddressLine1]\r\n    ,a.[AddressLine2]\r\n    ,a.[City]\r\n    ,sp.[Name] AS [StateProvinceName] \r\n    ,a.[PostalCode]\r\n    ,cr.[Name] AS [CountryRegionName] \r\n    ,p.[AdditionalContactInfo]\r\nFROM [HumanResources].[Employee] e\r\n\tINNER JOIN [Person].[Person] p\r\n\tON p.[BusinessEntityID] = e.[BusinessEntityID]\r\n    INNER JOIN [Person].[BusinessEntityAddress] bea \r\n    ON bea.[BusinessEntityID] = e.[BusinessEntityID] \r\n    INNER JOIN [Person].[Address] a \r\n    ON a.[AddressID] = bea.[AddressID]\r\n    INNER JOIN [Person].[StateProvince] sp \r\n    ON sp.[StateProvinceID] = a.[StateProvinceID]\r\n    INNER JOIN [Person].[CountryRegion] cr \r\n    ON cr.[CountryRegionCode] = sp.[CountryRegionCode]\r\n    LEFT OUTER JOIN [Person].[PersonPhone] pp\r\n    ON pp.BusinessEntityID = p.[BusinessEntityID]\r\n    LEFT OUTER JOIN [Person].[PhoneNumberType] pnt\r\n    ON pp.[PhoneNumberTypeID] = pnt.[PhoneNumberTypeID]\r\n    LEFT OUTER JOIN [Person].[EmailAddress] ea\r\n    ON p.[BusinessEntityID] = ea.[BusinessEntityID];\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'VIEW',N'vEmployee', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Employee names and addresses.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'VIEW',@level1name=N'vEmployee'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  View [HumanResources].[vEmployeeDepartment]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[HumanResources].[vEmployeeDepartment]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE VIEW [HumanResources].[vEmployeeDepartment] \r\nAS \r\nSELECT \r\n    e.[BusinessEntityID] \r\n    ,p.[Title] \r\n    ,p.[FirstName] \r\n    ,p.[MiddleName] \r\n    ,p.[LastName] \r\n    ,p.[Suffix] \r\n    ,e.[JobTitle]\r\n    ,d.[Name] AS [Department] \r\n    ,d.[GroupName] \r\n    ,edh.[StartDate] \r\nFROM [HumanResources].[Employee] e\r\n\tINNER JOIN [Person].[Person] p\r\n\tON p.[BusinessEntityID] = e.[BusinessEntityID]\r\n    INNER JOIN [HumanResources].[EmployeeDepartmentHistory] edh \r\n    ON e.[BusinessEntityID] = edh.[BusinessEntityID] \r\n    INNER JOIN [HumanResources].[Department] d \r\n    ON edh.[DepartmentID] = d.[DepartmentID] \r\nWHERE edh.EndDate IS NULL\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'VIEW',N'vEmployeeDepartment', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Returns employee name, title, and current department.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'VIEW',@level1name=N'vEmployeeDepartment'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  View [HumanResources].[vEmployeeDepartmentHistory]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[HumanResources].[vEmployeeDepartmentHistory]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE VIEW [HumanResources].[vEmployeeDepartmentHistory] \r\nAS \r\nSELECT \r\n    e.[BusinessEntityID] \r\n    ,p.[Title] \r\n    ,p.[FirstName] \r\n    ,p.[MiddleName] \r\n    ,p.[LastName] \r\n    ,p.[Suffix] \r\n    ,s.[Name] AS [Shift]\r\n    ,d.[Name] AS [Department] \r\n    ,d.[GroupName] \r\n    ,edh.[StartDate] \r\n    ,edh.[EndDate]\r\nFROM [HumanResources].[Employee] e\r\n\tINNER JOIN [Person].[Person] p\r\n\tON p.[BusinessEntityID] = e.[BusinessEntityID]\r\n    INNER JOIN [HumanResources].[EmployeeDepartmentHistory] edh \r\n    ON e.[BusinessEntityID] = edh.[BusinessEntityID] \r\n    INNER JOIN [HumanResources].[Department] d \r\n    ON edh.[DepartmentID] = d.[DepartmentID] \r\n    INNER JOIN [HumanResources].[Shift] s\r\n    ON s.[ShiftID] = edh.[ShiftID];\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'VIEW',N'vEmployeeDepartmentHistory', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Returns employee name and current and previous departments.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'VIEW',@level1name=N'vEmployeeDepartmentHistory'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  View [Sales].[vIndividualCustomer]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[Sales].[vIndividualCustomer]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE VIEW [Sales].[vIndividualCustomer] \r\nAS \r\nSELECT \r\n    p.[BusinessEntityID]\r\n    ,p.[Title]\r\n    ,p.[FirstName]\r\n    ,p.[MiddleName]\r\n    ,p.[LastName]\r\n    ,p.[Suffix]\r\n    ,pp.[PhoneNumber]\r\n\t,pnt.[Name] AS [PhoneNumberType]\r\n    ,ea.[EmailAddress]\r\n    ,p.[EmailPromotion]\r\n    ,at.[Name] AS [AddressType]\r\n    ,a.[AddressLine1]\r\n    ,a.[AddressLine2]\r\n    ,a.[City]\r\n    ,[StateProvinceName] = sp.[Name]\r\n    ,a.[PostalCode]\r\n    ,[CountryRegionName] = cr.[Name]\r\n    ,p.[Demographics]\r\nFROM [Person].[Person] p\r\n    INNER JOIN [Person].[BusinessEntityAddress] bea \r\n    ON bea.[BusinessEntityID] = p.[BusinessEntityID] \r\n    INNER JOIN [Person].[Address] a \r\n    ON a.[AddressID] = bea.[AddressID]\r\n    INNER JOIN [Person].[StateProvince] sp \r\n    ON sp.[StateProvinceID] = a.[StateProvinceID]\r\n    INNER JOIN [Person].[CountryRegion] cr \r\n    ON cr.[CountryRegionCode] = sp.[CountryRegionCode]\r\n    INNER JOIN [Person].[AddressType] at \r\n    ON at.[AddressTypeID] = bea.[AddressTypeID]\r\n\tINNER JOIN [Sales].[Customer] c\r\n\tON c.[PersonID] = p.[BusinessEntityID]\r\n\tLEFT OUTER JOIN [Person].[EmailAddress] ea\r\n\tON ea.[BusinessEntityID] = p.[BusinessEntityID]\r\n\tLEFT OUTER JOIN [Person].[PersonPhone] pp\r\n\tON pp.[BusinessEntityID] = p.[BusinessEntityID]\r\n\tLEFT OUTER JOIN [Person].[PhoneNumberType] pnt\r\n\tON pnt.[PhoneNumberTypeID] = pp.[PhoneNumberTypeID]\r\nWHERE c.StoreID IS NULL;\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'VIEW',N'vIndividualCustomer', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Individual customers (names and addresses) that purchase Adventure Works Cycles products online.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'VIEW',@level1name=N'vIndividualCustomer'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  View [Sales].[vPersonDemographics]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[Sales].[vPersonDemographics]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE VIEW [Sales].[vPersonDemographics] \r\nAS \r\nSELECT \r\n    p.[BusinessEntityID] \r\n    ,[IndividualSurvey].[ref].[value](N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \r\n        TotalPurchaseYTD[1]'', ''money'') AS [TotalPurchaseYTD] \r\n    ,CONVERT(datetime, REPLACE([IndividualSurvey].[ref].[value](N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \r\n        DateFirstPurchase[1]'', ''nvarchar(20)'') ,''Z'', ''''), 101) AS [DateFirstPurchase] \r\n    ,CONVERT(datetime, REPLACE([IndividualSurvey].[ref].[value](N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \r\n        BirthDate[1]'', ''nvarchar(20)'') ,''Z'', ''''), 101) AS [BirthDate] \r\n    ,[IndividualSurvey].[ref].[value](N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \r\n        MaritalStatus[1]'', ''nvarchar(1)'') AS [MaritalStatus] \r\n    ,[IndividualSurvey].[ref].[value](N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \r\n        YearlyIncome[1]'', ''nvarchar(30)'') AS [YearlyIncome] \r\n    ,[IndividualSurvey].[ref].[value](N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \r\n        Gender[1]'', ''nvarchar(1)'') AS [Gender] \r\n    ,[IndividualSurvey].[ref].[value](N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \r\n        TotalChildren[1]'', ''integer'') AS [TotalChildren] \r\n    ,[IndividualSurvey].[ref].[value](N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \r\n        NumberChildrenAtHome[1]'', ''integer'') AS [NumberChildrenAtHome] \r\n    ,[IndividualSurvey].[ref].[value](N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \r\n        Education[1]'', ''nvarchar(30)'') AS [Education] \r\n    ,[IndividualSurvey].[ref].[value](N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \r\n        Occupation[1]'', ''nvarchar(30)'') AS [Occupation] \r\n    ,[IndividualSurvey].[ref].[value](N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \r\n        HomeOwnerFlag[1]'', ''bit'') AS [HomeOwnerFlag] \r\n    ,[IndividualSurvey].[ref].[value](N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \r\n        NumberCarsOwned[1]'', ''integer'') AS [NumberCarsOwned] \r\nFROM [Person].[Person] p \r\nCROSS APPLY p.[Demographics].nodes(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \r\n    /IndividualSurvey'') AS [IndividualSurvey](ref) \r\nWHERE [Demographics] IS NOT NULL;\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'VIEW',N'vPersonDemographics', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Displays the content from each element in the xml column Demographics for each customer in the Person.Person table.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'VIEW',@level1name=N'vPersonDemographics'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  View [HumanResources].[vJobCandidate]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[HumanResources].[vJobCandidate]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE VIEW [HumanResources].[vJobCandidate] \r\nAS \r\nSELECT \r\n    jc.[JobCandidateID] \r\n    ,jc.[BusinessEntityID] \r\n    ,[Resume].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (/Resume/Name/Name.Prefix)[1]'', ''nvarchar(30)'') AS [Name.Prefix] \r\n    ,[Resume].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\";\r\n        (/Resume/Name/Name.First)[1]'', ''nvarchar(30)'') AS [Name.First] \r\n    ,[Resume].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (/Resume/Name/Name.Middle)[1]'', ''nvarchar(30)'') AS [Name.Middle] \r\n    ,[Resume].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (/Resume/Name/Name.Last)[1]'', ''nvarchar(30)'') AS [Name.Last] \r\n    ,[Resume].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (/Resume/Name/Name.Suffix)[1]'', ''nvarchar(30)'') AS [Name.Suffix] \r\n    ,[Resume].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (/Resume/Skills)[1]'', ''nvarchar(max)'') AS [Skills] \r\n    ,[Resume].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (Address/Addr.Type)[1]'', ''nvarchar(30)'') AS [Addr.Type]\r\n    ,[Resume].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (Address/Addr.Location/Location/Loc.CountryRegion)[1]'', ''nvarchar(100)'') AS [Addr.Loc.CountryRegion]\r\n    ,[Resume].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (Address/Addr.Location/Location/Loc.State)[1]'', ''nvarchar(100)'') AS [Addr.Loc.State]\r\n    ,[Resume].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (Address/Addr.Location/Location/Loc.City)[1]'', ''nvarchar(100)'') AS [Addr.Loc.City]\r\n    ,[Resume].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (Address/Addr.PostalCode)[1]'', ''nvarchar(20)'') AS [Addr.PostalCode]\r\n    ,[Resume].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (/Resume/EMail)[1]'', ''nvarchar(max)'') AS [EMail] \r\n    ,[Resume].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (/Resume/WebSite)[1]'', ''nvarchar(max)'') AS [WebSite] \r\n    ,jc.[ModifiedDate] \r\nFROM [HumanResources].[JobCandidate] jc \r\nCROSS APPLY jc.[Resume].nodes(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n    /Resume'') AS Resume(ref);\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'VIEW',N'vJobCandidate', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Job candidate names and resumes.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'VIEW',@level1name=N'vJobCandidate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  View [HumanResources].[vJobCandidateEmployment]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[HumanResources].[vJobCandidateEmployment]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE VIEW [HumanResources].[vJobCandidateEmployment] \r\nAS \r\nSELECT \r\n    jc.[JobCandidateID] \r\n    ,CONVERT(datetime, REPLACE([Employment].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (Emp.StartDate)[1]'', ''nvarchar(20)'') ,''Z'', ''''), 101) AS [Emp.StartDate] \r\n    ,CONVERT(datetime, REPLACE([Employment].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (Emp.EndDate)[1]'', ''nvarchar(20)'') ,''Z'', ''''), 101) AS [Emp.EndDate] \r\n    ,[Employment].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (Emp.OrgName)[1]'', ''nvarchar(100)'') AS [Emp.OrgName]\r\n    ,[Employment].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (Emp.JobTitle)[1]'', ''nvarchar(100)'') AS [Emp.JobTitle]\r\n    ,[Employment].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (Emp.Responsibility)[1]'', ''nvarchar(max)'') AS [Emp.Responsibility]\r\n    ,[Employment].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (Emp.FunctionCategory)[1]'', ''nvarchar(max)'') AS [Emp.FunctionCategory]\r\n    ,[Employment].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (Emp.IndustryCategory)[1]'', ''nvarchar(max)'') AS [Emp.IndustryCategory]\r\n    ,[Employment].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (Emp.Location/Location/Loc.CountryRegion)[1]'', ''nvarchar(max)'') AS [Emp.Loc.CountryRegion]\r\n    ,[Employment].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (Emp.Location/Location/Loc.State)[1]'', ''nvarchar(max)'') AS [Emp.Loc.State]\r\n    ,[Employment].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (Emp.Location/Location/Loc.City)[1]'', ''nvarchar(max)'') AS [Emp.Loc.City]\r\nFROM [HumanResources].[JobCandidate] jc \r\nCROSS APPLY jc.[Resume].nodes(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n    /Resume/Employment'') AS Employment(ref);\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'VIEW',N'vJobCandidateEmployment', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Displays the content from each employement history related element in the xml column Resume in the HumanResources.JobCandidate table. The content has been localized into French, Simplified Chinese and Thai. Some data may not display correctly unless supplemental language support is installed.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'VIEW',@level1name=N'vJobCandidateEmployment'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  View [HumanResources].[vJobCandidateEducation]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[HumanResources].[vJobCandidateEducation]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE VIEW [HumanResources].[vJobCandidateEducation] \r\nAS \r\nSELECT \r\n    jc.[JobCandidateID] \r\n    ,[Education].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (Edu.Level)[1]'', ''nvarchar(max)'') AS [Edu.Level]\r\n    ,CONVERT(datetime, REPLACE([Education].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (Edu.StartDate)[1]'', ''nvarchar(20)'') ,''Z'', ''''), 101) AS [Edu.StartDate] \r\n    ,CONVERT(datetime, REPLACE([Education].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (Edu.EndDate)[1]'', ''nvarchar(20)'') ,''Z'', ''''), 101) AS [Edu.EndDate] \r\n    ,[Education].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (Edu.Degree)[1]'', ''nvarchar(50)'') AS [Edu.Degree]\r\n    ,[Education].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (Edu.Major)[1]'', ''nvarchar(50)'') AS [Edu.Major]\r\n    ,[Education].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (Edu.Minor)[1]'', ''nvarchar(50)'') AS [Edu.Minor]\r\n    ,[Education].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (Edu.GPA)[1]'', ''nvarchar(5)'') AS [Edu.GPA]\r\n    ,[Education].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (Edu.GPAScale)[1]'', ''nvarchar(5)'') AS [Edu.GPAScale]\r\n    ,[Education].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (Edu.School)[1]'', ''nvarchar(100)'') AS [Edu.School]\r\n    ,[Education].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (Edu.Location/Location/Loc.CountryRegion)[1]'', ''nvarchar(100)'') AS [Edu.Loc.CountryRegion]\r\n    ,[Education].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (Edu.Location/Location/Loc.State)[1]'', ''nvarchar(100)'') AS [Edu.Loc.State]\r\n    ,[Education].ref.value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n        (Edu.Location/Location/Loc.City)[1]'', ''nvarchar(100)'') AS [Edu.Loc.City]\r\nFROM [HumanResources].[JobCandidate] jc \r\nCROSS APPLY jc.[Resume].nodes(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \r\n    /Resume/Education'') AS [Education](ref);\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'VIEW',N'vJobCandidateEducation', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Displays the content from each education related element in the xml column Resume in the HumanResources.JobCandidate table. The content has been localized into French, Simplified Chinese and Thai. Some data may not display correctly unless supplemental language support is installed.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'VIEW',@level1name=N'vJobCandidateEducation'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  View [Production].[vProductAndDescription]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[Production].[vProductAndDescription]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE VIEW [Production].[vProductAndDescription] \r\nWITH SCHEMABINDING \r\nAS \r\n-- View (indexed or standard) to display products and product descriptions by language.\r\nSELECT \r\n    p.[ProductID] \r\n    ,p.[Name] \r\n    ,pm.[Name] AS [ProductModel] \r\n    ,pmx.[CultureID] \r\n    ,pd.[Description] \r\nFROM [Production].[Product] p \r\n    INNER JOIN [Production].[ProductModel] pm \r\n    ON p.[ProductModelID] = pm.[ProductModelID] \r\n    INNER JOIN [Production].[ProductModelProductDescriptionCulture] pmx \r\n    ON pm.[ProductModelID] = pmx.[ProductModelID] \r\n    INNER JOIN [Production].[ProductDescription] pd \r\n    ON pmx.[ProductDescriptionID] = pd.[ProductDescriptionID];\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'VIEW',N'vProductAndDescription', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Product names and descriptions. Product descriptions are provided in multiple languages.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'VIEW',@level1name=N'vProductAndDescription'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  View [Production].[vProductModelCatalogDescription]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[Production].[vProductModelCatalogDescription]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE VIEW [Production].[vProductModelCatalogDescription] \r\nAS \r\nSELECT \r\n    [ProductModelID] \r\n    ,[Name] \r\n    ,[CatalogDescription].value(N''declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \r\n        declare namespace html=\"http://www.w3.org/1999/xhtml\"; \r\n        (/p1:ProductDescription/p1:Summary/html:p)[1]'', ''nvarchar(max)'') AS [Summary] \r\n    ,[CatalogDescription].value(N''declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \r\n        (/p1:ProductDescription/p1:Manufacturer/p1:Name)[1]'', ''nvarchar(max)'') AS [Manufacturer] \r\n    ,[CatalogDescription].value(N''declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \r\n        (/p1:ProductDescription/p1:Manufacturer/p1:Copyright)[1]'', ''nvarchar(30)'') AS [Copyright] \r\n    ,[CatalogDescription].value(N''declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \r\n        (/p1:ProductDescription/p1:Manufacturer/p1:ProductURL)[1]'', ''nvarchar(256)'') AS [ProductURL] \r\n    ,[CatalogDescription].value(N''declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \r\n        declare namespace wm=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain\"; \r\n        (/p1:ProductDescription/p1:Features/wm:Warranty/wm:WarrantyPeriod)[1]'', ''nvarchar(256)'') AS [WarrantyPeriod] \r\n    ,[CatalogDescription].value(N''declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \r\n        declare namespace wm=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain\"; \r\n        (/p1:ProductDescription/p1:Features/wm:Warranty/wm:Description)[1]'', ''nvarchar(256)'') AS [WarrantyDescription] \r\n    ,[CatalogDescription].value(N''declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \r\n        declare namespace wm=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain\"; \r\n        (/p1:ProductDescription/p1:Features/wm:Maintenance/wm:NoOfYears)[1]'', ''nvarchar(256)'') AS [NoOfYears] \r\n    ,[CatalogDescription].value(N''declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \r\n        declare namespace wm=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain\"; \r\n        (/p1:ProductDescription/p1:Features/wm:Maintenance/wm:Description)[1]'', ''nvarchar(256)'') AS [MaintenanceDescription] \r\n    ,[CatalogDescription].value(N''declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \r\n        declare namespace wf=\"http://www.adventure-works.com/schemas/OtherFeatures\"; \r\n        (/p1:ProductDescription/p1:Features/wf:wheel)[1]'', ''nvarchar(256)'') AS [Wheel] \r\n    ,[CatalogDescription].value(N''declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \r\n        declare namespace wf=\"http://www.adventure-works.com/schemas/OtherFeatures\"; \r\n        (/p1:ProductDescription/p1:Features/wf:saddle)[1]'', ''nvarchar(256)'') AS [Saddle] \r\n    ,[CatalogDescription].value(N''declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \r\n        declare namespace wf=\"http://www.adventure-works.com/schemas/OtherFeatures\"; \r\n        (/p1:ProductDescription/p1:Features/wf:pedal)[1]'', ''nvarchar(256)'') AS [Pedal] \r\n    ,[CatalogDescription].value(N''declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \r\n        declare namespace wf=\"http://www.adventure-works.com/schemas/OtherFeatures\"; \r\n        (/p1:ProductDescription/p1:Features/wf:BikeFrame)[1]'', ''nvarchar(max)'') AS [BikeFrame] \r\n    ,[CatalogDescription].value(N''declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \r\n        declare namespace wf=\"http://www.adventure-works.com/schemas/OtherFeatures\"; \r\n        (/p1:ProductDescription/p1:Features/wf:crankset)[1]'', ''nvarchar(256)'') AS [Crankset] \r\n    ,[CatalogDescription].value(N''declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \r\n        (/p1:ProductDescription/p1:Picture/p1:Angle)[1]'', ''nvarchar(256)'') AS [PictureAngle] \r\n    ,[CatalogDescription].value(N''declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \r\n        (/p1:ProductDescription/p1:Picture/p1:Size)[1]'', ''nvarchar(256)'') AS [PictureSize] \r\n    ,[CatalogDescription].value(N''declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \r\n        (/p1:ProductDescription/p1:Picture/p1:ProductPhotoID)[1]'', ''nvarchar(256)'') AS [ProductPhotoID] \r\n    ,[CatalogDescription].value(N''declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \r\n        (/p1:ProductDescription/p1:Specifications/Material)[1]'', ''nvarchar(256)'') AS [Material] \r\n    ,[CatalogDescription].value(N''declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \r\n        (/p1:ProductDescription/p1:Specifications/Color)[1]'', ''nvarchar(256)'') AS [Color] \r\n    ,[CatalogDescription].value(N''declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \r\n        (/p1:ProductDescription/p1:Specifications/ProductLine)[1]'', ''nvarchar(256)'') AS [ProductLine] \r\n    ,[CatalogDescription].value(N''declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \r\n        (/p1:ProductDescription/p1:Specifications/Style)[1]'', ''nvarchar(256)'') AS [Style] \r\n    ,[CatalogDescription].value(N''declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \r\n        (/p1:ProductDescription/p1:Specifications/RiderExperience)[1]'', ''nvarchar(1024)'') AS [RiderExperience] \r\n    ,[rowguid] \r\n    ,[ModifiedDate]\r\nFROM [Production].[ProductModel] \r\nWHERE [CatalogDescription] IS NOT NULL;\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'VIEW',N'vProductModelCatalogDescription', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Displays the content from each element in the xml column CatalogDescription for each product in the Production.ProductModel table that has catalog data.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'VIEW',@level1name=N'vProductModelCatalogDescription'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  View [Production].[vProductModelInstructions]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[Production].[vProductModelInstructions]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE VIEW [Production].[vProductModelInstructions] \r\nAS \r\nSELECT \r\n    [ProductModelID] \r\n    ,[Name] \r\n    ,[Instructions].value(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelManuInstructions\"; \r\n        (/root/text())[1]'', ''nvarchar(max)'') AS [Instructions] \r\n    ,[MfgInstructions].ref.value(''@LocationID[1]'', ''int'') AS [LocationID] \r\n    ,[MfgInstructions].ref.value(''@SetupHours[1]'', ''decimal(9, 4)'') AS [SetupHours] \r\n    ,[MfgInstructions].ref.value(''@MachineHours[1]'', ''decimal(9, 4)'') AS [MachineHours] \r\n    ,[MfgInstructions].ref.value(''@LaborHours[1]'', ''decimal(9, 4)'') AS [LaborHours] \r\n    ,[MfgInstructions].ref.value(''@LotSize[1]'', ''int'') AS [LotSize] \r\n    ,[Steps].ref.value(''string(.)[1]'', ''nvarchar(1024)'') AS [Step] \r\n    ,[rowguid] \r\n    ,[ModifiedDate]\r\nFROM [Production].[ProductModel] \r\nCROSS APPLY [Instructions].nodes(N''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelManuInstructions\"; \r\n    /root/Location'') MfgInstructions(ref)\r\nCROSS APPLY [MfgInstructions].ref.nodes(''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelManuInstructions\"; \r\n    step'') Steps(ref);\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'VIEW',N'vProductModelInstructions', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Displays the content from each element in the xml column Instructions for each product in the Production.ProductModel table that has manufacturing instructions.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'VIEW',@level1name=N'vProductModelInstructions'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  View [Sales].[vSalesPerson]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[Sales].[vSalesPerson]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE VIEW [Sales].[vSalesPerson] \r\nAS \r\nSELECT \r\n    s.[BusinessEntityID]\r\n    ,p.[Title]\r\n    ,p.[FirstName]\r\n    ,p.[MiddleName]\r\n    ,p.[LastName]\r\n    ,p.[Suffix]\r\n    ,e.[JobTitle]\r\n    ,pp.[PhoneNumber]\r\n\t,pnt.[Name] AS [PhoneNumberType]\r\n    ,ea.[EmailAddress]\r\n    ,p.[EmailPromotion]\r\n    ,a.[AddressLine1]\r\n    ,a.[AddressLine2]\r\n    ,a.[City]\r\n    ,[StateProvinceName] = sp.[Name]\r\n    ,a.[PostalCode]\r\n    ,[CountryRegionName] = cr.[Name]\r\n    ,[TerritoryName] = st.[Name]\r\n    ,[TerritoryGroup] = st.[Group]\r\n    ,s.[SalesQuota]\r\n    ,s.[SalesYTD]\r\n    ,s.[SalesLastYear]\r\nFROM [Sales].[SalesPerson] s\r\n    INNER JOIN [HumanResources].[Employee] e \r\n    ON e.[BusinessEntityID] = s.[BusinessEntityID]\r\n\tINNER JOIN [Person].[Person] p\r\n\tON p.[BusinessEntityID] = s.[BusinessEntityID]\r\n    INNER JOIN [Person].[BusinessEntityAddress] bea \r\n    ON bea.[BusinessEntityID] = s.[BusinessEntityID] \r\n    INNER JOIN [Person].[Address] a \r\n    ON a.[AddressID] = bea.[AddressID]\r\n    INNER JOIN [Person].[StateProvince] sp \r\n    ON sp.[StateProvinceID] = a.[StateProvinceID]\r\n    INNER JOIN [Person].[CountryRegion] cr \r\n    ON cr.[CountryRegionCode] = sp.[CountryRegionCode]\r\n    LEFT OUTER JOIN [Sales].[SalesTerritory] st \r\n    ON st.[TerritoryID] = s.[TerritoryID]\r\n\tLEFT OUTER JOIN [Person].[EmailAddress] ea\r\n\tON ea.[BusinessEntityID] = p.[BusinessEntityID]\r\n\tLEFT OUTER JOIN [Person].[PersonPhone] pp\r\n\tON pp.[BusinessEntityID] = p.[BusinessEntityID]\r\n\tLEFT OUTER JOIN [Person].[PhoneNumberType] pnt\r\n\tON pnt.[PhoneNumberTypeID] = pp.[PhoneNumberTypeID];\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'VIEW',N'vSalesPerson', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Sales representiatives (names and addresses) and their sales-related information.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'VIEW',@level1name=N'vSalesPerson'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  View [Sales].[vSalesPersonSalesByFiscalYears]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[Sales].[vSalesPersonSalesByFiscalYears]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE VIEW [Sales].[vSalesPersonSalesByFiscalYears] \r\nAS \r\nSELECT \r\n    pvt.[SalesPersonID]\r\n    ,pvt.[FullName]\r\n    ,pvt.[JobTitle]\r\n    ,pvt.[SalesTerritory]\r\n    ,pvt.[2002]\r\n    ,pvt.[2003]\r\n    ,pvt.[2004] \r\nFROM (SELECT \r\n        soh.[SalesPersonID]\r\n        ,p.[FirstName] + '' '' + COALESCE(p.[MiddleName], '''') + '' '' + p.[LastName] AS [FullName]\r\n        ,e.[JobTitle]\r\n        ,st.[Name] AS [SalesTerritory]\r\n        ,soh.[SubTotal]\r\n        ,YEAR(DATEADD(m, 6, soh.[OrderDate])) AS [FiscalYear] \r\n    FROM [Sales].[SalesPerson] sp \r\n        INNER JOIN [Sales].[SalesOrderHeader] soh \r\n        ON sp.[BusinessEntityID] = soh.[SalesPersonID]\r\n        INNER JOIN [Sales].[SalesTerritory] st \r\n        ON sp.[TerritoryID] = st.[TerritoryID] \r\n        INNER JOIN [HumanResources].[Employee] e \r\n        ON soh.[SalesPersonID] = e.[BusinessEntityID] \r\n\t\tINNER JOIN [Person].[Person] p\r\n\t\tON p.[BusinessEntityID] = sp.[BusinessEntityID]\r\n\t ) AS soh \r\nPIVOT \r\n(\r\n    SUM([SubTotal]) \r\n    FOR [FiscalYear] \r\n    IN ([2002], [2003], [2004])\r\n) AS pvt;\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'VIEW',N'vSalesPersonSalesByFiscalYears', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Uses PIVOT to return aggregated sales information for each sales representative.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'VIEW',@level1name=N'vSalesPersonSalesByFiscalYears'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  View [Person].[vStateProvinceCountryRegion]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[Person].[vStateProvinceCountryRegion]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE VIEW [Person].[vStateProvinceCountryRegion] \r\nWITH SCHEMABINDING \r\nAS \r\nSELECT \r\n    sp.[StateProvinceID] \r\n    ,sp.[StateProvinceCode] \r\n    ,sp.[IsOnlyStateProvinceFlag] \r\n    ,sp.[Name] AS [StateProvinceName] \r\n    ,sp.[TerritoryID] \r\n    ,cr.[CountryRegionCode] \r\n    ,cr.[Name] AS [CountryRegionName]\r\nFROM [Person].[StateProvince] sp \r\n    INNER JOIN [Person].[CountryRegion] cr \r\n    ON sp.[CountryRegionCode] = cr.[CountryRegionCode];\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'VIEW',N'vStateProvinceCountryRegion', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Joins StateProvince table with CountryRegion table.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'VIEW',@level1name=N'vStateProvinceCountryRegion'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Object:  View [Sales].[vStoreWithDemographics]    Script Date: 9/26/2023 12:10:01 PM ******/\r\nSET ANSI_NULLS ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET QUOTED_IDENTIFIER ON",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[Sales].[vStoreWithDemographics]'))\r\nEXEC dbo.sp_executesql @statement = N'\r\nCREATE VIEW [Sales].[vStoreWithDemographics] AS \r\nSELECT \r\n    s.[BusinessEntityID] \r\n    ,s.[Name] \r\n    ,s.[Demographics].value(''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey\"; \r\n        (/StoreSurvey/AnnualSales)[1]'', ''money'') AS [AnnualSales] \r\n    ,s.[Demographics].value(''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey\"; \r\n        (/StoreSurvey/AnnualRevenue)[1]'', ''money'') AS [AnnualRevenue] \r\n    ,s.[Demographics].value(''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey\"; \r\n        (/StoreSurvey/BankName)[1]'', ''nvarchar(50)'') AS [BankName] \r\n    ,s.[Demographics].value(''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey\"; \r\n        (/StoreSurvey/BusinessType)[1]'', ''nvarchar(5)'') AS [BusinessType] \r\n    ,s.[Demographics].value(''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey\"; \r\n        (/StoreSurvey/YearOpened)[1]'', ''integer'') AS [YearOpened] \r\n    ,s.[Demographics].value(''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey\"; \r\n        (/StoreSurvey/Specialty)[1]'', ''nvarchar(50)'') AS [Specialty] \r\n    ,s.[Demographics].value(''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey\"; \r\n        (/StoreSurvey/SquareFeet)[1]'', ''integer'') AS [SquareFeet] \r\n    ,s.[Demographics].value(''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey\"; \r\n        (/StoreSurvey/Brands)[1]'', ''nvarchar(30)'') AS [Brands] \r\n    ,s.[Demographics].value(''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey\"; \r\n        (/StoreSurvey/Internet)[1]'', ''nvarchar(30)'') AS [Internet] \r\n    ,s.[Demographics].value(''declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey\"; \r\n        (/StoreSurvey/NumberEmployees)[1]'', ''integer'') AS [NumberEmployees] \r\nFROM [Sales].[Store] s;\r\n'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'VIEW',N'vStoreWithDemographics', NULL,NULL))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Stores (including demographics) that sell Adventure Works Cycles products to consumers.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'VIEW',@level1name=N'vStoreWithDemographics'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'DatabaseLog', N'CONSTRAINT',N'PK_DatabaseLog_DatabaseLogID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (nonclustered) constraint' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'DatabaseLog', @level2type=N'CONSTRAINT',@level2name=N'PK_DatabaseLog_DatabaseLogID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductCategory', N'CONSTRAINT',N'DF_ProductCategory_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCategory', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductCategory_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductCategory', N'CONSTRAINT',N'DF_ProductCategory_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCategory', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductCategory_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductCategory', N'CONSTRAINT',N'PK_ProductCategory_ProductCategoryID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCategory', @level2type=N'CONSTRAINT',@level2name=N'PK_ProductCategory_ProductCategoryID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductSubcategory_ProductCategory_ProductCategoryID]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductSubcategory]'))\r\nALTER TABLE [Production].[ProductSubcategory]  WITH CHECK ADD  CONSTRAINT [FK_ProductSubcategory_ProductCategory_ProductCategoryID] FOREIGN KEY([ProductCategoryID])\r\nREFERENCES [Production].[ProductCategory] ([ProductCategoryID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductSubcategory_ProductCategory_ProductCategoryID]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductSubcategory]'))\r\nALTER TABLE [Production].[ProductSubcategory] CHECK CONSTRAINT [FK_ProductSubcategory_ProductCategory_ProductCategoryID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductSubcategory', N'CONSTRAINT',N'DF_ProductSubcategory_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductSubcategory', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductSubcategory_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductSubcategory', N'CONSTRAINT',N'DF_ProductSubcategory_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductSubcategory', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductSubcategory_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductSubcategory', N'CONSTRAINT',N'PK_ProductSubcategory_ProductSubcategoryID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductSubcategory', @level2type=N'CONSTRAINT',@level2name=N'PK_ProductSubcategory_ProductSubcategoryID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductSubcategory', N'CONSTRAINT',N'FK_ProductSubcategory_ProductCategory_ProductCategoryID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing ProductCategory.ProductCategoryID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductSubcategory', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductSubcategory_ProductCategory_ProductCategoryID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModel', N'CONSTRAINT',N'DF_ProductModel_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModel', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductModel_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModel', N'CONSTRAINT',N'DF_ProductModel_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModel', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductModel_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModel', N'CONSTRAINT',N'PK_ProductModel_ProductModelID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModel', @level2type=N'CONSTRAINT',@level2name=N'PK_ProductModel_ProductModelID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'UnitMeasure', N'CONSTRAINT',N'DF_UnitMeasure_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'UnitMeasure', @level2type=N'CONSTRAINT',@level2name=N'DF_UnitMeasure_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'UnitMeasure', N'CONSTRAINT',N'PK_UnitMeasure_UnitMeasureCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'UnitMeasure', @level2type=N'CONSTRAINT',@level2name=N'PK_UnitMeasure_UnitMeasureCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_Product_ProductModel_ProductModelID]') AND parent_object_id = OBJECT_ID(N'[Production].[Product]'))\r\nALTER TABLE [Production].[Product]  WITH CHECK ADD  CONSTRAINT [FK_Product_ProductModel_ProductModelID] FOREIGN KEY([ProductModelID])\r\nREFERENCES [Production].[ProductModel] ([ProductModelID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_Product_ProductModel_ProductModelID]') AND parent_object_id = OBJECT_ID(N'[Production].[Product]'))\r\nALTER TABLE [Production].[Product] CHECK CONSTRAINT [FK_Product_ProductModel_ProductModelID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_Product_ProductSubcategory_ProductSubcategoryID]') AND parent_object_id = OBJECT_ID(N'[Production].[Product]'))\r\nALTER TABLE [Production].[Product]  WITH CHECK ADD  CONSTRAINT [FK_Product_ProductSubcategory_ProductSubcategoryID] FOREIGN KEY([ProductSubcategoryID])\r\nREFERENCES [Production].[ProductSubcategory] ([ProductSubcategoryID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_Product_ProductSubcategory_ProductSubcategoryID]') AND parent_object_id = OBJECT_ID(N'[Production].[Product]'))\r\nALTER TABLE [Production].[Product] CHECK CONSTRAINT [FK_Product_ProductSubcategory_ProductSubcategoryID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_Product_UnitMeasure_SizeUnitMeasureCode]') AND parent_object_id = OBJECT_ID(N'[Production].[Product]'))\r\nALTER TABLE [Production].[Product]  WITH CHECK ADD  CONSTRAINT [FK_Product_UnitMeasure_SizeUnitMeasureCode] FOREIGN KEY([SizeUnitMeasureCode])\r\nREFERENCES [Production].[UnitMeasure] ([UnitMeasureCode])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_Product_UnitMeasure_SizeUnitMeasureCode]') AND parent_object_id = OBJECT_ID(N'[Production].[Product]'))\r\nALTER TABLE [Production].[Product] CHECK CONSTRAINT [FK_Product_UnitMeasure_SizeUnitMeasureCode]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_Product_UnitMeasure_WeightUnitMeasureCode]') AND parent_object_id = OBJECT_ID(N'[Production].[Product]'))\r\nALTER TABLE [Production].[Product]  WITH CHECK ADD  CONSTRAINT [FK_Product_UnitMeasure_WeightUnitMeasureCode] FOREIGN KEY([WeightUnitMeasureCode])\r\nREFERENCES [Production].[UnitMeasure] ([UnitMeasureCode])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_Product_UnitMeasure_WeightUnitMeasureCode]') AND parent_object_id = OBJECT_ID(N'[Production].[Product]'))\r\nALTER TABLE [Production].[Product] CHECK CONSTRAINT [FK_Product_UnitMeasure_WeightUnitMeasureCode]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_Product_Class]') AND parent_object_id = OBJECT_ID(N'[Production].[Product]'))\r\nALTER TABLE [Production].[Product]  WITH CHECK ADD  CONSTRAINT [CK_Product_Class] CHECK  ((upper([Class])='H' OR upper([Class])='M' OR upper([Class])='L' OR [Class] IS NULL))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_Product_Class]') AND parent_object_id = OBJECT_ID(N'[Production].[Product]'))\r\nALTER TABLE [Production].[Product] CHECK CONSTRAINT [CK_Product_Class]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_Product_DaysToManufacture]') AND parent_object_id = OBJECT_ID(N'[Production].[Product]'))\r\nALTER TABLE [Production].[Product]  WITH CHECK ADD  CONSTRAINT [CK_Product_DaysToManufacture] CHECK  (([DaysToManufacture]>=(0)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_Product_DaysToManufacture]') AND parent_object_id = OBJECT_ID(N'[Production].[Product]'))\r\nALTER TABLE [Production].[Product] CHECK CONSTRAINT [CK_Product_DaysToManufacture]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_Product_ListPrice]') AND parent_object_id = OBJECT_ID(N'[Production].[Product]'))\r\nALTER TABLE [Production].[Product]  WITH CHECK ADD  CONSTRAINT [CK_Product_ListPrice] CHECK  (([ListPrice]>=(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_Product_ListPrice]') AND parent_object_id = OBJECT_ID(N'[Production].[Product]'))\r\nALTER TABLE [Production].[Product] CHECK CONSTRAINT [CK_Product_ListPrice]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_Product_ProductLine]') AND parent_object_id = OBJECT_ID(N'[Production].[Product]'))\r\nALTER TABLE [Production].[Product]  WITH CHECK ADD  CONSTRAINT [CK_Product_ProductLine] CHECK  ((upper([ProductLine])='R' OR upper([ProductLine])='M' OR upper([ProductLine])='T' OR upper([ProductLine])='S' OR [ProductLine] IS NULL))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_Product_ProductLine]') AND parent_object_id = OBJECT_ID(N'[Production].[Product]'))\r\nALTER TABLE [Production].[Product] CHECK CONSTRAINT [CK_Product_ProductLine]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_Product_ReorderPoint]') AND parent_object_id = OBJECT_ID(N'[Production].[Product]'))\r\nALTER TABLE [Production].[Product]  WITH CHECK ADD  CONSTRAINT [CK_Product_ReorderPoint] CHECK  (([ReorderPoint]>(0)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_Product_ReorderPoint]') AND parent_object_id = OBJECT_ID(N'[Production].[Product]'))\r\nALTER TABLE [Production].[Product] CHECK CONSTRAINT [CK_Product_ReorderPoint]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_Product_SafetyStockLevel]') AND parent_object_id = OBJECT_ID(N'[Production].[Product]'))\r\nALTER TABLE [Production].[Product]  WITH CHECK ADD  CONSTRAINT [CK_Product_SafetyStockLevel] CHECK  (([SafetyStockLevel]>(0)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_Product_SafetyStockLevel]') AND parent_object_id = OBJECT_ID(N'[Production].[Product]'))\r\nALTER TABLE [Production].[Product] CHECK CONSTRAINT [CK_Product_SafetyStockLevel]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_Product_SellEndDate]') AND parent_object_id = OBJECT_ID(N'[Production].[Product]'))\r\nALTER TABLE [Production].[Product]  WITH CHECK ADD  CONSTRAINT [CK_Product_SellEndDate] CHECK  (([SellEndDate]>=[SellStartDate] OR [SellEndDate] IS NULL))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_Product_SellEndDate]') AND parent_object_id = OBJECT_ID(N'[Production].[Product]'))\r\nALTER TABLE [Production].[Product] CHECK CONSTRAINT [CK_Product_SellEndDate]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_Product_StandardCost]') AND parent_object_id = OBJECT_ID(N'[Production].[Product]'))\r\nALTER TABLE [Production].[Product]  WITH CHECK ADD  CONSTRAINT [CK_Product_StandardCost] CHECK  (([StandardCost]>=(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_Product_StandardCost]') AND parent_object_id = OBJECT_ID(N'[Production].[Product]'))\r\nALTER TABLE [Production].[Product] CHECK CONSTRAINT [CK_Product_StandardCost]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_Product_Style]') AND parent_object_id = OBJECT_ID(N'[Production].[Product]'))\r\nALTER TABLE [Production].[Product]  WITH CHECK ADD  CONSTRAINT [CK_Product_Style] CHECK  ((upper([Style])='U' OR upper([Style])='M' OR upper([Style])='W' OR [Style] IS NULL))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_Product_Style]') AND parent_object_id = OBJECT_ID(N'[Production].[Product]'))\r\nALTER TABLE [Production].[Product] CHECK CONSTRAINT [CK_Product_Style]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_Product_Weight]') AND parent_object_id = OBJECT_ID(N'[Production].[Product]'))\r\nALTER TABLE [Production].[Product]  WITH CHECK ADD  CONSTRAINT [CK_Product_Weight] CHECK  (([Weight]>(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_Product_Weight]') AND parent_object_id = OBJECT_ID(N'[Production].[Product]'))\r\nALTER TABLE [Production].[Product] CHECK CONSTRAINT [CK_Product_Weight]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'CONSTRAINT',N'DF_Product_MakeFlag'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of  1' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'DF_Product_MakeFlag'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'CONSTRAINT',N'DF_Product_FinishedGoodsFlag'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of  1' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'DF_Product_FinishedGoodsFlag'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'CONSTRAINT',N'DF_Product_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'DF_Product_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'CONSTRAINT',N'DF_Product_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'DF_Product_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'CONSTRAINT',N'PK_Product_ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'PK_Product_ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'CONSTRAINT',N'FK_Product_ProductModel_ProductModelID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing ProductModel.ProductModelID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'FK_Product_ProductModel_ProductModelID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'CONSTRAINT',N'FK_Product_ProductSubcategory_ProductSubcategoryID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing ProductSubcategory.ProductSubcategoryID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'FK_Product_ProductSubcategory_ProductSubcategoryID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'CONSTRAINT',N'FK_Product_UnitMeasure_SizeUnitMeasureCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing UnitMeasure.UnitMeasureCode.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'FK_Product_UnitMeasure_SizeUnitMeasureCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'CONSTRAINT',N'FK_Product_UnitMeasure_WeightUnitMeasureCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing UnitMeasure.UnitMeasureCode.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'FK_Product_UnitMeasure_WeightUnitMeasureCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'CONSTRAINT',N'CK_Product_Class'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Class]=''h'' OR [Class]=''m'' OR [Class]=''l'' OR [Class]=''H'' OR [Class]=''M'' OR [Class]=''L'' OR [Class] IS NULL' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'CK_Product_Class'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'CONSTRAINT',N'CK_Product_DaysToManufacture'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [DaysToManufacture] >= (0)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'CK_Product_DaysToManufacture'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'CONSTRAINT',N'CK_Product_ListPrice'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ListPrice] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'CK_Product_ListPrice'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'CONSTRAINT',N'CK_Product_ProductLine'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ProductLine]=''r'' OR [ProductLine]=''m'' OR [ProductLine]=''t'' OR [ProductLine]=''s'' OR [ProductLine]=''R'' OR [ProductLine]=''M'' OR [ProductLine]=''T'' OR [ProductLine]=''S'' OR [ProductLine] IS NULL' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'CK_Product_ProductLine'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'CONSTRAINT',N'CK_Product_ReorderPoint'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ReorderPoint] > (0)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'CK_Product_ReorderPoint'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'CONSTRAINT',N'CK_Product_SafetyStockLevel'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [SafetyStockLevel] > (0)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'CK_Product_SafetyStockLevel'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'CONSTRAINT',N'CK_Product_SellEndDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [SellEndDate] >= [SellStartDate] OR [SellEndDate] IS NULL' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'CK_Product_SellEndDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'CONSTRAINT',N'CK_Product_StandardCost'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [SafetyStockLevel] > (0)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'CK_Product_StandardCost'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'CONSTRAINT',N'CK_Product_Style'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Style]=''u'' OR [Style]=''m'' OR [Style]=''w'' OR [Style]=''U'' OR [Style]=''M'' OR [Style]=''W'' OR [Style] IS NULL' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'CK_Product_Style'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Product', N'CONSTRAINT',N'CK_Product_Weight'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Weight] > (0.00)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Product', @level2type=N'CONSTRAINT',@level2name=N'CK_Product_Weight'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_BillOfMaterials_Product_ComponentID]') AND parent_object_id = OBJECT_ID(N'[Production].[BillOfMaterials]'))\r\nALTER TABLE [Production].[BillOfMaterials]  WITH CHECK ADD  CONSTRAINT [FK_BillOfMaterials_Product_ComponentID] FOREIGN KEY([ComponentID])\r\nREFERENCES [Production].[Product] ([ProductID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_BillOfMaterials_Product_ComponentID]') AND parent_object_id = OBJECT_ID(N'[Production].[BillOfMaterials]'))\r\nALTER TABLE [Production].[BillOfMaterials] CHECK CONSTRAINT [FK_BillOfMaterials_Product_ComponentID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_BillOfMaterials_Product_ProductAssemblyID]') AND parent_object_id = OBJECT_ID(N'[Production].[BillOfMaterials]'))\r\nALTER TABLE [Production].[BillOfMaterials]  WITH CHECK ADD  CONSTRAINT [FK_BillOfMaterials_Product_ProductAssemblyID] FOREIGN KEY([ProductAssemblyID])\r\nREFERENCES [Production].[Product] ([ProductID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_BillOfMaterials_Product_ProductAssemblyID]') AND parent_object_id = OBJECT_ID(N'[Production].[BillOfMaterials]'))\r\nALTER TABLE [Production].[BillOfMaterials] CHECK CONSTRAINT [FK_BillOfMaterials_Product_ProductAssemblyID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_BillOfMaterials_UnitMeasure_UnitMeasureCode]') AND parent_object_id = OBJECT_ID(N'[Production].[BillOfMaterials]'))\r\nALTER TABLE [Production].[BillOfMaterials]  WITH CHECK ADD  CONSTRAINT [FK_BillOfMaterials_UnitMeasure_UnitMeasureCode] FOREIGN KEY([UnitMeasureCode])\r\nREFERENCES [Production].[UnitMeasure] ([UnitMeasureCode])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_BillOfMaterials_UnitMeasure_UnitMeasureCode]') AND parent_object_id = OBJECT_ID(N'[Production].[BillOfMaterials]'))\r\nALTER TABLE [Production].[BillOfMaterials] CHECK CONSTRAINT [FK_BillOfMaterials_UnitMeasure_UnitMeasureCode]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_BillOfMaterials_BOMLevel]') AND parent_object_id = OBJECT_ID(N'[Production].[BillOfMaterials]'))\r\nALTER TABLE [Production].[BillOfMaterials]  WITH CHECK ADD  CONSTRAINT [CK_BillOfMaterials_BOMLevel] CHECK  (([ProductAssemblyID] IS NULL AND [BOMLevel]=(0) AND [PerAssemblyQty]=(1.00) OR [ProductAssemblyID] IS NOT NULL AND [BOMLevel]>=(1)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_BillOfMaterials_BOMLevel]') AND parent_object_id = OBJECT_ID(N'[Production].[BillOfMaterials]'))\r\nALTER TABLE [Production].[BillOfMaterials] CHECK CONSTRAINT [CK_BillOfMaterials_BOMLevel]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_BillOfMaterials_EndDate]') AND parent_object_id = OBJECT_ID(N'[Production].[BillOfMaterials]'))\r\nALTER TABLE [Production].[BillOfMaterials]  WITH CHECK ADD  CONSTRAINT [CK_BillOfMaterials_EndDate] CHECK  (([EndDate]>[StartDate] OR [EndDate] IS NULL))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_BillOfMaterials_EndDate]') AND parent_object_id = OBJECT_ID(N'[Production].[BillOfMaterials]'))\r\nALTER TABLE [Production].[BillOfMaterials] CHECK CONSTRAINT [CK_BillOfMaterials_EndDate]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_BillOfMaterials_PerAssemblyQty]') AND parent_object_id = OBJECT_ID(N'[Production].[BillOfMaterials]'))\r\nALTER TABLE [Production].[BillOfMaterials]  WITH CHECK ADD  CONSTRAINT [CK_BillOfMaterials_PerAssemblyQty] CHECK  (([PerAssemblyQty]>=(1.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_BillOfMaterials_PerAssemblyQty]') AND parent_object_id = OBJECT_ID(N'[Production].[BillOfMaterials]'))\r\nALTER TABLE [Production].[BillOfMaterials] CHECK CONSTRAINT [CK_BillOfMaterials_PerAssemblyQty]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_BillOfMaterials_ProductAssemblyID]') AND parent_object_id = OBJECT_ID(N'[Production].[BillOfMaterials]'))\r\nALTER TABLE [Production].[BillOfMaterials]  WITH CHECK ADD  CONSTRAINT [CK_BillOfMaterials_ProductAssemblyID] CHECK  (([ProductAssemblyID]<>[ComponentID]))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_BillOfMaterials_ProductAssemblyID]') AND parent_object_id = OBJECT_ID(N'[Production].[BillOfMaterials]'))\r\nALTER TABLE [Production].[BillOfMaterials] CHECK CONSTRAINT [CK_BillOfMaterials_ProductAssemblyID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'BillOfMaterials', N'CONSTRAINT',N'DF_BillOfMaterials_StartDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'CONSTRAINT',@level2name=N'DF_BillOfMaterials_StartDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'BillOfMaterials', N'CONSTRAINT',N'DF_BillOfMaterials_PerAssemblyQty'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 1.0' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'CONSTRAINT',@level2name=N'DF_BillOfMaterials_PerAssemblyQty'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'BillOfMaterials', N'CONSTRAINT',N'DF_BillOfMaterials_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'CONSTRAINT',@level2name=N'DF_BillOfMaterials_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'BillOfMaterials', N'CONSTRAINT',N'PK_BillOfMaterials_BillOfMaterialsID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'CONSTRAINT',@level2name=N'PK_BillOfMaterials_BillOfMaterialsID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'BillOfMaterials', N'CONSTRAINT',N'FK_BillOfMaterials_Product_ComponentID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Product.ComponentID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'CONSTRAINT',@level2name=N'FK_BillOfMaterials_Product_ComponentID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'BillOfMaterials', N'CONSTRAINT',N'FK_BillOfMaterials_Product_ProductAssemblyID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Product.ProductAssemblyID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'CONSTRAINT',@level2name=N'FK_BillOfMaterials_Product_ProductAssemblyID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'BillOfMaterials', N'CONSTRAINT',N'FK_BillOfMaterials_UnitMeasure_UnitMeasureCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing UnitMeasure.UnitMeasureCode.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'CONSTRAINT',@level2name=N'FK_BillOfMaterials_UnitMeasure_UnitMeasureCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'BillOfMaterials', N'CONSTRAINT',N'CK_BillOfMaterials_BOMLevel'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ProductAssemblyID] IS NULL AND [BOMLevel] = (0) AND [PerAssemblyQty] = (1) OR [ProductAssemblyID] IS NOT NULL AND [BOMLevel] >= (1)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'CONSTRAINT',@level2name=N'CK_BillOfMaterials_BOMLevel'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'BillOfMaterials', N'CONSTRAINT',N'CK_BillOfMaterials_EndDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint EndDate] > [StartDate] OR [EndDate] IS NULL' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'CONSTRAINT',@level2name=N'CK_BillOfMaterials_EndDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'BillOfMaterials', N'CONSTRAINT',N'CK_BillOfMaterials_PerAssemblyQty'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [PerAssemblyQty] >= (1.00)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'CONSTRAINT',@level2name=N'CK_BillOfMaterials_PerAssemblyQty'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'BillOfMaterials', N'CONSTRAINT',N'CK_BillOfMaterials_ProductAssemblyID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ProductAssemblyID] <> [ComponentID]' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'BillOfMaterials', @level2type=N'CONSTRAINT',@level2name=N'CK_BillOfMaterials_ProductAssemblyID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntity', N'CONSTRAINT',N'DF_BusinessEntity_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntity', @level2type=N'CONSTRAINT',@level2name=N'DF_BusinessEntity_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntity', N'CONSTRAINT',N'DF_BusinessEntity_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntity', @level2type=N'CONSTRAINT',@level2name=N'DF_BusinessEntity_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntity', N'CONSTRAINT',N'PK_BusinessEntity_BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntity', @level2type=N'CONSTRAINT',@level2name=N'PK_BusinessEntity_BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Person].[FK_Person_BusinessEntity_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[Person].[Person]'))\r\nALTER TABLE [Person].[Person]  WITH CHECK ADD  CONSTRAINT [FK_Person_BusinessEntity_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\r\nREFERENCES [Person].[BusinessEntity] ([BusinessEntityID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Person].[FK_Person_BusinessEntity_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[Person].[Person]'))\r\nALTER TABLE [Person].[Person] CHECK CONSTRAINT [FK_Person_BusinessEntity_BusinessEntityID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Person].[CK_Person_EmailPromotion]') AND parent_object_id = OBJECT_ID(N'[Person].[Person]'))\r\nALTER TABLE [Person].[Person]  WITH CHECK ADD  CONSTRAINT [CK_Person_EmailPromotion] CHECK  (([EmailPromotion]>=(0) AND [EmailPromotion]<=(2)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Person].[CK_Person_EmailPromotion]') AND parent_object_id = OBJECT_ID(N'[Person].[Person]'))\r\nALTER TABLE [Person].[Person] CHECK CONSTRAINT [CK_Person_EmailPromotion]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Person].[CK_Person_PersonType]') AND parent_object_id = OBJECT_ID(N'[Person].[Person]'))\r\nALTER TABLE [Person].[Person]  WITH CHECK ADD  CONSTRAINT [CK_Person_PersonType] CHECK  (([PersonType] IS NULL OR (upper([PersonType])='GC' OR upper([PersonType])='SP' OR upper([PersonType])='EM' OR upper([PersonType])='IN' OR upper([PersonType])='VC' OR upper([PersonType])='SC')))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Person].[CK_Person_PersonType]') AND parent_object_id = OBJECT_ID(N'[Person].[Person]'))\r\nALTER TABLE [Person].[Person] CHECK CONSTRAINT [CK_Person_PersonType]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Person', N'CONSTRAINT',N'DF_Person_NameStyle'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'CONSTRAINT',@level2name=N'DF_Person_NameStyle'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Person', N'CONSTRAINT',N'DF_Person_EmailPromotion'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'CONSTRAINT',@level2name=N'DF_Person_EmailPromotion'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Person', N'CONSTRAINT',N'DF_Person_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'CONSTRAINT',@level2name=N'DF_Person_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Person', N'CONSTRAINT',N'DF_Person_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'CONSTRAINT',@level2name=N'DF_Person_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Person', N'CONSTRAINT',N'PK_Person_BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'CONSTRAINT',@level2name=N'PK_Person_BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Person', N'CONSTRAINT',N'FK_Person_BusinessEntity_BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing BusinessEntity.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'CONSTRAINT',@level2name=N'FK_Person_BusinessEntity_BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Person', N'CONSTRAINT',N'CK_Person_EmailPromotion'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [EmailPromotion] >= (0) AND [EmailPromotion] <= (2)' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'CONSTRAINT',@level2name=N'CK_Person_EmailPromotion'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Person', N'CONSTRAINT',N'CK_Person_PersonType'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [PersonType] is one of SC, VC, IN, EM or SP.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Person', @level2type=N'CONSTRAINT',@level2name=N'CK_Person_PersonType'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[HumanResources].[FK_Employee_Person_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[Employee]'))\r\nALTER TABLE [HumanResources].[Employee]  WITH CHECK ADD  CONSTRAINT [FK_Employee_Person_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\r\nREFERENCES [Person].[Person] ([BusinessEntityID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[HumanResources].[FK_Employee_Person_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[Employee]'))\r\nALTER TABLE [HumanResources].[Employee] CHECK CONSTRAINT [FK_Employee_Person_BusinessEntityID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[HumanResources].[CK_Employee_BirthDate]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[Employee]'))\r\nALTER TABLE [HumanResources].[Employee]  WITH CHECK ADD  CONSTRAINT [CK_Employee_BirthDate] CHECK  (([BirthDate]>='1930-01-01' AND [BirthDate]<=dateadd(year,(-18),getdate())))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[HumanResources].[CK_Employee_BirthDate]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[Employee]'))\r\nALTER TABLE [HumanResources].[Employee] CHECK CONSTRAINT [CK_Employee_BirthDate]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[HumanResources].[CK_Employee_Gender]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[Employee]'))\r\nALTER TABLE [HumanResources].[Employee]  WITH CHECK ADD  CONSTRAINT [CK_Employee_Gender] CHECK  ((upper([Gender])='F' OR upper([Gender])='M'))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[HumanResources].[CK_Employee_Gender]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[Employee]'))\r\nALTER TABLE [HumanResources].[Employee] CHECK CONSTRAINT [CK_Employee_Gender]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[HumanResources].[CK_Employee_HireDate]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[Employee]'))\r\nALTER TABLE [HumanResources].[Employee]  WITH CHECK ADD  CONSTRAINT [CK_Employee_HireDate] CHECK  (([HireDate]>='1996-07-01' AND [HireDate]<=dateadd(day,(1),getdate())))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[HumanResources].[CK_Employee_HireDate]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[Employee]'))\r\nALTER TABLE [HumanResources].[Employee] CHECK CONSTRAINT [CK_Employee_HireDate]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[HumanResources].[CK_Employee_MaritalStatus]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[Employee]'))\r\nALTER TABLE [HumanResources].[Employee]  WITH CHECK ADD  CONSTRAINT [CK_Employee_MaritalStatus] CHECK  ((upper([MaritalStatus])='S' OR upper([MaritalStatus])='M'))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[HumanResources].[CK_Employee_MaritalStatus]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[Employee]'))\r\nALTER TABLE [HumanResources].[Employee] CHECK CONSTRAINT [CK_Employee_MaritalStatus]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[HumanResources].[CK_Employee_SickLeaveHours]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[Employee]'))\r\nALTER TABLE [HumanResources].[Employee]  WITH CHECK ADD  CONSTRAINT [CK_Employee_SickLeaveHours] CHECK  (([SickLeaveHours]>=(0) AND [SickLeaveHours]<=(120)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[HumanResources].[CK_Employee_SickLeaveHours]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[Employee]'))\r\nALTER TABLE [HumanResources].[Employee] CHECK CONSTRAINT [CK_Employee_SickLeaveHours]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[HumanResources].[CK_Employee_VacationHours]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[Employee]'))\r\nALTER TABLE [HumanResources].[Employee]  WITH CHECK ADD  CONSTRAINT [CK_Employee_VacationHours] CHECK  (([VacationHours]>=(-40) AND [VacationHours]<=(240)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[HumanResources].[CK_Employee_VacationHours]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[Employee]'))\r\nALTER TABLE [HumanResources].[Employee] CHECK CONSTRAINT [CK_Employee_VacationHours]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'CONSTRAINT',N'DF_Employee_SalariedFlag'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 1 (TRUE)' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'CONSTRAINT',@level2name=N'DF_Employee_SalariedFlag'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'CONSTRAINT',N'DF_Employee_VacationHours'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'CONSTRAINT',@level2name=N'DF_Employee_VacationHours'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'CONSTRAINT',N'DF_Employee_SickLeaveHours'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'CONSTRAINT',@level2name=N'DF_Employee_SickLeaveHours'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'CONSTRAINT',N'DF_Employee_CurrentFlag'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 1' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'CONSTRAINT',@level2name=N'DF_Employee_CurrentFlag'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'CONSTRAINT',N'DF_Employee_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'CONSTRAINT',@level2name=N'DF_Employee_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'CONSTRAINT',N'DF_Employee_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'CONSTRAINT',@level2name=N'DF_Employee_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'CONSTRAINT',N'PK_Employee_BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'CONSTRAINT',@level2name=N'PK_Employee_BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'CONSTRAINT',N'FK_Employee_Person_BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Person.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'CONSTRAINT',@level2name=N'FK_Employee_Person_BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'CONSTRAINT',N'CK_Employee_BirthDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [BirthDate] >= ''1930-01-01'' AND [BirthDate] <= dateadd(year,(-18),GETDATE())' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'CONSTRAINT',@level2name=N'CK_Employee_BirthDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'CONSTRAINT',N'CK_Employee_Gender'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Gender]=''f'' OR [Gender]=''m'' OR [Gender]=''F'' OR [Gender]=''M''' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'CONSTRAINT',@level2name=N'CK_Employee_Gender'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'CONSTRAINT',N'CK_Employee_HireDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [HireDate] >= ''1996-07-01'' AND [HireDate] <= dateadd(day,(1),GETDATE())' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'CONSTRAINT',@level2name=N'CK_Employee_HireDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'CONSTRAINT',N'CK_Employee_MaritalStatus'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [MaritalStatus]=''s'' OR [MaritalStatus]=''m'' OR [MaritalStatus]=''S'' OR [MaritalStatus]=''M''' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'CONSTRAINT',@level2name=N'CK_Employee_MaritalStatus'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'CONSTRAINT',N'CK_Employee_SickLeaveHours'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [SickLeaveHours] >= (0) AND [SickLeaveHours] <= (120)' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'CONSTRAINT',@level2name=N'CK_Employee_SickLeaveHours'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Employee', N'CONSTRAINT',N'CK_Employee_VacationHours'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [VacationHours] >= (-40) AND [VacationHours] <= (240)' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Employee', @level2type=N'CONSTRAINT',@level2name=N'CK_Employee_VacationHours'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[HumanResources].[FK_EmployeePayHistory_Employee_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[EmployeePayHistory]'))\r\nALTER TABLE [HumanResources].[EmployeePayHistory]  WITH CHECK ADD  CONSTRAINT [FK_EmployeePayHistory_Employee_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\r\nREFERENCES [HumanResources].[Employee] ([BusinessEntityID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[HumanResources].[FK_EmployeePayHistory_Employee_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[EmployeePayHistory]'))\r\nALTER TABLE [HumanResources].[EmployeePayHistory] CHECK CONSTRAINT [FK_EmployeePayHistory_Employee_BusinessEntityID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[HumanResources].[CK_EmployeePayHistory_PayFrequency]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[EmployeePayHistory]'))\r\nALTER TABLE [HumanResources].[EmployeePayHistory]  WITH CHECK ADD  CONSTRAINT [CK_EmployeePayHistory_PayFrequency] CHECK  (([PayFrequency]=(2) OR [PayFrequency]=(1)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[HumanResources].[CK_EmployeePayHistory_PayFrequency]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[EmployeePayHistory]'))\r\nALTER TABLE [HumanResources].[EmployeePayHistory] CHECK CONSTRAINT [CK_EmployeePayHistory_PayFrequency]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[HumanResources].[CK_EmployeePayHistory_Rate]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[EmployeePayHistory]'))\r\nALTER TABLE [HumanResources].[EmployeePayHistory]  WITH CHECK ADD  CONSTRAINT [CK_EmployeePayHistory_Rate] CHECK  (([Rate]>=(6.50) AND [Rate]<=(200.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[HumanResources].[CK_EmployeePayHistory_Rate]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[EmployeePayHistory]'))\r\nALTER TABLE [HumanResources].[EmployeePayHistory] CHECK CONSTRAINT [CK_EmployeePayHistory_Rate]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'EmployeePayHistory', N'CONSTRAINT',N'DF_EmployeePayHistory_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeePayHistory', @level2type=N'CONSTRAINT',@level2name=N'DF_EmployeePayHistory_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'EmployeePayHistory', N'CONSTRAINT',N'PK_EmployeePayHistory_BusinessEntityID_RateChangeDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeePayHistory', @level2type=N'CONSTRAINT',@level2name=N'PK_EmployeePayHistory_BusinessEntityID_RateChangeDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'EmployeePayHistory', N'CONSTRAINT',N'FK_EmployeePayHistory_Employee_BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Employee.EmployeeID.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeePayHistory', @level2type=N'CONSTRAINT',@level2name=N'FK_EmployeePayHistory_Employee_BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'EmployeePayHistory', N'CONSTRAINT',N'CK_EmployeePayHistory_PayFrequency'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [PayFrequency]=(3) OR [PayFrequency]=(2) OR [PayFrequency]=(1)' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeePayHistory', @level2type=N'CONSTRAINT',@level2name=N'CK_EmployeePayHistory_PayFrequency'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'EmployeePayHistory', N'CONSTRAINT',N'CK_EmployeePayHistory_Rate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Rate] >= (6.50) AND [Rate] <= (200.00)' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeePayHistory', @level2type=N'CONSTRAINT',@level2name=N'CK_EmployeePayHistory_Rate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'ErrorLog', N'CONSTRAINT',N'DF_ErrorLog_ErrorTime'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'ErrorLog', @level2type=N'CONSTRAINT',@level2name=N'DF_ErrorLog_ErrorTime'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'ErrorLog', N'CONSTRAINT',N'PK_ErrorLog_ErrorLogID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'ErrorLog', @level2type=N'CONSTRAINT',@level2name=N'PK_ErrorLog_ErrorLogID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[HumanResources].[FK_JobCandidate_Employee_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[JobCandidate]'))\r\nALTER TABLE [HumanResources].[JobCandidate]  WITH CHECK ADD  CONSTRAINT [FK_JobCandidate_Employee_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\r\nREFERENCES [HumanResources].[Employee] ([BusinessEntityID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[HumanResources].[FK_JobCandidate_Employee_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[JobCandidate]'))\r\nALTER TABLE [HumanResources].[JobCandidate] CHECK CONSTRAINT [FK_JobCandidate_Employee_BusinessEntityID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'JobCandidate', N'CONSTRAINT',N'DF_JobCandidate_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'JobCandidate', @level2type=N'CONSTRAINT',@level2name=N'DF_JobCandidate_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'JobCandidate', N'CONSTRAINT',N'PK_JobCandidate_JobCandidateID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'JobCandidate', @level2type=N'CONSTRAINT',@level2name=N'PK_JobCandidate_JobCandidateID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'JobCandidate', N'CONSTRAINT',N'FK_JobCandidate_Employee_BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Employee.EmployeeID.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'JobCandidate', @level2type=N'CONSTRAINT',@level2name=N'FK_JobCandidate_Employee_BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ScrapReason', N'CONSTRAINT',N'DF_ScrapReason_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ScrapReason', @level2type=N'CONSTRAINT',@level2name=N'DF_ScrapReason_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ScrapReason', N'CONSTRAINT',N'PK_ScrapReason_ScrapReasonID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ScrapReason', @level2type=N'CONSTRAINT',@level2name=N'PK_ScrapReason_ScrapReasonID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Shift', N'CONSTRAINT',N'DF_Shift_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Shift', @level2type=N'CONSTRAINT',@level2name=N'DF_Shift_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Shift', N'CONSTRAINT',N'PK_Shift_ShiftID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Shift', @level2type=N'CONSTRAINT',@level2name=N'PK_Shift_ShiftID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_ShipMethod_ShipBase]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[ShipMethod]'))\r\nALTER TABLE [Purchasing].[ShipMethod]  WITH CHECK ADD  CONSTRAINT [CK_ShipMethod_ShipBase] CHECK  (([ShipBase]>(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_ShipMethod_ShipBase]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[ShipMethod]'))\r\nALTER TABLE [Purchasing].[ShipMethod] CHECK CONSTRAINT [CK_ShipMethod_ShipBase]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_ShipMethod_ShipRate]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[ShipMethod]'))\r\nALTER TABLE [Purchasing].[ShipMethod]  WITH CHECK ADD  CONSTRAINT [CK_ShipMethod_ShipRate] CHECK  (([ShipRate]>(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_ShipMethod_ShipRate]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[ShipMethod]'))\r\nALTER TABLE [Purchasing].[ShipMethod] CHECK CONSTRAINT [CK_ShipMethod_ShipRate]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ShipMethod', N'CONSTRAINT',N'DF_ShipMethod_ShipBase'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'CONSTRAINT',@level2name=N'DF_ShipMethod_ShipBase'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ShipMethod', N'CONSTRAINT',N'DF_ShipMethod_ShipRate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'CONSTRAINT',@level2name=N'DF_ShipMethod_ShipRate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ShipMethod', N'CONSTRAINT',N'DF_ShipMethod_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'CONSTRAINT',@level2name=N'DF_ShipMethod_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ShipMethod', N'CONSTRAINT',N'DF_ShipMethod_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'CONSTRAINT',@level2name=N'DF_ShipMethod_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ShipMethod', N'CONSTRAINT',N'PK_ShipMethod_ShipMethodID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'CONSTRAINT',@level2name=N'PK_ShipMethod_ShipMethodID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ShipMethod', N'CONSTRAINT',N'CK_ShipMethod_ShipBase'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ShipBase] > (0.00)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'CONSTRAINT',@level2name=N'CK_ShipMethod_ShipBase'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ShipMethod', N'CONSTRAINT',N'CK_ShipMethod_ShipRate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ShipRate] > (0.00)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ShipMethod', @level2type=N'CONSTRAINT',@level2name=N'CK_ShipMethod_ShipRate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductCostHistory_Product_ProductID]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductCostHistory]'))\r\nALTER TABLE [Production].[ProductCostHistory]  WITH CHECK ADD  CONSTRAINT [FK_ProductCostHistory_Product_ProductID] FOREIGN KEY([ProductID])\r\nREFERENCES [Production].[Product] ([ProductID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductCostHistory_Product_ProductID]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductCostHistory]'))\r\nALTER TABLE [Production].[ProductCostHistory] CHECK CONSTRAINT [FK_ProductCostHistory_Product_ProductID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_ProductCostHistory_EndDate]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductCostHistory]'))\r\nALTER TABLE [Production].[ProductCostHistory]  WITH CHECK ADD  CONSTRAINT [CK_ProductCostHistory_EndDate] CHECK  (([EndDate]>=[StartDate] OR [EndDate] IS NULL))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_ProductCostHistory_EndDate]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductCostHistory]'))\r\nALTER TABLE [Production].[ProductCostHistory] CHECK CONSTRAINT [CK_ProductCostHistory_EndDate]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_ProductCostHistory_StandardCost]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductCostHistory]'))\r\nALTER TABLE [Production].[ProductCostHistory]  WITH CHECK ADD  CONSTRAINT [CK_ProductCostHistory_StandardCost] CHECK  (([StandardCost]>=(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_ProductCostHistory_StandardCost]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductCostHistory]'))\r\nALTER TABLE [Production].[ProductCostHistory] CHECK CONSTRAINT [CK_ProductCostHistory_StandardCost]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductCostHistory', N'CONSTRAINT',N'DF_ProductCostHistory_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCostHistory', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductCostHistory_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductCostHistory', N'CONSTRAINT',N'PK_ProductCostHistory_ProductID_StartDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCostHistory', @level2type=N'CONSTRAINT',@level2name=N'PK_ProductCostHistory_ProductID_StartDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductCostHistory', N'CONSTRAINT',N'FK_ProductCostHistory_Product_ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCostHistory', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductCostHistory_Product_ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductCostHistory', N'CONSTRAINT',N'CK_ProductCostHistory_EndDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [EndDate] >= [StartDate] OR [EndDate] IS NULL' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCostHistory', @level2type=N'CONSTRAINT',@level2name=N'CK_ProductCostHistory_EndDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductCostHistory', N'CONSTRAINT',N'CK_ProductCostHistory_StandardCost'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [StandardCost] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductCostHistory', @level2type=N'CONSTRAINT',@level2name=N'CK_ProductCostHistory_StandardCost'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductDescription', N'CONSTRAINT',N'DF_ProductDescription_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDescription', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductDescription_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductDescription', N'CONSTRAINT',N'DF_ProductDescription_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDescription', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductDescription_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductDescription', N'CONSTRAINT',N'PK_ProductDescription_ProductDescriptionID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDescription', @level2type=N'CONSTRAINT',@level2name=N'PK_ProductDescription_ProductDescriptionID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_ShoppingCartItem_Product_ProductID]') AND parent_object_id = OBJECT_ID(N'[Sales].[ShoppingCartItem]'))\r\nALTER TABLE [Sales].[ShoppingCartItem]  WITH CHECK ADD  CONSTRAINT [FK_ShoppingCartItem_Product_ProductID] FOREIGN KEY([ProductID])\r\nREFERENCES [Production].[Product] ([ProductID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_ShoppingCartItem_Product_ProductID]') AND parent_object_id = OBJECT_ID(N'[Sales].[ShoppingCartItem]'))\r\nALTER TABLE [Sales].[ShoppingCartItem] CHECK CONSTRAINT [FK_ShoppingCartItem_Product_ProductID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_ShoppingCartItem_Quantity]') AND parent_object_id = OBJECT_ID(N'[Sales].[ShoppingCartItem]'))\r\nALTER TABLE [Sales].[ShoppingCartItem]  WITH CHECK ADD  CONSTRAINT [CK_ShoppingCartItem_Quantity] CHECK  (([Quantity]>=(1)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_ShoppingCartItem_Quantity]') AND parent_object_id = OBJECT_ID(N'[Sales].[ShoppingCartItem]'))\r\nALTER TABLE [Sales].[ShoppingCartItem] CHECK CONSTRAINT [CK_ShoppingCartItem_Quantity]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'ShoppingCartItem', N'CONSTRAINT',N'DF_ShoppingCartItem_Quantity'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 1' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'ShoppingCartItem', @level2type=N'CONSTRAINT',@level2name=N'DF_ShoppingCartItem_Quantity'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'ShoppingCartItem', N'CONSTRAINT',N'DF_ShoppingCartItem_DateCreated'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'ShoppingCartItem', @level2type=N'CONSTRAINT',@level2name=N'DF_ShoppingCartItem_DateCreated'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'ShoppingCartItem', N'CONSTRAINT',N'DF_ShoppingCartItem_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'ShoppingCartItem', @level2type=N'CONSTRAINT',@level2name=N'DF_ShoppingCartItem_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'ShoppingCartItem', N'CONSTRAINT',N'PK_ShoppingCartItem_ShoppingCartItemID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'ShoppingCartItem', @level2type=N'CONSTRAINT',@level2name=N'PK_ShoppingCartItem_ShoppingCartItemID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'ShoppingCartItem', N'CONSTRAINT',N'FK_ShoppingCartItem_Product_ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'ShoppingCartItem', @level2type=N'CONSTRAINT',@level2name=N'FK_ShoppingCartItem_Product_ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'ShoppingCartItem', N'CONSTRAINT',N'CK_ShoppingCartItem_Quantity'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Quantity] >= (1)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'ShoppingCartItem', @level2type=N'CONSTRAINT',@level2name=N'CK_ShoppingCartItem_Quantity'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_Document_Employee_Owner]') AND parent_object_id = OBJECT_ID(N'[Production].[Document]'))\r\nALTER TABLE [Production].[Document]  WITH CHECK ADD  CONSTRAINT [FK_Document_Employee_Owner] FOREIGN KEY([Owner])\r\nREFERENCES [HumanResources].[Employee] ([BusinessEntityID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_Document_Employee_Owner]') AND parent_object_id = OBJECT_ID(N'[Production].[Document]'))\r\nALTER TABLE [Production].[Document] CHECK CONSTRAINT [FK_Document_Employee_Owner]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_Document_Status]') AND parent_object_id = OBJECT_ID(N'[Production].[Document]'))\r\nALTER TABLE [Production].[Document]  WITH CHECK ADD  CONSTRAINT [CK_Document_Status] CHECK  (([Status]>=(1) AND [Status]<=(3)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_Document_Status]') AND parent_object_id = OBJECT_ID(N'[Production].[Document]'))\r\nALTER TABLE [Production].[Document] CHECK CONSTRAINT [CK_Document_Status]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Document', N'CONSTRAINT',N'DF_Document_ChangeNumber'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'CONSTRAINT',@level2name=N'DF_Document_ChangeNumber'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Document', N'CONSTRAINT',N'DF_Document_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'CONSTRAINT',@level2name=N'DF_Document_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Document', N'CONSTRAINT',N'DF_Document_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'CONSTRAINT',@level2name=N'DF_Document_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Document', N'CONSTRAINT',N'PK_Document_DocumentNode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'CONSTRAINT',@level2name=N'PK_Document_DocumentNode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Document', N'CONSTRAINT',N'FK_Document_Employee_Owner'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Employee.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'CONSTRAINT',@level2name=N'FK_Document_Employee_Owner'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Document', N'CONSTRAINT',N'CK_Document_Status'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Status] BETWEEN (1) AND (3)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Document', @level2type=N'CONSTRAINT',@level2name=N'CK_Document_Status'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductDocument_Document_DocumentNode]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductDocument]'))\r\nALTER TABLE [Production].[ProductDocument]  WITH CHECK ADD  CONSTRAINT [FK_ProductDocument_Document_DocumentNode] FOREIGN KEY([DocumentNode])\r\nREFERENCES [Production].[Document] ([DocumentNode])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductDocument_Document_DocumentNode]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductDocument]'))\r\nALTER TABLE [Production].[ProductDocument] CHECK CONSTRAINT [FK_ProductDocument_Document_DocumentNode]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductDocument_Product_ProductID]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductDocument]'))\r\nALTER TABLE [Production].[ProductDocument]  WITH CHECK ADD  CONSTRAINT [FK_ProductDocument_Product_ProductID] FOREIGN KEY([ProductID])\r\nREFERENCES [Production].[Product] ([ProductID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductDocument_Product_ProductID]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductDocument]'))\r\nALTER TABLE [Production].[ProductDocument] CHECK CONSTRAINT [FK_ProductDocument_Product_ProductID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductDocument', N'CONSTRAINT',N'DF_ProductDocument_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDocument', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductDocument_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductDocument', N'CONSTRAINT',N'PK_ProductDocument_ProductID_DocumentNode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDocument', @level2type=N'CONSTRAINT',@level2name=N'PK_ProductDocument_ProductID_DocumentNode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductDocument', N'CONSTRAINT',N'FK_ProductDocument_Document_DocumentNode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Document.DocumentNode.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDocument', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductDocument_Document_DocumentNode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductDocument', N'CONSTRAINT',N'FK_ProductDocument_Product_ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductDocument', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductDocument_Product_ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_Location_Availability]') AND parent_object_id = OBJECT_ID(N'[Production].[Location]'))\r\nALTER TABLE [Production].[Location]  WITH CHECK ADD  CONSTRAINT [CK_Location_Availability] CHECK  (([Availability]>=(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_Location_Availability]') AND parent_object_id = OBJECT_ID(N'[Production].[Location]'))\r\nALTER TABLE [Production].[Location] CHECK CONSTRAINT [CK_Location_Availability]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_Location_CostRate]') AND parent_object_id = OBJECT_ID(N'[Production].[Location]'))\r\nALTER TABLE [Production].[Location]  WITH CHECK ADD  CONSTRAINT [CK_Location_CostRate] CHECK  (([CostRate]>=(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_Location_CostRate]') AND parent_object_id = OBJECT_ID(N'[Production].[Location]'))\r\nALTER TABLE [Production].[Location] CHECK CONSTRAINT [CK_Location_CostRate]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Location', N'CONSTRAINT',N'DF_Location_CostRate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Location', @level2type=N'CONSTRAINT',@level2name=N'DF_Location_CostRate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Location', N'CONSTRAINT',N'DF_Location_Availability'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.00' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Location', @level2type=N'CONSTRAINT',@level2name=N'DF_Location_Availability'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Location', N'CONSTRAINT',N'DF_Location_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Location', @level2type=N'CONSTRAINT',@level2name=N'DF_Location_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Location', N'CONSTRAINT',N'PK_Location_LocationID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Location', @level2type=N'CONSTRAINT',@level2name=N'PK_Location_LocationID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Location', N'CONSTRAINT',N'CK_Location_Availability'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Availability] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Location', @level2type=N'CONSTRAINT',@level2name=N'CK_Location_Availability'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Location', N'CONSTRAINT',N'CK_Location_CostRate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [CostRate] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Location', @level2type=N'CONSTRAINT',@level2name=N'CK_Location_CostRate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductInventory_Location_LocationID]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductInventory]'))\r\nALTER TABLE [Production].[ProductInventory]  WITH CHECK ADD  CONSTRAINT [FK_ProductInventory_Location_LocationID] FOREIGN KEY([LocationID])\r\nREFERENCES [Production].[Location] ([LocationID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductInventory_Location_LocationID]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductInventory]'))\r\nALTER TABLE [Production].[ProductInventory] CHECK CONSTRAINT [FK_ProductInventory_Location_LocationID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductInventory_Product_ProductID]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductInventory]'))\r\nALTER TABLE [Production].[ProductInventory]  WITH CHECK ADD  CONSTRAINT [FK_ProductInventory_Product_ProductID] FOREIGN KEY([ProductID])\r\nREFERENCES [Production].[Product] ([ProductID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductInventory_Product_ProductID]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductInventory]'))\r\nALTER TABLE [Production].[ProductInventory] CHECK CONSTRAINT [FK_ProductInventory_Product_ProductID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_ProductInventory_Bin]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductInventory]'))\r\nALTER TABLE [Production].[ProductInventory]  WITH CHECK ADD  CONSTRAINT [CK_ProductInventory_Bin] CHECK  (([Bin]>=(0) AND [Bin]<=(100)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_ProductInventory_Bin]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductInventory]'))\r\nALTER TABLE [Production].[ProductInventory] CHECK CONSTRAINT [CK_ProductInventory_Bin]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_ProductInventory_Shelf]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductInventory]'))\r\nALTER TABLE [Production].[ProductInventory]  WITH CHECK ADD  CONSTRAINT [CK_ProductInventory_Shelf] CHECK  (([Shelf] like '[A-Za-z]' OR [Shelf]='N/A'))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_ProductInventory_Shelf]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductInventory]'))\r\nALTER TABLE [Production].[ProductInventory] CHECK CONSTRAINT [CK_ProductInventory_Shelf]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductInventory', N'CONSTRAINT',N'DF_ProductInventory_Quantity'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductInventory_Quantity'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductInventory', N'CONSTRAINT',N'DF_ProductInventory_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductInventory_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductInventory', N'CONSTRAINT',N'DF_ProductInventory_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductInventory_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductInventory', N'CONSTRAINT',N'PK_ProductInventory_ProductID_LocationID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'CONSTRAINT',@level2name=N'PK_ProductInventory_ProductID_LocationID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductInventory', N'CONSTRAINT',N'FK_ProductInventory_Location_LocationID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Location.LocationID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductInventory_Location_LocationID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductInventory', N'CONSTRAINT',N'FK_ProductInventory_Product_ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductInventory_Product_ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductInventory', N'CONSTRAINT',N'CK_ProductInventory_Bin'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Bin] BETWEEN (0) AND (100)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'CONSTRAINT',@level2name=N'CK_ProductInventory_Bin'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductInventory', N'CONSTRAINT',N'CK_ProductInventory_Shelf'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Shelf] like ''[A-Za-z]'' OR [Shelf]=''N/A''' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductInventory', @level2type=N'CONSTRAINT',@level2name=N'CK_ProductInventory_Shelf'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SpecialOffer_DiscountPct]') AND parent_object_id = OBJECT_ID(N'[Sales].[SpecialOffer]'))\r\nALTER TABLE [Sales].[SpecialOffer]  WITH CHECK ADD  CONSTRAINT [CK_SpecialOffer_DiscountPct] CHECK  (([DiscountPct]>=(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SpecialOffer_DiscountPct]') AND parent_object_id = OBJECT_ID(N'[Sales].[SpecialOffer]'))\r\nALTER TABLE [Sales].[SpecialOffer] CHECK CONSTRAINT [CK_SpecialOffer_DiscountPct]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SpecialOffer_EndDate]') AND parent_object_id = OBJECT_ID(N'[Sales].[SpecialOffer]'))\r\nALTER TABLE [Sales].[SpecialOffer]  WITH CHECK ADD  CONSTRAINT [CK_SpecialOffer_EndDate] CHECK  (([EndDate]>=[StartDate]))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SpecialOffer_EndDate]') AND parent_object_id = OBJECT_ID(N'[Sales].[SpecialOffer]'))\r\nALTER TABLE [Sales].[SpecialOffer] CHECK CONSTRAINT [CK_SpecialOffer_EndDate]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SpecialOffer_MaxQty]') AND parent_object_id = OBJECT_ID(N'[Sales].[SpecialOffer]'))\r\nALTER TABLE [Sales].[SpecialOffer]  WITH CHECK ADD  CONSTRAINT [CK_SpecialOffer_MaxQty] CHECK  (([MaxQty]>=(0)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SpecialOffer_MaxQty]') AND parent_object_id = OBJECT_ID(N'[Sales].[SpecialOffer]'))\r\nALTER TABLE [Sales].[SpecialOffer] CHECK CONSTRAINT [CK_SpecialOffer_MaxQty]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SpecialOffer_MinQty]') AND parent_object_id = OBJECT_ID(N'[Sales].[SpecialOffer]'))\r\nALTER TABLE [Sales].[SpecialOffer]  WITH CHECK ADD  CONSTRAINT [CK_SpecialOffer_MinQty] CHECK  (([MinQty]>=(0)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SpecialOffer_MinQty]') AND parent_object_id = OBJECT_ID(N'[Sales].[SpecialOffer]'))\r\nALTER TABLE [Sales].[SpecialOffer] CHECK CONSTRAINT [CK_SpecialOffer_MinQty]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOffer', N'CONSTRAINT',N'DF_SpecialOffer_DiscountPct'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'CONSTRAINT',@level2name=N'DF_SpecialOffer_DiscountPct'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOffer', N'CONSTRAINT',N'DF_SpecialOffer_MinQty'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'CONSTRAINT',@level2name=N'DF_SpecialOffer_MinQty'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOffer', N'CONSTRAINT',N'DF_SpecialOffer_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'CONSTRAINT',@level2name=N'DF_SpecialOffer_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOffer', N'CONSTRAINT',N'DF_SpecialOffer_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'CONSTRAINT',@level2name=N'DF_SpecialOffer_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOffer', N'CONSTRAINT',N'PK_SpecialOffer_SpecialOfferID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'CONSTRAINT',@level2name=N'PK_SpecialOffer_SpecialOfferID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOffer', N'CONSTRAINT',N'CK_SpecialOffer_DiscountPct'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [DiscountPct] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'CONSTRAINT',@level2name=N'CK_SpecialOffer_DiscountPct'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOffer', N'CONSTRAINT',N'CK_SpecialOffer_EndDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [EndDate] >= [StartDate]' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'CONSTRAINT',@level2name=N'CK_SpecialOffer_EndDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOffer', N'CONSTRAINT',N'CK_SpecialOffer_MaxQty'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [MaxQty] >= (0)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'CONSTRAINT',@level2name=N'CK_SpecialOffer_MaxQty'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOffer', N'CONSTRAINT',N'CK_SpecialOffer_MinQty'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [MinQty] >= (0)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOffer', @level2type=N'CONSTRAINT',@level2name=N'CK_SpecialOffer_MinQty'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductListPriceHistory_Product_ProductID]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductListPriceHistory]'))\r\nALTER TABLE [Production].[ProductListPriceHistory]  WITH CHECK ADD  CONSTRAINT [FK_ProductListPriceHistory_Product_ProductID] FOREIGN KEY([ProductID])\r\nREFERENCES [Production].[Product] ([ProductID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductListPriceHistory_Product_ProductID]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductListPriceHistory]'))\r\nALTER TABLE [Production].[ProductListPriceHistory] CHECK CONSTRAINT [FK_ProductListPriceHistory_Product_ProductID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_ProductListPriceHistory_EndDate]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductListPriceHistory]'))\r\nALTER TABLE [Production].[ProductListPriceHistory]  WITH CHECK ADD  CONSTRAINT [CK_ProductListPriceHistory_EndDate] CHECK  (([EndDate]>=[StartDate] OR [EndDate] IS NULL))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_ProductListPriceHistory_EndDate]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductListPriceHistory]'))\r\nALTER TABLE [Production].[ProductListPriceHistory] CHECK CONSTRAINT [CK_ProductListPriceHistory_EndDate]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_ProductListPriceHistory_ListPrice]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductListPriceHistory]'))\r\nALTER TABLE [Production].[ProductListPriceHistory]  WITH CHECK ADD  CONSTRAINT [CK_ProductListPriceHistory_ListPrice] CHECK  (([ListPrice]>(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_ProductListPriceHistory_ListPrice]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductListPriceHistory]'))\r\nALTER TABLE [Production].[ProductListPriceHistory] CHECK CONSTRAINT [CK_ProductListPriceHistory_ListPrice]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductListPriceHistory', N'CONSTRAINT',N'DF_ProductListPriceHistory_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductListPriceHistory', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductListPriceHistory_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductListPriceHistory', N'CONSTRAINT',N'PK_ProductListPriceHistory_ProductID_StartDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductListPriceHistory', @level2type=N'CONSTRAINT',@level2name=N'PK_ProductListPriceHistory_ProductID_StartDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductListPriceHistory', N'CONSTRAINT',N'FK_ProductListPriceHistory_Product_ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductListPriceHistory', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductListPriceHistory_Product_ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductListPriceHistory', N'CONSTRAINT',N'CK_ProductListPriceHistory_EndDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [EndDate] >= [StartDate] OR [EndDate] IS NULL' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductListPriceHistory', @level2type=N'CONSTRAINT',@level2name=N'CK_ProductListPriceHistory_EndDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductListPriceHistory', N'CONSTRAINT',N'CK_ProductListPriceHistory_ListPrice'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ListPrice] > (0.00)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductListPriceHistory', @level2type=N'CONSTRAINT',@level2name=N'CK_ProductListPriceHistory_ListPrice'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'CountryRegion', N'CONSTRAINT',N'DF_CountryRegion_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'CountryRegion', @level2type=N'CONSTRAINT',@level2name=N'DF_CountryRegion_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'CountryRegion', N'CONSTRAINT',N'PK_CountryRegion_CountryRegionCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'CountryRegion', @level2type=N'CONSTRAINT',@level2name=N'PK_CountryRegion_CountryRegionCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesTerritory_CountryRegion_CountryRegionCode]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesTerritory]'))\r\nALTER TABLE [Sales].[SalesTerritory]  WITH CHECK ADD  CONSTRAINT [FK_SalesTerritory_CountryRegion_CountryRegionCode] FOREIGN KEY([CountryRegionCode])\r\nREFERENCES [Person].[CountryRegion] ([CountryRegionCode])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesTerritory_CountryRegion_CountryRegionCode]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesTerritory]'))\r\nALTER TABLE [Sales].[SalesTerritory] CHECK CONSTRAINT [FK_SalesTerritory_CountryRegion_CountryRegionCode]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesTerritory_CostLastYear]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesTerritory]'))\r\nALTER TABLE [Sales].[SalesTerritory]  WITH CHECK ADD  CONSTRAINT [CK_SalesTerritory_CostLastYear] CHECK  (([CostLastYear]>=(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesTerritory_CostLastYear]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesTerritory]'))\r\nALTER TABLE [Sales].[SalesTerritory] CHECK CONSTRAINT [CK_SalesTerritory_CostLastYear]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesTerritory_CostYTD]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesTerritory]'))\r\nALTER TABLE [Sales].[SalesTerritory]  WITH CHECK ADD  CONSTRAINT [CK_SalesTerritory_CostYTD] CHECK  (([CostYTD]>=(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesTerritory_CostYTD]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesTerritory]'))\r\nALTER TABLE [Sales].[SalesTerritory] CHECK CONSTRAINT [CK_SalesTerritory_CostYTD]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesTerritory_SalesLastYear]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesTerritory]'))\r\nALTER TABLE [Sales].[SalesTerritory]  WITH CHECK ADD  CONSTRAINT [CK_SalesTerritory_SalesLastYear] CHECK  (([SalesLastYear]>=(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesTerritory_SalesLastYear]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesTerritory]'))\r\nALTER TABLE [Sales].[SalesTerritory] CHECK CONSTRAINT [CK_SalesTerritory_SalesLastYear]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesTerritory_SalesYTD]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesTerritory]'))\r\nALTER TABLE [Sales].[SalesTerritory]  WITH CHECK ADD  CONSTRAINT [CK_SalesTerritory_SalesYTD] CHECK  (([SalesYTD]>=(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesTerritory_SalesYTD]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesTerritory]'))\r\nALTER TABLE [Sales].[SalesTerritory] CHECK CONSTRAINT [CK_SalesTerritory_SalesYTD]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritory', N'CONSTRAINT',N'DF_SalesTerritory_SalesYTD'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesTerritory_SalesYTD'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritory', N'CONSTRAINT',N'DF_SalesTerritory_SalesLastYear'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesTerritory_SalesLastYear'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritory', N'CONSTRAINT',N'DF_SalesTerritory_CostYTD'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesTerritory_CostYTD'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritory', N'CONSTRAINT',N'DF_SalesTerritory_CostLastYear'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesTerritory_CostLastYear'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritory', N'CONSTRAINT',N'DF_SalesTerritory_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesTerritory_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritory', N'CONSTRAINT',N'DF_SalesTerritory_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesTerritory_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritory', N'CONSTRAINT',N'PK_SalesTerritory_TerritoryID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'CONSTRAINT',@level2name=N'PK_SalesTerritory_TerritoryID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritory', N'CONSTRAINT',N'FK_SalesTerritory_CountryRegion_CountryRegionCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing CountryRegion.CountryRegionCode.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesTerritory_CountryRegion_CountryRegionCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritory', N'CONSTRAINT',N'CK_SalesTerritory_CostLastYear'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [CostLastYear] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesTerritory_CostLastYear'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritory', N'CONSTRAINT',N'CK_SalesTerritory_CostYTD'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [CostYTD] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesTerritory_CostYTD'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritory', N'CONSTRAINT',N'CK_SalesTerritory_SalesLastYear'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [SalesLastYear] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesTerritory_SalesLastYear'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritory', N'CONSTRAINT',N'CK_SalesTerritory_SalesYTD'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [SalesYTD] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritory', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesTerritory_SalesYTD'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Person].[FK_StateProvince_CountryRegion_CountryRegionCode]') AND parent_object_id = OBJECT_ID(N'[Person].[StateProvince]'))\r\nALTER TABLE [Person].[StateProvince]  WITH CHECK ADD  CONSTRAINT [FK_StateProvince_CountryRegion_CountryRegionCode] FOREIGN KEY([CountryRegionCode])\r\nREFERENCES [Person].[CountryRegion] ([CountryRegionCode])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Person].[FK_StateProvince_CountryRegion_CountryRegionCode]') AND parent_object_id = OBJECT_ID(N'[Person].[StateProvince]'))\r\nALTER TABLE [Person].[StateProvince] CHECK CONSTRAINT [FK_StateProvince_CountryRegion_CountryRegionCode]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Person].[FK_StateProvince_SalesTerritory_TerritoryID]') AND parent_object_id = OBJECT_ID(N'[Person].[StateProvince]'))\r\nALTER TABLE [Person].[StateProvince]  WITH CHECK ADD  CONSTRAINT [FK_StateProvince_SalesTerritory_TerritoryID] FOREIGN KEY([TerritoryID])\r\nREFERENCES [Sales].[SalesTerritory] ([TerritoryID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Person].[FK_StateProvince_SalesTerritory_TerritoryID]') AND parent_object_id = OBJECT_ID(N'[Person].[StateProvince]'))\r\nALTER TABLE [Person].[StateProvince] CHECK CONSTRAINT [FK_StateProvince_SalesTerritory_TerritoryID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'StateProvince', N'CONSTRAINT',N'DF_StateProvince_IsOnlyStateProvinceFlag'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 1 (TRUE)' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'CONSTRAINT',@level2name=N'DF_StateProvince_IsOnlyStateProvinceFlag'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'StateProvince', N'CONSTRAINT',N'DF_StateProvince_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'CONSTRAINT',@level2name=N'DF_StateProvince_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'StateProvince', N'CONSTRAINT',N'DF_StateProvince_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'CONSTRAINT',@level2name=N'DF_StateProvince_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'StateProvince', N'CONSTRAINT',N'PK_StateProvince_StateProvinceID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'CONSTRAINT',@level2name=N'PK_StateProvince_StateProvinceID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'StateProvince', N'CONSTRAINT',N'FK_StateProvince_CountryRegion_CountryRegionCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing CountryRegion.CountryRegionCode.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'CONSTRAINT',@level2name=N'FK_StateProvince_CountryRegion_CountryRegionCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'StateProvince', N'CONSTRAINT',N'FK_StateProvince_SalesTerritory_TerritoryID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing SalesTerritory.TerritoryID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'StateProvince', @level2type=N'CONSTRAINT',@level2name=N'FK_StateProvince_SalesTerritory_TerritoryID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Person].[FK_Address_StateProvince_StateProvinceID]') AND parent_object_id = OBJECT_ID(N'[Person].[Address]'))\r\nALTER TABLE [Person].[Address]  WITH CHECK ADD  CONSTRAINT [FK_Address_StateProvince_StateProvinceID] FOREIGN KEY([StateProvinceID])\r\nREFERENCES [Person].[StateProvince] ([StateProvinceID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Person].[FK_Address_StateProvince_StateProvinceID]') AND parent_object_id = OBJECT_ID(N'[Person].[Address]'))\r\nALTER TABLE [Person].[Address] CHECK CONSTRAINT [FK_Address_StateProvince_StateProvinceID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Address', N'CONSTRAINT',N'DF_Address_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'CONSTRAINT',@level2name=N'DF_Address_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Address', N'CONSTRAINT',N'DF_Address_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'CONSTRAINT',@level2name=N'DF_Address_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Address', N'CONSTRAINT',N'PK_Address_AddressID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'CONSTRAINT',@level2name=N'PK_Address_AddressID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Address', N'CONSTRAINT',N'FK_Address_StateProvince_StateProvinceID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing StateProvince.StateProvinceID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Address', @level2type=N'CONSTRAINT',@level2name=N'FK_Address_StateProvince_StateProvinceID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SpecialOfferProduct_Product_ProductID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SpecialOfferProduct]'))\r\nALTER TABLE [Sales].[SpecialOfferProduct]  WITH CHECK ADD  CONSTRAINT [FK_SpecialOfferProduct_Product_ProductID] FOREIGN KEY([ProductID])\r\nREFERENCES [Production].[Product] ([ProductID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SpecialOfferProduct_Product_ProductID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SpecialOfferProduct]'))\r\nALTER TABLE [Sales].[SpecialOfferProduct] CHECK CONSTRAINT [FK_SpecialOfferProduct_Product_ProductID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SpecialOfferProduct]'))\r\nALTER TABLE [Sales].[SpecialOfferProduct]  WITH CHECK ADD  CONSTRAINT [FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID] FOREIGN KEY([SpecialOfferID])\r\nREFERENCES [Sales].[SpecialOffer] ([SpecialOfferID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SpecialOfferProduct]'))\r\nALTER TABLE [Sales].[SpecialOfferProduct] CHECK CONSTRAINT [FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOfferProduct', N'CONSTRAINT',N'DF_SpecialOfferProduct_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOfferProduct', @level2type=N'CONSTRAINT',@level2name=N'DF_SpecialOfferProduct_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOfferProduct', N'CONSTRAINT',N'DF_SpecialOfferProduct_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOfferProduct', @level2type=N'CONSTRAINT',@level2name=N'DF_SpecialOfferProduct_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOfferProduct', N'CONSTRAINT',N'PK_SpecialOfferProduct_SpecialOfferID_ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOfferProduct', @level2type=N'CONSTRAINT',@level2name=N'PK_SpecialOfferProduct_SpecialOfferID_ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOfferProduct', N'CONSTRAINT',N'FK_SpecialOfferProduct_Product_ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOfferProduct', @level2type=N'CONSTRAINT',@level2name=N'FK_SpecialOfferProduct_Product_ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SpecialOfferProduct', N'CONSTRAINT',N'FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing SpecialOffer.SpecialOfferID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SpecialOfferProduct', @level2type=N'CONSTRAINT',@level2name=N'FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'AddressType', N'CONSTRAINT',N'DF_AddressType_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'AddressType', @level2type=N'CONSTRAINT',@level2name=N'DF_AddressType_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'AddressType', N'CONSTRAINT',N'DF_AddressType_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'AddressType', @level2type=N'CONSTRAINT',@level2name=N'DF_AddressType_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'AddressType', N'CONSTRAINT',N'PK_AddressType_AddressTypeID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'AddressType', @level2type=N'CONSTRAINT',@level2name=N'PK_AddressType_AddressTypeID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Illustration', N'CONSTRAINT',N'DF_Illustration_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Illustration', @level2type=N'CONSTRAINT',@level2name=N'DF_Illustration_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Illustration', N'CONSTRAINT',N'PK_Illustration_IllustrationID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Illustration', @level2type=N'CONSTRAINT',@level2name=N'PK_Illustration_IllustrationID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductModelIllustration_Illustration_IllustrationID]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductModelIllustration]'))\r\nALTER TABLE [Production].[ProductModelIllustration]  WITH CHECK ADD  CONSTRAINT [FK_ProductModelIllustration_Illustration_IllustrationID] FOREIGN KEY([IllustrationID])\r\nREFERENCES [Production].[Illustration] ([IllustrationID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductModelIllustration_Illustration_IllustrationID]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductModelIllustration]'))\r\nALTER TABLE [Production].[ProductModelIllustration] CHECK CONSTRAINT [FK_ProductModelIllustration_Illustration_IllustrationID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductModelIllustration_ProductModel_ProductModelID]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductModelIllustration]'))\r\nALTER TABLE [Production].[ProductModelIllustration]  WITH CHECK ADD  CONSTRAINT [FK_ProductModelIllustration_ProductModel_ProductModelID] FOREIGN KEY([ProductModelID])\r\nREFERENCES [Production].[ProductModel] ([ProductModelID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductModelIllustration_ProductModel_ProductModelID]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductModelIllustration]'))\r\nALTER TABLE [Production].[ProductModelIllustration] CHECK CONSTRAINT [FK_ProductModelIllustration_ProductModel_ProductModelID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModelIllustration', N'CONSTRAINT',N'DF_ProductModelIllustration_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelIllustration', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductModelIllustration_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModelIllustration', N'CONSTRAINT',N'PK_ProductModelIllustration_ProductModelID_IllustrationID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelIllustration', @level2type=N'CONSTRAINT',@level2name=N'PK_ProductModelIllustration_ProductModelID_IllustrationID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModelIllustration', N'CONSTRAINT',N'FK_ProductModelIllustration_Illustration_IllustrationID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Illustration.IllustrationID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelIllustration', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductModelIllustration_Illustration_IllustrationID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModelIllustration', N'CONSTRAINT',N'FK_ProductModelIllustration_ProductModel_ProductModelID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing ProductModel.ProductModelID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelIllustration', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductModelIllustration_ProductModel_ProductModelID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'AWBuildVersion', N'CONSTRAINT',N'DF_AWBuildVersion_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'AWBuildVersion', @level2type=N'CONSTRAINT',@level2name=N'DF_AWBuildVersion_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'AWBuildVersion', N'CONSTRAINT',N'PK_AWBuildVersion_SystemInformationID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'AWBuildVersion', @level2type=N'CONSTRAINT',@level2name=N'PK_AWBuildVersion_SystemInformationID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Culture', N'CONSTRAINT',N'DF_Culture_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Culture', @level2type=N'CONSTRAINT',@level2name=N'DF_Culture_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'Culture', N'CONSTRAINT',N'PK_Culture_CultureID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'Culture', @level2type=N'CONSTRAINT',@level2name=N'PK_Culture_CultureID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductModelProductDescriptionCulture_Culture_CultureID]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductModelProductDescriptionCulture]'))\r\nALTER TABLE [Production].[ProductModelProductDescriptionCulture]  WITH CHECK ADD  CONSTRAINT [FK_ProductModelProductDescriptionCulture_Culture_CultureID] FOREIGN KEY([CultureID])\r\nREFERENCES [Production].[Culture] ([CultureID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductModelProductDescriptionCulture_Culture_CultureID]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductModelProductDescriptionCulture]'))\r\nALTER TABLE [Production].[ProductModelProductDescriptionCulture] CHECK CONSTRAINT [FK_ProductModelProductDescriptionCulture_Culture_CultureID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductModelProductDescriptionCulture]'))\r\nALTER TABLE [Production].[ProductModelProductDescriptionCulture]  WITH CHECK ADD  CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID] FOREIGN KEY([ProductDescriptionID])\r\nREFERENCES [Production].[ProductDescription] ([ProductDescriptionID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductModelProductDescriptionCulture]'))\r\nALTER TABLE [Production].[ProductModelProductDescriptionCulture] CHECK CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductModelProductDescriptionCulture]'))\r\nALTER TABLE [Production].[ProductModelProductDescriptionCulture]  WITH CHECK ADD  CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID] FOREIGN KEY([ProductModelID])\r\nREFERENCES [Production].[ProductModel] ([ProductModelID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductModelProductDescriptionCulture]'))\r\nALTER TABLE [Production].[ProductModelProductDescriptionCulture] CHECK CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModelProductDescriptionCulture', N'CONSTRAINT',N'DF_ProductModelProductDescriptionCulture_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelProductDescriptionCulture', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductModelProductDescriptionCulture_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModelProductDescriptionCulture', N'CONSTRAINT',N'PK_ProductModelProductDescriptionCulture_ProductModelID_ProductDescriptionID_CultureID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelProductDescriptionCulture', @level2type=N'CONSTRAINT',@level2name=N'PK_ProductModelProductDescriptionCulture_ProductModelID_ProductDescriptionID_CultureID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModelProductDescriptionCulture', N'CONSTRAINT',N'FK_ProductModelProductDescriptionCulture_Culture_CultureID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Culture.CultureID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelProductDescriptionCulture', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductModelProductDescriptionCulture_Culture_CultureID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModelProductDescriptionCulture', N'CONSTRAINT',N'FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing ProductDescription.ProductDescriptionID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelProductDescriptionCulture', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductModelProductDescriptionCulture', N'CONSTRAINT',N'FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing ProductModel.ProductModelID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductModelProductDescriptionCulture', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesPerson_Employee_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesPerson]'))\r\nALTER TABLE [Sales].[SalesPerson]  WITH CHECK ADD  CONSTRAINT [FK_SalesPerson_Employee_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\r\nREFERENCES [HumanResources].[Employee] ([BusinessEntityID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesPerson_Employee_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesPerson]'))\r\nALTER TABLE [Sales].[SalesPerson] CHECK CONSTRAINT [FK_SalesPerson_Employee_BusinessEntityID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesPerson_SalesTerritory_TerritoryID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesPerson]'))\r\nALTER TABLE [Sales].[SalesPerson]  WITH CHECK ADD  CONSTRAINT [FK_SalesPerson_SalesTerritory_TerritoryID] FOREIGN KEY([TerritoryID])\r\nREFERENCES [Sales].[SalesTerritory] ([TerritoryID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesPerson_SalesTerritory_TerritoryID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesPerson]'))\r\nALTER TABLE [Sales].[SalesPerson] CHECK CONSTRAINT [FK_SalesPerson_SalesTerritory_TerritoryID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesPerson_Bonus]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesPerson]'))\r\nALTER TABLE [Sales].[SalesPerson]  WITH CHECK ADD  CONSTRAINT [CK_SalesPerson_Bonus] CHECK  (([Bonus]>=(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesPerson_Bonus]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesPerson]'))\r\nALTER TABLE [Sales].[SalesPerson] CHECK CONSTRAINT [CK_SalesPerson_Bonus]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesPerson_CommissionPct]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesPerson]'))\r\nALTER TABLE [Sales].[SalesPerson]  WITH CHECK ADD  CONSTRAINT [CK_SalesPerson_CommissionPct] CHECK  (([CommissionPct]>=(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesPerson_CommissionPct]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesPerson]'))\r\nALTER TABLE [Sales].[SalesPerson] CHECK CONSTRAINT [CK_SalesPerson_CommissionPct]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesPerson_SalesLastYear]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesPerson]'))\r\nALTER TABLE [Sales].[SalesPerson]  WITH CHECK ADD  CONSTRAINT [CK_SalesPerson_SalesLastYear] CHECK  (([SalesLastYear]>=(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesPerson_SalesLastYear]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesPerson]'))\r\nALTER TABLE [Sales].[SalesPerson] CHECK CONSTRAINT [CK_SalesPerson_SalesLastYear]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesPerson_SalesQuota]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesPerson]'))\r\nALTER TABLE [Sales].[SalesPerson]  WITH CHECK ADD  CONSTRAINT [CK_SalesPerson_SalesQuota] CHECK  (([SalesQuota]>(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesPerson_SalesQuota]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesPerson]'))\r\nALTER TABLE [Sales].[SalesPerson] CHECK CONSTRAINT [CK_SalesPerson_SalesQuota]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesPerson_SalesYTD]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesPerson]'))\r\nALTER TABLE [Sales].[SalesPerson]  WITH CHECK ADD  CONSTRAINT [CK_SalesPerson_SalesYTD] CHECK  (([SalesYTD]>=(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesPerson_SalesYTD]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesPerson]'))\r\nALTER TABLE [Sales].[SalesPerson] CHECK CONSTRAINT [CK_SalesPerson_SalesYTD]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPerson', N'CONSTRAINT',N'DF_SalesPerson_Bonus'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesPerson_Bonus'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPerson', N'CONSTRAINT',N'DF_SalesPerson_CommissionPct'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesPerson_CommissionPct'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPerson', N'CONSTRAINT',N'DF_SalesPerson_SalesYTD'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesPerson_SalesYTD'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPerson', N'CONSTRAINT',N'DF_SalesPerson_SalesLastYear'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesPerson_SalesLastYear'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPerson', N'CONSTRAINT',N'DF_SalesPerson_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesPerson_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPerson', N'CONSTRAINT',N'DF_SalesPerson_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesPerson_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPerson', N'CONSTRAINT',N'PK_SalesPerson_BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'CONSTRAINT',@level2name=N'PK_SalesPerson_BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPerson', N'CONSTRAINT',N'FK_SalesPerson_Employee_BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Employee.EmployeeID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesPerson_Employee_BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPerson', N'CONSTRAINT',N'FK_SalesPerson_SalesTerritory_TerritoryID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing SalesTerritory.TerritoryID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesPerson_SalesTerritory_TerritoryID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPerson', N'CONSTRAINT',N'CK_SalesPerson_Bonus'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Bonus] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesPerson_Bonus'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPerson', N'CONSTRAINT',N'CK_SalesPerson_CommissionPct'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [CommissionPct] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesPerson_CommissionPct'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPerson', N'CONSTRAINT',N'CK_SalesPerson_SalesLastYear'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [SalesLastYear] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesPerson_SalesLastYear'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPerson', N'CONSTRAINT',N'CK_SalesPerson_SalesQuota'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [SalesQuota] > (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesPerson_SalesQuota'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPerson', N'CONSTRAINT',N'CK_SalesPerson_SalesYTD'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [SalesYTD] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPerson', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesPerson_SalesYTD'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_Store_BusinessEntity_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[Sales].[Store]'))\r\nALTER TABLE [Sales].[Store]  WITH CHECK ADD  CONSTRAINT [FK_Store_BusinessEntity_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\r\nREFERENCES [Person].[BusinessEntity] ([BusinessEntityID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_Store_BusinessEntity_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[Sales].[Store]'))\r\nALTER TABLE [Sales].[Store] CHECK CONSTRAINT [FK_Store_BusinessEntity_BusinessEntityID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_Store_SalesPerson_SalesPersonID]') AND parent_object_id = OBJECT_ID(N'[Sales].[Store]'))\r\nALTER TABLE [Sales].[Store]  WITH CHECK ADD  CONSTRAINT [FK_Store_SalesPerson_SalesPersonID] FOREIGN KEY([SalesPersonID])\r\nREFERENCES [Sales].[SalesPerson] ([BusinessEntityID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_Store_SalesPerson_SalesPersonID]') AND parent_object_id = OBJECT_ID(N'[Sales].[Store]'))\r\nALTER TABLE [Sales].[Store] CHECK CONSTRAINT [FK_Store_SalesPerson_SalesPersonID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Store', N'CONSTRAINT',N'DF_Store_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store', @level2type=N'CONSTRAINT',@level2name=N'DF_Store_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Store', N'CONSTRAINT',N'DF_Store_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store', @level2type=N'CONSTRAINT',@level2name=N'DF_Store_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Store', N'CONSTRAINT',N'PK_Store_BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store', @level2type=N'CONSTRAINT',@level2name=N'PK_Store_BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Store', N'CONSTRAINT',N'FK_Store_BusinessEntity_BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing BusinessEntity.BusinessEntityID' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store', @level2type=N'CONSTRAINT',@level2name=N'FK_Store_BusinessEntity_BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Store', N'CONSTRAINT',N'FK_Store_SalesPerson_SalesPersonID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing SalesPerson.SalesPersonID' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Store', @level2type=N'CONSTRAINT',@level2name=N'FK_Store_SalesPerson_SalesPersonID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductPhoto', N'CONSTRAINT',N'DF_ProductPhoto_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductPhoto', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductPhoto_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductPhoto', N'CONSTRAINT',N'PK_ProductPhoto_ProductPhotoID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductPhoto', @level2type=N'CONSTRAINT',@level2name=N'PK_ProductPhoto_ProductPhotoID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductProductPhoto_Product_ProductID]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductProductPhoto]'))\r\nALTER TABLE [Production].[ProductProductPhoto]  WITH CHECK ADD  CONSTRAINT [FK_ProductProductPhoto_Product_ProductID] FOREIGN KEY([ProductID])\r\nREFERENCES [Production].[Product] ([ProductID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductProductPhoto_Product_ProductID]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductProductPhoto]'))\r\nALTER TABLE [Production].[ProductProductPhoto] CHECK CONSTRAINT [FK_ProductProductPhoto_Product_ProductID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductProductPhoto_ProductPhoto_ProductPhotoID]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductProductPhoto]'))\r\nALTER TABLE [Production].[ProductProductPhoto]  WITH CHECK ADD  CONSTRAINT [FK_ProductProductPhoto_ProductPhoto_ProductPhotoID] FOREIGN KEY([ProductPhotoID])\r\nREFERENCES [Production].[ProductPhoto] ([ProductPhotoID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductProductPhoto_ProductPhoto_ProductPhotoID]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductProductPhoto]'))\r\nALTER TABLE [Production].[ProductProductPhoto] CHECK CONSTRAINT [FK_ProductProductPhoto_ProductPhoto_ProductPhotoID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductProductPhoto', N'CONSTRAINT',N'DF_ProductProductPhoto_Primary'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0 (FALSE)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductProductPhoto', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductProductPhoto_Primary'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductProductPhoto', N'CONSTRAINT',N'DF_ProductProductPhoto_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductProductPhoto', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductProductPhoto_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductProductPhoto', N'CONSTRAINT',N'PK_ProductProductPhoto_ProductID_ProductPhotoID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductProductPhoto', @level2type=N'CONSTRAINT',@level2name=N'PK_ProductProductPhoto_ProductID_ProductPhotoID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductProductPhoto', N'CONSTRAINT',N'FK_ProductProductPhoto_Product_ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductProductPhoto', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductProductPhoto_Product_ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductProductPhoto', N'CONSTRAINT',N'FK_ProductProductPhoto_ProductPhoto_ProductPhotoID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing ProductPhoto.ProductPhotoID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductProductPhoto', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductProductPhoto_ProductPhoto_ProductPhotoID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_TransactionHistory_Product_ProductID]') AND parent_object_id = OBJECT_ID(N'[Production].[TransactionHistory]'))\r\nALTER TABLE [Production].[TransactionHistory]  WITH CHECK ADD  CONSTRAINT [FK_TransactionHistory_Product_ProductID] FOREIGN KEY([ProductID])\r\nREFERENCES [Production].[Product] ([ProductID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_TransactionHistory_Product_ProductID]') AND parent_object_id = OBJECT_ID(N'[Production].[TransactionHistory]'))\r\nALTER TABLE [Production].[TransactionHistory] CHECK CONSTRAINT [FK_TransactionHistory_Product_ProductID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_TransactionHistory_TransactionType]') AND parent_object_id = OBJECT_ID(N'[Production].[TransactionHistory]'))\r\nALTER TABLE [Production].[TransactionHistory]  WITH CHECK ADD  CONSTRAINT [CK_TransactionHistory_TransactionType] CHECK  ((upper([TransactionType])='P' OR upper([TransactionType])='S' OR upper([TransactionType])='W'))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_TransactionHistory_TransactionType]') AND parent_object_id = OBJECT_ID(N'[Production].[TransactionHistory]'))\r\nALTER TABLE [Production].[TransactionHistory] CHECK CONSTRAINT [CK_TransactionHistory_TransactionType]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistory', N'CONSTRAINT',N'DF_TransactionHistory_ReferenceOrderLineID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'CONSTRAINT',@level2name=N'DF_TransactionHistory_ReferenceOrderLineID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistory', N'CONSTRAINT',N'DF_TransactionHistory_TransactionDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'CONSTRAINT',@level2name=N'DF_TransactionHistory_TransactionDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistory', N'CONSTRAINT',N'DF_TransactionHistory_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'CONSTRAINT',@level2name=N'DF_TransactionHistory_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistory', N'CONSTRAINT',N'PK_TransactionHistory_TransactionID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'CONSTRAINT',@level2name=N'PK_TransactionHistory_TransactionID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistory', N'CONSTRAINT',N'FK_TransactionHistory_Product_ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'CONSTRAINT',@level2name=N'FK_TransactionHistory_Product_ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistory', N'CONSTRAINT',N'CK_TransactionHistory_TransactionType'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [TransactionType]=''p'' OR [TransactionType]=''s'' OR [TransactionType]=''w'' OR [TransactionType]=''P'' OR [TransactionType]=''S'' OR [TransactionType]=''W'')' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistory', @level2type=N'CONSTRAINT',@level2name=N'CK_TransactionHistory_TransactionType'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductReview_Product_ProductID]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductReview]'))\r\nALTER TABLE [Production].[ProductReview]  WITH CHECK ADD  CONSTRAINT [FK_ProductReview_Product_ProductID] FOREIGN KEY([ProductID])\r\nREFERENCES [Production].[Product] ([ProductID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_ProductReview_Product_ProductID]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductReview]'))\r\nALTER TABLE [Production].[ProductReview] CHECK CONSTRAINT [FK_ProductReview_Product_ProductID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_ProductReview_Rating]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductReview]'))\r\nALTER TABLE [Production].[ProductReview]  WITH CHECK ADD  CONSTRAINT [CK_ProductReview_Rating] CHECK  (([Rating]>=(1) AND [Rating]<=(5)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_ProductReview_Rating]') AND parent_object_id = OBJECT_ID(N'[Production].[ProductReview]'))\r\nALTER TABLE [Production].[ProductReview] CHECK CONSTRAINT [CK_ProductReview_Rating]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductReview', N'CONSTRAINT',N'DF_ProductReview_ReviewDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductReview_ReviewDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductReview', N'CONSTRAINT',N'DF_ProductReview_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductReview_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductReview', N'CONSTRAINT',N'PK_ProductReview_ProductReviewID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview', @level2type=N'CONSTRAINT',@level2name=N'PK_ProductReview_ProductReviewID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductReview', N'CONSTRAINT',N'FK_ProductReview_Product_ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductReview_Product_ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'ProductReview', N'CONSTRAINT',N'CK_ProductReview_Rating'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Rating] BETWEEN (1) AND (5)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'ProductReview', @level2type=N'CONSTRAINT',@level2name=N'CK_ProductReview_Rating'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_TransactionHistoryArchive_TransactionType]') AND parent_object_id = OBJECT_ID(N'[Production].[TransactionHistoryArchive]'))\r\nALTER TABLE [Production].[TransactionHistoryArchive]  WITH CHECK ADD  CONSTRAINT [CK_TransactionHistoryArchive_TransactionType] CHECK  ((upper([TransactionType])='P' OR upper([TransactionType])='S' OR upper([TransactionType])='W'))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_TransactionHistoryArchive_TransactionType]') AND parent_object_id = OBJECT_ID(N'[Production].[TransactionHistoryArchive]'))\r\nALTER TABLE [Production].[TransactionHistoryArchive] CHECK CONSTRAINT [CK_TransactionHistoryArchive_TransactionType]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistoryArchive', N'CONSTRAINT',N'DF_TransactionHistoryArchive_ReferenceOrderLineID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'CONSTRAINT',@level2name=N'DF_TransactionHistoryArchive_ReferenceOrderLineID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistoryArchive', N'CONSTRAINT',N'DF_TransactionHistoryArchive_TransactionDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'CONSTRAINT',@level2name=N'DF_TransactionHistoryArchive_TransactionDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistoryArchive', N'CONSTRAINT',N'DF_TransactionHistoryArchive_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'CONSTRAINT',@level2name=N'DF_TransactionHistoryArchive_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistoryArchive', N'CONSTRAINT',N'PK_TransactionHistoryArchive_TransactionID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'CONSTRAINT',@level2name=N'PK_TransactionHistoryArchive_TransactionID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'TransactionHistoryArchive', N'CONSTRAINT',N'CK_TransactionHistoryArchive_TransactionType'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [TransactionType]=''p'' OR [TransactionType]=''s'' OR [TransactionType]=''w'' OR [TransactionType]=''P'' OR [TransactionType]=''S'' OR [TransactionType]=''W''' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'TransactionHistoryArchive', @level2type=N'CONSTRAINT',@level2name=N'CK_TransactionHistoryArchive_TransactionType'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Person].[FK_BusinessEntityAddress_Address_AddressID]') AND parent_object_id = OBJECT_ID(N'[Person].[BusinessEntityAddress]'))\r\nALTER TABLE [Person].[BusinessEntityAddress]  WITH CHECK ADD  CONSTRAINT [FK_BusinessEntityAddress_Address_AddressID] FOREIGN KEY([AddressID])\r\nREFERENCES [Person].[Address] ([AddressID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Person].[FK_BusinessEntityAddress_Address_AddressID]') AND parent_object_id = OBJECT_ID(N'[Person].[BusinessEntityAddress]'))\r\nALTER TABLE [Person].[BusinessEntityAddress] CHECK CONSTRAINT [FK_BusinessEntityAddress_Address_AddressID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Person].[FK_BusinessEntityAddress_AddressType_AddressTypeID]') AND parent_object_id = OBJECT_ID(N'[Person].[BusinessEntityAddress]'))\r\nALTER TABLE [Person].[BusinessEntityAddress]  WITH CHECK ADD  CONSTRAINT [FK_BusinessEntityAddress_AddressType_AddressTypeID] FOREIGN KEY([AddressTypeID])\r\nREFERENCES [Person].[AddressType] ([AddressTypeID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Person].[FK_BusinessEntityAddress_AddressType_AddressTypeID]') AND parent_object_id = OBJECT_ID(N'[Person].[BusinessEntityAddress]'))\r\nALTER TABLE [Person].[BusinessEntityAddress] CHECK CONSTRAINT [FK_BusinessEntityAddress_AddressType_AddressTypeID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Person].[FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[Person].[BusinessEntityAddress]'))\r\nALTER TABLE [Person].[BusinessEntityAddress]  WITH CHECK ADD  CONSTRAINT [FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\r\nREFERENCES [Person].[BusinessEntity] ([BusinessEntityID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Person].[FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[Person].[BusinessEntityAddress]'))\r\nALTER TABLE [Person].[BusinessEntityAddress] CHECK CONSTRAINT [FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityAddress', N'CONSTRAINT',N'DF_BusinessEntityAddress_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress', @level2type=N'CONSTRAINT',@level2name=N'DF_BusinessEntityAddress_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityAddress', N'CONSTRAINT',N'DF_BusinessEntityAddress_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress', @level2type=N'CONSTRAINT',@level2name=N'DF_BusinessEntityAddress_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityAddress', N'CONSTRAINT',N'PK_BusinessEntityAddress_BusinessEntityID_AddressID_AddressTypeID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress', @level2type=N'CONSTRAINT',@level2name=N'PK_BusinessEntityAddress_BusinessEntityID_AddressID_AddressTypeID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityAddress', N'CONSTRAINT',N'FK_BusinessEntityAddress_Address_AddressID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Address.AddressID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress', @level2type=N'CONSTRAINT',@level2name=N'FK_BusinessEntityAddress_Address_AddressID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityAddress', N'CONSTRAINT',N'FK_BusinessEntityAddress_AddressType_AddressTypeID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing AddressType.AddressTypeID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress', @level2type=N'CONSTRAINT',@level2name=N'FK_BusinessEntityAddress_AddressType_AddressTypeID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityAddress', N'CONSTRAINT',N'FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing BusinessEntity.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityAddress', @level2type=N'CONSTRAINT',@level2name=N'FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Purchasing].[FK_Vendor_BusinessEntity_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[Vendor]'))\r\nALTER TABLE [Purchasing].[Vendor]  WITH CHECK ADD  CONSTRAINT [FK_Vendor_BusinessEntity_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\r\nREFERENCES [Person].[BusinessEntity] ([BusinessEntityID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Purchasing].[FK_Vendor_BusinessEntity_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[Vendor]'))\r\nALTER TABLE [Purchasing].[Vendor] CHECK CONSTRAINT [FK_Vendor_BusinessEntity_BusinessEntityID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_Vendor_CreditRating]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[Vendor]'))\r\nALTER TABLE [Purchasing].[Vendor]  WITH CHECK ADD  CONSTRAINT [CK_Vendor_CreditRating] CHECK  (([CreditRating]>=(1) AND [CreditRating]<=(5)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_Vendor_CreditRating]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[Vendor]'))\r\nALTER TABLE [Purchasing].[Vendor] CHECK CONSTRAINT [CK_Vendor_CreditRating]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'Vendor', N'CONSTRAINT',N'DF_Vendor_PreferredVendorStatus'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 1 (TRUE)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'CONSTRAINT',@level2name=N'DF_Vendor_PreferredVendorStatus'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'Vendor', N'CONSTRAINT',N'DF_Vendor_ActiveFlag'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 1 (TRUE)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'CONSTRAINT',@level2name=N'DF_Vendor_ActiveFlag'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'Vendor', N'CONSTRAINT',N'DF_Vendor_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'CONSTRAINT',@level2name=N'DF_Vendor_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'Vendor', N'CONSTRAINT',N'PK_Vendor_BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'CONSTRAINT',@level2name=N'PK_Vendor_BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'Vendor', N'CONSTRAINT',N'FK_Vendor_BusinessEntity_BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing BusinessEntity.BusinessEntityID' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'CONSTRAINT',@level2name=N'FK_Vendor_BusinessEntity_BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'Vendor', N'CONSTRAINT',N'CK_Vendor_CreditRating'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [CreditRating] BETWEEN (1) AND (5)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'Vendor', @level2type=N'CONSTRAINT',@level2name=N'CK_Vendor_CreditRating'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Purchasing].[FK_ProductVendor_Product_ProductID]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[ProductVendor]'))\r\nALTER TABLE [Purchasing].[ProductVendor]  WITH CHECK ADD  CONSTRAINT [FK_ProductVendor_Product_ProductID] FOREIGN KEY([ProductID])\r\nREFERENCES [Production].[Product] ([ProductID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Purchasing].[FK_ProductVendor_Product_ProductID]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[ProductVendor]'))\r\nALTER TABLE [Purchasing].[ProductVendor] CHECK CONSTRAINT [FK_ProductVendor_Product_ProductID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Purchasing].[FK_ProductVendor_UnitMeasure_UnitMeasureCode]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[ProductVendor]'))\r\nALTER TABLE [Purchasing].[ProductVendor]  WITH CHECK ADD  CONSTRAINT [FK_ProductVendor_UnitMeasure_UnitMeasureCode] FOREIGN KEY([UnitMeasureCode])\r\nREFERENCES [Production].[UnitMeasure] ([UnitMeasureCode])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Purchasing].[FK_ProductVendor_UnitMeasure_UnitMeasureCode]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[ProductVendor]'))\r\nALTER TABLE [Purchasing].[ProductVendor] CHECK CONSTRAINT [FK_ProductVendor_UnitMeasure_UnitMeasureCode]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Purchasing].[FK_ProductVendor_Vendor_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[ProductVendor]'))\r\nALTER TABLE [Purchasing].[ProductVendor]  WITH CHECK ADD  CONSTRAINT [FK_ProductVendor_Vendor_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\r\nREFERENCES [Purchasing].[Vendor] ([BusinessEntityID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Purchasing].[FK_ProductVendor_Vendor_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[ProductVendor]'))\r\nALTER TABLE [Purchasing].[ProductVendor] CHECK CONSTRAINT [FK_ProductVendor_Vendor_BusinessEntityID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_ProductVendor_AverageLeadTime]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[ProductVendor]'))\r\nALTER TABLE [Purchasing].[ProductVendor]  WITH CHECK ADD  CONSTRAINT [CK_ProductVendor_AverageLeadTime] CHECK  (([AverageLeadTime]>=(1)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_ProductVendor_AverageLeadTime]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[ProductVendor]'))\r\nALTER TABLE [Purchasing].[ProductVendor] CHECK CONSTRAINT [CK_ProductVendor_AverageLeadTime]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_ProductVendor_LastReceiptCost]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[ProductVendor]'))\r\nALTER TABLE [Purchasing].[ProductVendor]  WITH CHECK ADD  CONSTRAINT [CK_ProductVendor_LastReceiptCost] CHECK  (([LastReceiptCost]>(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_ProductVendor_LastReceiptCost]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[ProductVendor]'))\r\nALTER TABLE [Purchasing].[ProductVendor] CHECK CONSTRAINT [CK_ProductVendor_LastReceiptCost]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_ProductVendor_MaxOrderQty]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[ProductVendor]'))\r\nALTER TABLE [Purchasing].[ProductVendor]  WITH CHECK ADD  CONSTRAINT [CK_ProductVendor_MaxOrderQty] CHECK  (([MaxOrderQty]>=(1)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_ProductVendor_MaxOrderQty]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[ProductVendor]'))\r\nALTER TABLE [Purchasing].[ProductVendor] CHECK CONSTRAINT [CK_ProductVendor_MaxOrderQty]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_ProductVendor_MinOrderQty]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[ProductVendor]'))\r\nALTER TABLE [Purchasing].[ProductVendor]  WITH CHECK ADD  CONSTRAINT [CK_ProductVendor_MinOrderQty] CHECK  (([MinOrderQty]>=(1)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_ProductVendor_MinOrderQty]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[ProductVendor]'))\r\nALTER TABLE [Purchasing].[ProductVendor] CHECK CONSTRAINT [CK_ProductVendor_MinOrderQty]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_ProductVendor_OnOrderQty]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[ProductVendor]'))\r\nALTER TABLE [Purchasing].[ProductVendor]  WITH CHECK ADD  CONSTRAINT [CK_ProductVendor_OnOrderQty] CHECK  (([OnOrderQty]>=(0)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_ProductVendor_OnOrderQty]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[ProductVendor]'))\r\nALTER TABLE [Purchasing].[ProductVendor] CHECK CONSTRAINT [CK_ProductVendor_OnOrderQty]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_ProductVendor_StandardPrice]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[ProductVendor]'))\r\nALTER TABLE [Purchasing].[ProductVendor]  WITH CHECK ADD  CONSTRAINT [CK_ProductVendor_StandardPrice] CHECK  (([StandardPrice]>(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_ProductVendor_StandardPrice]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[ProductVendor]'))\r\nALTER TABLE [Purchasing].[ProductVendor] CHECK CONSTRAINT [CK_ProductVendor_StandardPrice]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ProductVendor', N'CONSTRAINT',N'DF_ProductVendor_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'CONSTRAINT',@level2name=N'DF_ProductVendor_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ProductVendor', N'CONSTRAINT',N'PK_ProductVendor_ProductID_BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'CONSTRAINT',@level2name=N'PK_ProductVendor_ProductID_BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ProductVendor', N'CONSTRAINT',N'FK_ProductVendor_Product_ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductVendor_Product_ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ProductVendor', N'CONSTRAINT',N'FK_ProductVendor_UnitMeasure_UnitMeasureCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing UnitMeasure.UnitMeasureCode.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductVendor_UnitMeasure_UnitMeasureCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ProductVendor', N'CONSTRAINT',N'FK_ProductVendor_Vendor_BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Vendor.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'CONSTRAINT',@level2name=N'FK_ProductVendor_Vendor_BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ProductVendor', N'CONSTRAINT',N'CK_ProductVendor_AverageLeadTime'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [AverageLeadTime] >= (1)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'CONSTRAINT',@level2name=N'CK_ProductVendor_AverageLeadTime'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ProductVendor', N'CONSTRAINT',N'CK_ProductVendor_LastReceiptCost'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [LastReceiptCost] > (0.00)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'CONSTRAINT',@level2name=N'CK_ProductVendor_LastReceiptCost'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ProductVendor', N'CONSTRAINT',N'CK_ProductVendor_MaxOrderQty'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [MaxOrderQty] >= (1)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'CONSTRAINT',@level2name=N'CK_ProductVendor_MaxOrderQty'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ProductVendor', N'CONSTRAINT',N'CK_ProductVendor_MinOrderQty'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [MinOrderQty] >= (1)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'CONSTRAINT',@level2name=N'CK_ProductVendor_MinOrderQty'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ProductVendor', N'CONSTRAINT',N'CK_ProductVendor_OnOrderQty'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [OnOrderQty] >= (0)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'CONSTRAINT',@level2name=N'CK_ProductVendor_OnOrderQty'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'ProductVendor', N'CONSTRAINT',N'CK_ProductVendor_StandardPrice'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [StandardPrice] > (0.00)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'ProductVendor', @level2type=N'CONSTRAINT',@level2name=N'CK_ProductVendor_StandardPrice'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'ContactType', N'CONSTRAINT',N'DF_ContactType_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'ContactType', @level2type=N'CONSTRAINT',@level2name=N'DF_ContactType_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'ContactType', N'CONSTRAINT',N'PK_ContactType_ContactTypeID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'ContactType', @level2type=N'CONSTRAINT',@level2name=N'PK_ContactType_ContactTypeID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Person].[FK_BusinessEntityContact_BusinessEntity_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[Person].[BusinessEntityContact]'))\r\nALTER TABLE [Person].[BusinessEntityContact]  WITH CHECK ADD  CONSTRAINT [FK_BusinessEntityContact_BusinessEntity_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\r\nREFERENCES [Person].[BusinessEntity] ([BusinessEntityID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Person].[FK_BusinessEntityContact_BusinessEntity_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[Person].[BusinessEntityContact]'))\r\nALTER TABLE [Person].[BusinessEntityContact] CHECK CONSTRAINT [FK_BusinessEntityContact_BusinessEntity_BusinessEntityID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Person].[FK_BusinessEntityContact_ContactType_ContactTypeID]') AND parent_object_id = OBJECT_ID(N'[Person].[BusinessEntityContact]'))\r\nALTER TABLE [Person].[BusinessEntityContact]  WITH CHECK ADD  CONSTRAINT [FK_BusinessEntityContact_ContactType_ContactTypeID] FOREIGN KEY([ContactTypeID])\r\nREFERENCES [Person].[ContactType] ([ContactTypeID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Person].[FK_BusinessEntityContact_ContactType_ContactTypeID]') AND parent_object_id = OBJECT_ID(N'[Person].[BusinessEntityContact]'))\r\nALTER TABLE [Person].[BusinessEntityContact] CHECK CONSTRAINT [FK_BusinessEntityContact_ContactType_ContactTypeID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Person].[FK_BusinessEntityContact_Person_PersonID]') AND parent_object_id = OBJECT_ID(N'[Person].[BusinessEntityContact]'))\r\nALTER TABLE [Person].[BusinessEntityContact]  WITH CHECK ADD  CONSTRAINT [FK_BusinessEntityContact_Person_PersonID] FOREIGN KEY([PersonID])\r\nREFERENCES [Person].[Person] ([BusinessEntityID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Person].[FK_BusinessEntityContact_Person_PersonID]') AND parent_object_id = OBJECT_ID(N'[Person].[BusinessEntityContact]'))\r\nALTER TABLE [Person].[BusinessEntityContact] CHECK CONSTRAINT [FK_BusinessEntityContact_Person_PersonID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityContact', N'CONSTRAINT',N'DF_BusinessEntityContact_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact', @level2type=N'CONSTRAINT',@level2name=N'DF_BusinessEntityContact_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityContact', N'CONSTRAINT',N'DF_BusinessEntityContact_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact', @level2type=N'CONSTRAINT',@level2name=N'DF_BusinessEntityContact_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityContact', N'CONSTRAINT',N'PK_BusinessEntityContact_BusinessEntityID_PersonID_ContactTypeID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact', @level2type=N'CONSTRAINT',@level2name=N'PK_BusinessEntityContact_BusinessEntityID_PersonID_ContactTypeID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityContact', N'CONSTRAINT',N'FK_BusinessEntityContact_BusinessEntity_BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing BusinessEntity.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact', @level2type=N'CONSTRAINT',@level2name=N'FK_BusinessEntityContact_BusinessEntity_BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityContact', N'CONSTRAINT',N'FK_BusinessEntityContact_ContactType_ContactTypeID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing ContactType.ContactTypeID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact', @level2type=N'CONSTRAINT',@level2name=N'FK_BusinessEntityContact_ContactType_ContactTypeID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'BusinessEntityContact', N'CONSTRAINT',N'FK_BusinessEntityContact_Person_PersonID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Person.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'BusinessEntityContact', @level2type=N'CONSTRAINT',@level2name=N'FK_BusinessEntityContact_Person_PersonID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Currency', N'CONSTRAINT',N'DF_Currency_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Currency', @level2type=N'CONSTRAINT',@level2name=N'DF_Currency_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Currency', N'CONSTRAINT',N'PK_Currency_CurrencyCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Currency', @level2type=N'CONSTRAINT',@level2name=N'PK_Currency_CurrencyCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_CountryRegionCurrency_CountryRegion_CountryRegionCode]') AND parent_object_id = OBJECT_ID(N'[Sales].[CountryRegionCurrency]'))\r\nALTER TABLE [Sales].[CountryRegionCurrency]  WITH CHECK ADD  CONSTRAINT [FK_CountryRegionCurrency_CountryRegion_CountryRegionCode] FOREIGN KEY([CountryRegionCode])\r\nREFERENCES [Person].[CountryRegion] ([CountryRegionCode])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_CountryRegionCurrency_CountryRegion_CountryRegionCode]') AND parent_object_id = OBJECT_ID(N'[Sales].[CountryRegionCurrency]'))\r\nALTER TABLE [Sales].[CountryRegionCurrency] CHECK CONSTRAINT [FK_CountryRegionCurrency_CountryRegion_CountryRegionCode]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_CountryRegionCurrency_Currency_CurrencyCode]') AND parent_object_id = OBJECT_ID(N'[Sales].[CountryRegionCurrency]'))\r\nALTER TABLE [Sales].[CountryRegionCurrency]  WITH CHECK ADD  CONSTRAINT [FK_CountryRegionCurrency_Currency_CurrencyCode] FOREIGN KEY([CurrencyCode])\r\nREFERENCES [Sales].[Currency] ([CurrencyCode])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_CountryRegionCurrency_Currency_CurrencyCode]') AND parent_object_id = OBJECT_ID(N'[Sales].[CountryRegionCurrency]'))\r\nALTER TABLE [Sales].[CountryRegionCurrency] CHECK CONSTRAINT [FK_CountryRegionCurrency_Currency_CurrencyCode]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CountryRegionCurrency', N'CONSTRAINT',N'DF_CountryRegionCurrency_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CountryRegionCurrency', @level2type=N'CONSTRAINT',@level2name=N'DF_CountryRegionCurrency_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CountryRegionCurrency', N'CONSTRAINT',N'PK_CountryRegionCurrency_CountryRegionCode_CurrencyCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CountryRegionCurrency', @level2type=N'CONSTRAINT',@level2name=N'PK_CountryRegionCurrency_CountryRegionCode_CurrencyCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CountryRegionCurrency', N'CONSTRAINT',N'FK_CountryRegionCurrency_CountryRegion_CountryRegionCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing CountryRegion.CountryRegionCode.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CountryRegionCurrency', @level2type=N'CONSTRAINT',@level2name=N'FK_CountryRegionCurrency_CountryRegion_CountryRegionCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CountryRegionCurrency', N'CONSTRAINT',N'FK_CountryRegionCurrency_Currency_CurrencyCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Currency.CurrencyCode.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CountryRegionCurrency', @level2type=N'CONSTRAINT',@level2name=N'FK_CountryRegionCurrency_Currency_CurrencyCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_WorkOrder_Product_ProductID]') AND parent_object_id = OBJECT_ID(N'[Production].[WorkOrder]'))\r\nALTER TABLE [Production].[WorkOrder]  WITH CHECK ADD  CONSTRAINT [FK_WorkOrder_Product_ProductID] FOREIGN KEY([ProductID])\r\nREFERENCES [Production].[Product] ([ProductID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_WorkOrder_Product_ProductID]') AND parent_object_id = OBJECT_ID(N'[Production].[WorkOrder]'))\r\nALTER TABLE [Production].[WorkOrder] CHECK CONSTRAINT [FK_WorkOrder_Product_ProductID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_WorkOrder_ScrapReason_ScrapReasonID]') AND parent_object_id = OBJECT_ID(N'[Production].[WorkOrder]'))\r\nALTER TABLE [Production].[WorkOrder]  WITH CHECK ADD  CONSTRAINT [FK_WorkOrder_ScrapReason_ScrapReasonID] FOREIGN KEY([ScrapReasonID])\r\nREFERENCES [Production].[ScrapReason] ([ScrapReasonID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_WorkOrder_ScrapReason_ScrapReasonID]') AND parent_object_id = OBJECT_ID(N'[Production].[WorkOrder]'))\r\nALTER TABLE [Production].[WorkOrder] CHECK CONSTRAINT [FK_WorkOrder_ScrapReason_ScrapReasonID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_WorkOrder_EndDate]') AND parent_object_id = OBJECT_ID(N'[Production].[WorkOrder]'))\r\nALTER TABLE [Production].[WorkOrder]  WITH CHECK ADD  CONSTRAINT [CK_WorkOrder_EndDate] CHECK  (([EndDate]>=[StartDate] OR [EndDate] IS NULL))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_WorkOrder_EndDate]') AND parent_object_id = OBJECT_ID(N'[Production].[WorkOrder]'))\r\nALTER TABLE [Production].[WorkOrder] CHECK CONSTRAINT [CK_WorkOrder_EndDate]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_WorkOrder_OrderQty]') AND parent_object_id = OBJECT_ID(N'[Production].[WorkOrder]'))\r\nALTER TABLE [Production].[WorkOrder]  WITH CHECK ADD  CONSTRAINT [CK_WorkOrder_OrderQty] CHECK  (([OrderQty]>(0)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_WorkOrder_OrderQty]') AND parent_object_id = OBJECT_ID(N'[Production].[WorkOrder]'))\r\nALTER TABLE [Production].[WorkOrder] CHECK CONSTRAINT [CK_WorkOrder_OrderQty]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_WorkOrder_ScrappedQty]') AND parent_object_id = OBJECT_ID(N'[Production].[WorkOrder]'))\r\nALTER TABLE [Production].[WorkOrder]  WITH CHECK ADD  CONSTRAINT [CK_WorkOrder_ScrappedQty] CHECK  (([ScrappedQty]>=(0)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_WorkOrder_ScrappedQty]') AND parent_object_id = OBJECT_ID(N'[Production].[WorkOrder]'))\r\nALTER TABLE [Production].[WorkOrder] CHECK CONSTRAINT [CK_WorkOrder_ScrappedQty]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrder', N'CONSTRAINT',N'DF_WorkOrder_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'CONSTRAINT',@level2name=N'DF_WorkOrder_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrder', N'CONSTRAINT',N'PK_WorkOrder_WorkOrderID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'CONSTRAINT',@level2name=N'PK_WorkOrder_WorkOrderID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrder', N'CONSTRAINT',N'FK_WorkOrder_Product_ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'CONSTRAINT',@level2name=N'FK_WorkOrder_Product_ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrder', N'CONSTRAINT',N'FK_WorkOrder_ScrapReason_ScrapReasonID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing ScrapReason.ScrapReasonID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'CONSTRAINT',@level2name=N'FK_WorkOrder_ScrapReason_ScrapReasonID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrder', N'CONSTRAINT',N'CK_WorkOrder_EndDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [EndDate] >= [StartDate] OR [EndDate] IS NULL' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'CONSTRAINT',@level2name=N'CK_WorkOrder_EndDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrder', N'CONSTRAINT',N'CK_WorkOrder_OrderQty'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [OrderQty] > (0)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'CONSTRAINT',@level2name=N'CK_WorkOrder_OrderQty'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrder', N'CONSTRAINT',N'CK_WorkOrder_ScrappedQty'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ScrappedQty] >= (0)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrder', @level2type=N'CONSTRAINT',@level2name=N'CK_WorkOrder_ScrappedQty'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Purchasing].[FK_PurchaseOrderHeader_Employee_EmployeeID]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderHeader]'))\r\nALTER TABLE [Purchasing].[PurchaseOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_PurchaseOrderHeader_Employee_EmployeeID] FOREIGN KEY([EmployeeID])\r\nREFERENCES [HumanResources].[Employee] ([BusinessEntityID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Purchasing].[FK_PurchaseOrderHeader_Employee_EmployeeID]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderHeader]'))\r\nALTER TABLE [Purchasing].[PurchaseOrderHeader] CHECK CONSTRAINT [FK_PurchaseOrderHeader_Employee_EmployeeID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Purchasing].[FK_PurchaseOrderHeader_ShipMethod_ShipMethodID]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderHeader]'))\r\nALTER TABLE [Purchasing].[PurchaseOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_PurchaseOrderHeader_ShipMethod_ShipMethodID] FOREIGN KEY([ShipMethodID])\r\nREFERENCES [Purchasing].[ShipMethod] ([ShipMethodID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Purchasing].[FK_PurchaseOrderHeader_ShipMethod_ShipMethodID]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderHeader]'))\r\nALTER TABLE [Purchasing].[PurchaseOrderHeader] CHECK CONSTRAINT [FK_PurchaseOrderHeader_ShipMethod_ShipMethodID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Purchasing].[FK_PurchaseOrderHeader_Vendor_VendorID]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderHeader]'))\r\nALTER TABLE [Purchasing].[PurchaseOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_PurchaseOrderHeader_Vendor_VendorID] FOREIGN KEY([VendorID])\r\nREFERENCES [Purchasing].[Vendor] ([BusinessEntityID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Purchasing].[FK_PurchaseOrderHeader_Vendor_VendorID]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderHeader]'))\r\nALTER TABLE [Purchasing].[PurchaseOrderHeader] CHECK CONSTRAINT [FK_PurchaseOrderHeader_Vendor_VendorID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_PurchaseOrderHeader_Freight]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderHeader]'))\r\nALTER TABLE [Purchasing].[PurchaseOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_PurchaseOrderHeader_Freight] CHECK  (([Freight]>=(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_PurchaseOrderHeader_Freight]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderHeader]'))\r\nALTER TABLE [Purchasing].[PurchaseOrderHeader] CHECK CONSTRAINT [CK_PurchaseOrderHeader_Freight]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_PurchaseOrderHeader_ShipDate]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderHeader]'))\r\nALTER TABLE [Purchasing].[PurchaseOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_PurchaseOrderHeader_ShipDate] CHECK  (([ShipDate]>=[OrderDate] OR [ShipDate] IS NULL))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_PurchaseOrderHeader_ShipDate]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderHeader]'))\r\nALTER TABLE [Purchasing].[PurchaseOrderHeader] CHECK CONSTRAINT [CK_PurchaseOrderHeader_ShipDate]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_PurchaseOrderHeader_Status]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderHeader]'))\r\nALTER TABLE [Purchasing].[PurchaseOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_PurchaseOrderHeader_Status] CHECK  (([Status]>=(1) AND [Status]<=(4)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_PurchaseOrderHeader_Status]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderHeader]'))\r\nALTER TABLE [Purchasing].[PurchaseOrderHeader] CHECK CONSTRAINT [CK_PurchaseOrderHeader_Status]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_PurchaseOrderHeader_SubTotal]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderHeader]'))\r\nALTER TABLE [Purchasing].[PurchaseOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_PurchaseOrderHeader_SubTotal] CHECK  (([SubTotal]>=(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_PurchaseOrderHeader_SubTotal]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderHeader]'))\r\nALTER TABLE [Purchasing].[PurchaseOrderHeader] CHECK CONSTRAINT [CK_PurchaseOrderHeader_SubTotal]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_PurchaseOrderHeader_TaxAmt]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderHeader]'))\r\nALTER TABLE [Purchasing].[PurchaseOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_PurchaseOrderHeader_TaxAmt] CHECK  (([TaxAmt]>=(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_PurchaseOrderHeader_TaxAmt]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderHeader]'))\r\nALTER TABLE [Purchasing].[PurchaseOrderHeader] CHECK CONSTRAINT [CK_PurchaseOrderHeader_TaxAmt]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'CONSTRAINT',N'DF_PurchaseOrderHeader_RevisionNumber'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_PurchaseOrderHeader_RevisionNumber'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'CONSTRAINT',N'DF_PurchaseOrderHeader_Status'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 1' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_PurchaseOrderHeader_Status'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'CONSTRAINT',N'DF_PurchaseOrderHeader_OrderDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_PurchaseOrderHeader_OrderDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'CONSTRAINT',N'DF_PurchaseOrderHeader_SubTotal'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_PurchaseOrderHeader_SubTotal'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'CONSTRAINT',N'DF_PurchaseOrderHeader_TaxAmt'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_PurchaseOrderHeader_TaxAmt'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'CONSTRAINT',N'DF_PurchaseOrderHeader_Freight'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_PurchaseOrderHeader_Freight'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'CONSTRAINT',N'DF_PurchaseOrderHeader_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_PurchaseOrderHeader_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'CONSTRAINT',N'PK_PurchaseOrderHeader_PurchaseOrderID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'PK_PurchaseOrderHeader_PurchaseOrderID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'CONSTRAINT',N'FK_PurchaseOrderHeader_Employee_EmployeeID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Employee.EmployeeID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'FK_PurchaseOrderHeader_Employee_EmployeeID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'CONSTRAINT',N'FK_PurchaseOrderHeader_ShipMethod_ShipMethodID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing ShipMethod.ShipMethodID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'FK_PurchaseOrderHeader_ShipMethod_ShipMethodID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'CONSTRAINT',N'FK_PurchaseOrderHeader_Vendor_VendorID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Vendor.VendorID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'FK_PurchaseOrderHeader_Vendor_VendorID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'CONSTRAINT',N'CK_PurchaseOrderHeader_Freight'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Freight] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'CK_PurchaseOrderHeader_Freight'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'CONSTRAINT',N'CK_PurchaseOrderHeader_ShipDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ShipDate] >= [OrderDate] OR [ShipDate] IS NULL' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'CK_PurchaseOrderHeader_ShipDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'CONSTRAINT',N'CK_PurchaseOrderHeader_Status'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Status] BETWEEN (1) AND (4)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'CK_PurchaseOrderHeader_Status'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'CONSTRAINT',N'CK_PurchaseOrderHeader_SubTotal'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [SubTotal] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'CK_PurchaseOrderHeader_SubTotal'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderHeader', N'CONSTRAINT',N'CK_PurchaseOrderHeader_TaxAmt'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [TaxAmt] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'CK_PurchaseOrderHeader_TaxAmt'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Purchasing].[FK_PurchaseOrderDetail_Product_ProductID]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderDetail]'))\r\nALTER TABLE [Purchasing].[PurchaseOrderDetail]  WITH CHECK ADD  CONSTRAINT [FK_PurchaseOrderDetail_Product_ProductID] FOREIGN KEY([ProductID])\r\nREFERENCES [Production].[Product] ([ProductID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Purchasing].[FK_PurchaseOrderDetail_Product_ProductID]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderDetail]'))\r\nALTER TABLE [Purchasing].[PurchaseOrderDetail] CHECK CONSTRAINT [FK_PurchaseOrderDetail_Product_ProductID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Purchasing].[FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderDetail]'))\r\nALTER TABLE [Purchasing].[PurchaseOrderDetail]  WITH CHECK ADD  CONSTRAINT [FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID] FOREIGN KEY([PurchaseOrderID])\r\nREFERENCES [Purchasing].[PurchaseOrderHeader] ([PurchaseOrderID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Purchasing].[FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderDetail]'))\r\nALTER TABLE [Purchasing].[PurchaseOrderDetail] CHECK CONSTRAINT [FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_PurchaseOrderDetail_OrderQty]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderDetail]'))\r\nALTER TABLE [Purchasing].[PurchaseOrderDetail]  WITH CHECK ADD  CONSTRAINT [CK_PurchaseOrderDetail_OrderQty] CHECK  (([OrderQty]>(0)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_PurchaseOrderDetail_OrderQty]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderDetail]'))\r\nALTER TABLE [Purchasing].[PurchaseOrderDetail] CHECK CONSTRAINT [CK_PurchaseOrderDetail_OrderQty]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_PurchaseOrderDetail_ReceivedQty]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderDetail]'))\r\nALTER TABLE [Purchasing].[PurchaseOrderDetail]  WITH CHECK ADD  CONSTRAINT [CK_PurchaseOrderDetail_ReceivedQty] CHECK  (([ReceivedQty]>=(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_PurchaseOrderDetail_ReceivedQty]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderDetail]'))\r\nALTER TABLE [Purchasing].[PurchaseOrderDetail] CHECK CONSTRAINT [CK_PurchaseOrderDetail_ReceivedQty]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_PurchaseOrderDetail_RejectedQty]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderDetail]'))\r\nALTER TABLE [Purchasing].[PurchaseOrderDetail]  WITH CHECK ADD  CONSTRAINT [CK_PurchaseOrderDetail_RejectedQty] CHECK  (([RejectedQty]>=(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_PurchaseOrderDetail_RejectedQty]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderDetail]'))\r\nALTER TABLE [Purchasing].[PurchaseOrderDetail] CHECK CONSTRAINT [CK_PurchaseOrderDetail_RejectedQty]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_PurchaseOrderDetail_UnitPrice]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderDetail]'))\r\nALTER TABLE [Purchasing].[PurchaseOrderDetail]  WITH CHECK ADD  CONSTRAINT [CK_PurchaseOrderDetail_UnitPrice] CHECK  (([UnitPrice]>=(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Purchasing].[CK_PurchaseOrderDetail_UnitPrice]') AND parent_object_id = OBJECT_ID(N'[Purchasing].[PurchaseOrderDetail]'))\r\nALTER TABLE [Purchasing].[PurchaseOrderDetail] CHECK CONSTRAINT [CK_PurchaseOrderDetail_UnitPrice]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderDetail', N'CONSTRAINT',N'DF_PurchaseOrderDetail_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'DF_PurchaseOrderDetail_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderDetail', N'CONSTRAINT',N'PK_PurchaseOrderDetail_PurchaseOrderID_PurchaseOrderDetailID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'PK_PurchaseOrderDetail_PurchaseOrderID_PurchaseOrderDetailID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderDetail', N'CONSTRAINT',N'FK_PurchaseOrderDetail_Product_ProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Product.ProductID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'FK_PurchaseOrderDetail_Product_ProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderDetail', N'CONSTRAINT',N'FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing PurchaseOrderHeader.PurchaseOrderID.' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderDetail', N'CONSTRAINT',N'CK_PurchaseOrderDetail_OrderQty'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [OrderQty] > (0)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'CK_PurchaseOrderDetail_OrderQty'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderDetail', N'CONSTRAINT',N'CK_PurchaseOrderDetail_ReceivedQty'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ReceivedQty] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'CK_PurchaseOrderDetail_ReceivedQty'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderDetail', N'CONSTRAINT',N'CK_PurchaseOrderDetail_RejectedQty'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [RejectedQty] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'CK_PurchaseOrderDetail_RejectedQty'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Purchasing', N'TABLE',N'PurchaseOrderDetail', N'CONSTRAINT',N'CK_PurchaseOrderDetail_UnitPrice'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [UnitPrice] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Purchasing', @level1type=N'TABLE',@level1name=N'PurchaseOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'CK_PurchaseOrderDetail_UnitPrice'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CreditCard', N'CONSTRAINT',N'DF_CreditCard_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CreditCard', @level2type=N'CONSTRAINT',@level2name=N'DF_CreditCard_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CreditCard', N'CONSTRAINT',N'PK_CreditCard_CreditCardID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CreditCard', @level2type=N'CONSTRAINT',@level2name=N'PK_CreditCard_CreditCardID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_WorkOrderRouting_Location_LocationID]') AND parent_object_id = OBJECT_ID(N'[Production].[WorkOrderRouting]'))\r\nALTER TABLE [Production].[WorkOrderRouting]  WITH CHECK ADD  CONSTRAINT [FK_WorkOrderRouting_Location_LocationID] FOREIGN KEY([LocationID])\r\nREFERENCES [Production].[Location] ([LocationID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_WorkOrderRouting_Location_LocationID]') AND parent_object_id = OBJECT_ID(N'[Production].[WorkOrderRouting]'))\r\nALTER TABLE [Production].[WorkOrderRouting] CHECK CONSTRAINT [FK_WorkOrderRouting_Location_LocationID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_WorkOrderRouting_WorkOrder_WorkOrderID]') AND parent_object_id = OBJECT_ID(N'[Production].[WorkOrderRouting]'))\r\nALTER TABLE [Production].[WorkOrderRouting]  WITH CHECK ADD  CONSTRAINT [FK_WorkOrderRouting_WorkOrder_WorkOrderID] FOREIGN KEY([WorkOrderID])\r\nREFERENCES [Production].[WorkOrder] ([WorkOrderID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Production].[FK_WorkOrderRouting_WorkOrder_WorkOrderID]') AND parent_object_id = OBJECT_ID(N'[Production].[WorkOrderRouting]'))\r\nALTER TABLE [Production].[WorkOrderRouting] CHECK CONSTRAINT [FK_WorkOrderRouting_WorkOrder_WorkOrderID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_WorkOrderRouting_ActualCost]') AND parent_object_id = OBJECT_ID(N'[Production].[WorkOrderRouting]'))\r\nALTER TABLE [Production].[WorkOrderRouting]  WITH CHECK ADD  CONSTRAINT [CK_WorkOrderRouting_ActualCost] CHECK  (([ActualCost]>(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_WorkOrderRouting_ActualCost]') AND parent_object_id = OBJECT_ID(N'[Production].[WorkOrderRouting]'))\r\nALTER TABLE [Production].[WorkOrderRouting] CHECK CONSTRAINT [CK_WorkOrderRouting_ActualCost]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_WorkOrderRouting_ActualEndDate]') AND parent_object_id = OBJECT_ID(N'[Production].[WorkOrderRouting]'))\r\nALTER TABLE [Production].[WorkOrderRouting]  WITH CHECK ADD  CONSTRAINT [CK_WorkOrderRouting_ActualEndDate] CHECK  (([ActualEndDate]>=[ActualStartDate] OR [ActualEndDate] IS NULL OR [ActualStartDate] IS NULL))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_WorkOrderRouting_ActualEndDate]') AND parent_object_id = OBJECT_ID(N'[Production].[WorkOrderRouting]'))\r\nALTER TABLE [Production].[WorkOrderRouting] CHECK CONSTRAINT [CK_WorkOrderRouting_ActualEndDate]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_WorkOrderRouting_ActualResourceHrs]') AND parent_object_id = OBJECT_ID(N'[Production].[WorkOrderRouting]'))\r\nALTER TABLE [Production].[WorkOrderRouting]  WITH CHECK ADD  CONSTRAINT [CK_WorkOrderRouting_ActualResourceHrs] CHECK  (([ActualResourceHrs]>=(0.0000)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_WorkOrderRouting_ActualResourceHrs]') AND parent_object_id = OBJECT_ID(N'[Production].[WorkOrderRouting]'))\r\nALTER TABLE [Production].[WorkOrderRouting] CHECK CONSTRAINT [CK_WorkOrderRouting_ActualResourceHrs]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_WorkOrderRouting_PlannedCost]') AND parent_object_id = OBJECT_ID(N'[Production].[WorkOrderRouting]'))\r\nALTER TABLE [Production].[WorkOrderRouting]  WITH CHECK ADD  CONSTRAINT [CK_WorkOrderRouting_PlannedCost] CHECK  (([PlannedCost]>(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_WorkOrderRouting_PlannedCost]') AND parent_object_id = OBJECT_ID(N'[Production].[WorkOrderRouting]'))\r\nALTER TABLE [Production].[WorkOrderRouting] CHECK CONSTRAINT [CK_WorkOrderRouting_PlannedCost]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_WorkOrderRouting_ScheduledEndDate]') AND parent_object_id = OBJECT_ID(N'[Production].[WorkOrderRouting]'))\r\nALTER TABLE [Production].[WorkOrderRouting]  WITH CHECK ADD  CONSTRAINT [CK_WorkOrderRouting_ScheduledEndDate] CHECK  (([ScheduledEndDate]>=[ScheduledStartDate]))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Production].[CK_WorkOrderRouting_ScheduledEndDate]') AND parent_object_id = OBJECT_ID(N'[Production].[WorkOrderRouting]'))\r\nALTER TABLE [Production].[WorkOrderRouting] CHECK CONSTRAINT [CK_WorkOrderRouting_ScheduledEndDate]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrderRouting', N'CONSTRAINT',N'DF_WorkOrderRouting_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'CONSTRAINT',@level2name=N'DF_WorkOrderRouting_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrderRouting', N'CONSTRAINT',N'PK_WorkOrderRouting_WorkOrderID_ProductID_OperationSequence'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'CONSTRAINT',@level2name=N'PK_WorkOrderRouting_WorkOrderID_ProductID_OperationSequence'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrderRouting', N'CONSTRAINT',N'FK_WorkOrderRouting_Location_LocationID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Location.LocationID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'CONSTRAINT',@level2name=N'FK_WorkOrderRouting_Location_LocationID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrderRouting', N'CONSTRAINT',N'FK_WorkOrderRouting_WorkOrder_WorkOrderID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing WorkOrder.WorkOrderID.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'CONSTRAINT',@level2name=N'FK_WorkOrderRouting_WorkOrder_WorkOrderID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrderRouting', N'CONSTRAINT',N'CK_WorkOrderRouting_ActualCost'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ActualCost] > (0.00)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'CONSTRAINT',@level2name=N'CK_WorkOrderRouting_ActualCost'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrderRouting', N'CONSTRAINT',N'CK_WorkOrderRouting_ActualEndDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ActualEndDate] >= [ActualStartDate] OR [ActualEndDate] IS NULL OR [ActualStartDate] IS NULL' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'CONSTRAINT',@level2name=N'CK_WorkOrderRouting_ActualEndDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrderRouting', N'CONSTRAINT',N'CK_WorkOrderRouting_ActualResourceHrs'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ActualResourceHrs] >= (0.0000)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'CONSTRAINT',@level2name=N'CK_WorkOrderRouting_ActualResourceHrs'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrderRouting', N'CONSTRAINT',N'CK_WorkOrderRouting_PlannedCost'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [PlannedCost] > (0.00)' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'CONSTRAINT',@level2name=N'CK_WorkOrderRouting_PlannedCost'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'TABLE',N'WorkOrderRouting', N'CONSTRAINT',N'CK_WorkOrderRouting_ScheduledEndDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ScheduledEndDate] >= [ScheduledStartDate]' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'TABLE',@level1name=N'WorkOrderRouting', @level2type=N'CONSTRAINT',@level2name=N'CK_WorkOrderRouting_ScheduledEndDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_CurrencyRate_Currency_FromCurrencyCode]') AND parent_object_id = OBJECT_ID(N'[Sales].[CurrencyRate]'))\r\nALTER TABLE [Sales].[CurrencyRate]  WITH CHECK ADD  CONSTRAINT [FK_CurrencyRate_Currency_FromCurrencyCode] FOREIGN KEY([FromCurrencyCode])\r\nREFERENCES [Sales].[Currency] ([CurrencyCode])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_CurrencyRate_Currency_FromCurrencyCode]') AND parent_object_id = OBJECT_ID(N'[Sales].[CurrencyRate]'))\r\nALTER TABLE [Sales].[CurrencyRate] CHECK CONSTRAINT [FK_CurrencyRate_Currency_FromCurrencyCode]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_CurrencyRate_Currency_ToCurrencyCode]') AND parent_object_id = OBJECT_ID(N'[Sales].[CurrencyRate]'))\r\nALTER TABLE [Sales].[CurrencyRate]  WITH CHECK ADD  CONSTRAINT [FK_CurrencyRate_Currency_ToCurrencyCode] FOREIGN KEY([ToCurrencyCode])\r\nREFERENCES [Sales].[Currency] ([CurrencyCode])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_CurrencyRate_Currency_ToCurrencyCode]') AND parent_object_id = OBJECT_ID(N'[Sales].[CurrencyRate]'))\r\nALTER TABLE [Sales].[CurrencyRate] CHECK CONSTRAINT [FK_CurrencyRate_Currency_ToCurrencyCode]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CurrencyRate', N'CONSTRAINT',N'DF_CurrencyRate_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CurrencyRate', @level2type=N'CONSTRAINT',@level2name=N'DF_CurrencyRate_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CurrencyRate', N'CONSTRAINT',N'PK_CurrencyRate_CurrencyRateID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CurrencyRate', @level2type=N'CONSTRAINT',@level2name=N'PK_CurrencyRate_CurrencyRateID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CurrencyRate', N'CONSTRAINT',N'FK_CurrencyRate_Currency_FromCurrencyCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Currency.FromCurrencyCode.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CurrencyRate', @level2type=N'CONSTRAINT',@level2name=N'FK_CurrencyRate_Currency_FromCurrencyCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'CurrencyRate', N'CONSTRAINT',N'FK_CurrencyRate_Currency_ToCurrencyCode'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Currency.ToCurrencyCode.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'CurrencyRate', @level2type=N'CONSTRAINT',@level2name=N'FK_CurrencyRate_Currency_ToCurrencyCode'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_Customer_Person_PersonID]') AND parent_object_id = OBJECT_ID(N'[Sales].[Customer]'))\r\nALTER TABLE [Sales].[Customer]  WITH CHECK ADD  CONSTRAINT [FK_Customer_Person_PersonID] FOREIGN KEY([PersonID])\r\nREFERENCES [Person].[Person] ([BusinessEntityID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_Customer_Person_PersonID]') AND parent_object_id = OBJECT_ID(N'[Sales].[Customer]'))\r\nALTER TABLE [Sales].[Customer] CHECK CONSTRAINT [FK_Customer_Person_PersonID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_Customer_SalesTerritory_TerritoryID]') AND parent_object_id = OBJECT_ID(N'[Sales].[Customer]'))\r\nALTER TABLE [Sales].[Customer]  WITH CHECK ADD  CONSTRAINT [FK_Customer_SalesTerritory_TerritoryID] FOREIGN KEY([TerritoryID])\r\nREFERENCES [Sales].[SalesTerritory] ([TerritoryID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_Customer_SalesTerritory_TerritoryID]') AND parent_object_id = OBJECT_ID(N'[Sales].[Customer]'))\r\nALTER TABLE [Sales].[Customer] CHECK CONSTRAINT [FK_Customer_SalesTerritory_TerritoryID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_Customer_Store_StoreID]') AND parent_object_id = OBJECT_ID(N'[Sales].[Customer]'))\r\nALTER TABLE [Sales].[Customer]  WITH CHECK ADD  CONSTRAINT [FK_Customer_Store_StoreID] FOREIGN KEY([StoreID])\r\nREFERENCES [Sales].[Store] ([BusinessEntityID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_Customer_Store_StoreID]') AND parent_object_id = OBJECT_ID(N'[Sales].[Customer]'))\r\nALTER TABLE [Sales].[Customer] CHECK CONSTRAINT [FK_Customer_Store_StoreID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Customer', N'CONSTRAINT',N'DF_Customer_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'CONSTRAINT',@level2name=N'DF_Customer_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Customer', N'CONSTRAINT',N'DF_Customer_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'CONSTRAINT',@level2name=N'DF_Customer_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Customer', N'CONSTRAINT',N'PK_Customer_CustomerID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'CONSTRAINT',@level2name=N'PK_Customer_CustomerID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Customer', N'CONSTRAINT',N'FK_Customer_Person_PersonID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Person.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'CONSTRAINT',@level2name=N'FK_Customer_Person_PersonID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Customer', N'CONSTRAINT',N'FK_Customer_SalesTerritory_TerritoryID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing SalesTerritory.TerritoryID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'CONSTRAINT',@level2name=N'FK_Customer_SalesTerritory_TerritoryID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'Customer', N'CONSTRAINT',N'FK_Customer_Store_StoreID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Store.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'Customer', @level2type=N'CONSTRAINT',@level2name=N'FK_Customer_Store_StoreID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Department', N'CONSTRAINT',N'DF_Department_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Department', @level2type=N'CONSTRAINT',@level2name=N'DF_Department_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'Department', N'CONSTRAINT',N'PK_Department_DepartmentID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'Department', @level2type=N'CONSTRAINT',@level2name=N'PK_Department_DepartmentID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesOrderHeader_Address_BillToAddressID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]'))\r\nALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_Address_BillToAddressID] FOREIGN KEY([BillToAddressID])\r\nREFERENCES [Person].[Address] ([AddressID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesOrderHeader_Address_BillToAddressID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]'))\r\nALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_Address_BillToAddressID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesOrderHeader_Address_ShipToAddressID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]'))\r\nALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_Address_ShipToAddressID] FOREIGN KEY([ShipToAddressID])\r\nREFERENCES [Person].[Address] ([AddressID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesOrderHeader_Address_ShipToAddressID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]'))\r\nALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_Address_ShipToAddressID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesOrderHeader_CreditCard_CreditCardID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]'))\r\nALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_CreditCard_CreditCardID] FOREIGN KEY([CreditCardID])\r\nREFERENCES [Sales].[CreditCard] ([CreditCardID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesOrderHeader_CreditCard_CreditCardID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]'))\r\nALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_CreditCard_CreditCardID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesOrderHeader_CurrencyRate_CurrencyRateID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]'))\r\nALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_CurrencyRate_CurrencyRateID] FOREIGN KEY([CurrencyRateID])\r\nREFERENCES [Sales].[CurrencyRate] ([CurrencyRateID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesOrderHeader_CurrencyRate_CurrencyRateID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]'))\r\nALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_CurrencyRate_CurrencyRateID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesOrderHeader_Customer_CustomerID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]'))\r\nALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_Customer_CustomerID] FOREIGN KEY([CustomerID])\r\nREFERENCES [Sales].[Customer] ([CustomerID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesOrderHeader_Customer_CustomerID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]'))\r\nALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_Customer_CustomerID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesOrderHeader_SalesPerson_SalesPersonID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]'))\r\nALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_SalesPerson_SalesPersonID] FOREIGN KEY([SalesPersonID])\r\nREFERENCES [Sales].[SalesPerson] ([BusinessEntityID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesOrderHeader_SalesPerson_SalesPersonID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]'))\r\nALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_SalesPerson_SalesPersonID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesOrderHeader_SalesTerritory_TerritoryID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]'))\r\nALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_SalesTerritory_TerritoryID] FOREIGN KEY([TerritoryID])\r\nREFERENCES [Sales].[SalesTerritory] ([TerritoryID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesOrderHeader_SalesTerritory_TerritoryID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]'))\r\nALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_SalesTerritory_TerritoryID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesOrderHeader_ShipMethod_ShipMethodID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]'))\r\nALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_ShipMethod_ShipMethodID] FOREIGN KEY([ShipMethodID])\r\nREFERENCES [Purchasing].[ShipMethod] ([ShipMethodID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesOrderHeader_ShipMethod_ShipMethodID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]'))\r\nALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_ShipMethod_ShipMethodID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesOrderHeader_DueDate]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]'))\r\nALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderHeader_DueDate] CHECK  (([DueDate]>=[OrderDate]))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesOrderHeader_DueDate]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]'))\r\nALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [CK_SalesOrderHeader_DueDate]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesOrderHeader_Freight]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]'))\r\nALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderHeader_Freight] CHECK  (([Freight]>=(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesOrderHeader_Freight]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]'))\r\nALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [CK_SalesOrderHeader_Freight]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesOrderHeader_ShipDate]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]'))\r\nALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderHeader_ShipDate] CHECK  (([ShipDate]>=[OrderDate] OR [ShipDate] IS NULL))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesOrderHeader_ShipDate]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]'))\r\nALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [CK_SalesOrderHeader_ShipDate]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesOrderHeader_Status]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]'))\r\nALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderHeader_Status] CHECK  (([Status]>=(0) AND [Status]<=(8)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesOrderHeader_Status]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]'))\r\nALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [CK_SalesOrderHeader_Status]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesOrderHeader_SubTotal]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]'))\r\nALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderHeader_SubTotal] CHECK  (([SubTotal]>=(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesOrderHeader_SubTotal]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]'))\r\nALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [CK_SalesOrderHeader_SubTotal]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesOrderHeader_TaxAmt]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]'))\r\nALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderHeader_TaxAmt] CHECK  (([TaxAmt]>=(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesOrderHeader_TaxAmt]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeader]'))\r\nALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [CK_SalesOrderHeader_TaxAmt]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'CONSTRAINT',N'DF_SalesOrderHeader_RevisionNumber'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesOrderHeader_RevisionNumber'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'CONSTRAINT',N'DF_SalesOrderHeader_OrderDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesOrderHeader_OrderDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'CONSTRAINT',N'DF_SalesOrderHeader_Status'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 1' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesOrderHeader_Status'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'CONSTRAINT',N'DF_SalesOrderHeader_OnlineOrderFlag'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 1 (TRUE)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesOrderHeader_OnlineOrderFlag'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'CONSTRAINT',N'DF_SalesOrderHeader_SubTotal'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesOrderHeader_SubTotal'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'CONSTRAINT',N'DF_SalesOrderHeader_TaxAmt'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesOrderHeader_TaxAmt'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'CONSTRAINT',N'DF_SalesOrderHeader_Freight'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesOrderHeader_Freight'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'CONSTRAINT',N'DF_SalesOrderHeader_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesOrderHeader_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'CONSTRAINT',N'DF_SalesOrderHeader_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesOrderHeader_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'CONSTRAINT',N'PK_SalesOrderHeader_SalesOrderID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'PK_SalesOrderHeader_SalesOrderID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'CONSTRAINT',N'FK_SalesOrderHeader_Address_BillToAddressID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Address.AddressID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesOrderHeader_Address_BillToAddressID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'CONSTRAINT',N'FK_SalesOrderHeader_Address_ShipToAddressID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Address.AddressID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesOrderHeader_Address_ShipToAddressID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'CONSTRAINT',N'FK_SalesOrderHeader_CreditCard_CreditCardID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing CreditCard.CreditCardID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesOrderHeader_CreditCard_CreditCardID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'CONSTRAINT',N'FK_SalesOrderHeader_CurrencyRate_CurrencyRateID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing CurrencyRate.CurrencyRateID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesOrderHeader_CurrencyRate_CurrencyRateID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'CONSTRAINT',N'FK_SalesOrderHeader_Customer_CustomerID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Customer.CustomerID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesOrderHeader_Customer_CustomerID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'CONSTRAINT',N'FK_SalesOrderHeader_SalesPerson_SalesPersonID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing SalesPerson.SalesPersonID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesOrderHeader_SalesPerson_SalesPersonID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'CONSTRAINT',N'FK_SalesOrderHeader_SalesTerritory_TerritoryID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing SalesTerritory.TerritoryID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesOrderHeader_SalesTerritory_TerritoryID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'CONSTRAINT',N'FK_SalesOrderHeader_ShipMethod_ShipMethodID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing ShipMethod.ShipMethodID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesOrderHeader_ShipMethod_ShipMethodID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'CONSTRAINT',N'CK_SalesOrderHeader_DueDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [DueDate] >= [OrderDate]' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesOrderHeader_DueDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'CONSTRAINT',N'CK_SalesOrderHeader_Freight'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Freight] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesOrderHeader_Freight'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'CONSTRAINT',N'CK_SalesOrderHeader_ShipDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [ShipDate] >= [OrderDate] OR [ShipDate] IS NULL' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesOrderHeader_ShipDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'CONSTRAINT',N'CK_SalesOrderHeader_Status'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [Status] BETWEEN (0) AND (8)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesOrderHeader_Status'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'CONSTRAINT',N'CK_SalesOrderHeader_SubTotal'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [SubTotal] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesOrderHeader_SubTotal'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeader', N'CONSTRAINT',N'CK_SalesOrderHeader_TaxAmt'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [TaxAmt] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeader', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesOrderHeader_TaxAmt'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderDetail]'))\r\nALTER TABLE [Sales].[SalesOrderDetail]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID] FOREIGN KEY([SalesOrderID])\r\nREFERENCES [Sales].[SalesOrderHeader] ([SalesOrderID])\r\nON DELETE CASCADE",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderDetail]'))\r\nALTER TABLE [Sales].[SalesOrderDetail] CHECK CONSTRAINT [FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderDetail]'))\r\nALTER TABLE [Sales].[SalesOrderDetail]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID] FOREIGN KEY([SpecialOfferID], [ProductID])\r\nREFERENCES [Sales].[SpecialOfferProduct] ([SpecialOfferID], [ProductID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderDetail]'))\r\nALTER TABLE [Sales].[SalesOrderDetail] CHECK CONSTRAINT [FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesOrderDetail_OrderQty]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderDetail]'))\r\nALTER TABLE [Sales].[SalesOrderDetail]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderDetail_OrderQty] CHECK  (([OrderQty]>(0)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesOrderDetail_OrderQty]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderDetail]'))\r\nALTER TABLE [Sales].[SalesOrderDetail] CHECK CONSTRAINT [CK_SalesOrderDetail_OrderQty]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesOrderDetail_UnitPrice]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderDetail]'))\r\nALTER TABLE [Sales].[SalesOrderDetail]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderDetail_UnitPrice] CHECK  (([UnitPrice]>=(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesOrderDetail_UnitPrice]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderDetail]'))\r\nALTER TABLE [Sales].[SalesOrderDetail] CHECK CONSTRAINT [CK_SalesOrderDetail_UnitPrice]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesOrderDetail_UnitPriceDiscount]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderDetail]'))\r\nALTER TABLE [Sales].[SalesOrderDetail]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderDetail_UnitPriceDiscount] CHECK  (([UnitPriceDiscount]>=(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesOrderDetail_UnitPriceDiscount]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderDetail]'))\r\nALTER TABLE [Sales].[SalesOrderDetail] CHECK CONSTRAINT [CK_SalesOrderDetail_UnitPriceDiscount]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderDetail', N'CONSTRAINT',N'DF_SalesOrderDetail_UnitPriceDiscount'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesOrderDetail_UnitPriceDiscount'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderDetail', N'CONSTRAINT',N'DF_SalesOrderDetail_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesOrderDetail_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderDetail', N'CONSTRAINT',N'DF_SalesOrderDetail_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesOrderDetail_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderDetail', N'CONSTRAINT',N'PK_SalesOrderDetail_SalesOrderID_SalesOrderDetailID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'PK_SalesOrderDetail_SalesOrderID_SalesOrderDetailID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderDetail', N'CONSTRAINT',N'FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing SalesOrderHeader.PurchaseOrderID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderDetail', N'CONSTRAINT',N'FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing SpecialOfferProduct.SpecialOfferIDProductID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderDetail', N'CONSTRAINT',N'CK_SalesOrderDetail_OrderQty'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [OrderQty] > (0)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesOrderDetail_OrderQty'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderDetail', N'CONSTRAINT',N'CK_SalesOrderDetail_UnitPrice'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [UnitPrice] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesOrderDetail_UnitPrice'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderDetail', N'CONSTRAINT',N'CK_SalesOrderDetail_UnitPriceDiscount'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [UnitPriceDiscount] >= (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderDetail', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesOrderDetail_UnitPriceDiscount'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Person].[FK_EmailAddress_Person_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[Person].[EmailAddress]'))\r\nALTER TABLE [Person].[EmailAddress]  WITH CHECK ADD  CONSTRAINT [FK_EmailAddress_Person_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\r\nREFERENCES [Person].[Person] ([BusinessEntityID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Person].[FK_EmailAddress_Person_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[Person].[EmailAddress]'))\r\nALTER TABLE [Person].[EmailAddress] CHECK CONSTRAINT [FK_EmailAddress_Person_BusinessEntityID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'EmailAddress', N'CONSTRAINT',N'DF_EmailAddress_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'EmailAddress', @level2type=N'CONSTRAINT',@level2name=N'DF_EmailAddress_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'EmailAddress', N'CONSTRAINT',N'DF_EmailAddress_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'EmailAddress', @level2type=N'CONSTRAINT',@level2name=N'DF_EmailAddress_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'EmailAddress', N'CONSTRAINT',N'PK_EmailAddress_BusinessEntityID_EmailAddressID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'EmailAddress', @level2type=N'CONSTRAINT',@level2name=N'PK_EmailAddress_BusinessEntityID_EmailAddressID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'EmailAddress', N'CONSTRAINT',N'FK_EmailAddress_Person_BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Person.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'EmailAddress', @level2type=N'CONSTRAINT',@level2name=N'FK_EmailAddress_Person_BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[HumanResources].[FK_EmployeeDepartmentHistory_Department_DepartmentID]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[EmployeeDepartmentHistory]'))\r\nALTER TABLE [HumanResources].[EmployeeDepartmentHistory]  WITH CHECK ADD  CONSTRAINT [FK_EmployeeDepartmentHistory_Department_DepartmentID] FOREIGN KEY([DepartmentID])\r\nREFERENCES [HumanResources].[Department] ([DepartmentID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[HumanResources].[FK_EmployeeDepartmentHistory_Department_DepartmentID]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[EmployeeDepartmentHistory]'))\r\nALTER TABLE [HumanResources].[EmployeeDepartmentHistory] CHECK CONSTRAINT [FK_EmployeeDepartmentHistory_Department_DepartmentID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[HumanResources].[FK_EmployeeDepartmentHistory_Employee_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[EmployeeDepartmentHistory]'))\r\nALTER TABLE [HumanResources].[EmployeeDepartmentHistory]  WITH CHECK ADD  CONSTRAINT [FK_EmployeeDepartmentHistory_Employee_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\r\nREFERENCES [HumanResources].[Employee] ([BusinessEntityID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[HumanResources].[FK_EmployeeDepartmentHistory_Employee_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[EmployeeDepartmentHistory]'))\r\nALTER TABLE [HumanResources].[EmployeeDepartmentHistory] CHECK CONSTRAINT [FK_EmployeeDepartmentHistory_Employee_BusinessEntityID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[HumanResources].[FK_EmployeeDepartmentHistory_Shift_ShiftID]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[EmployeeDepartmentHistory]'))\r\nALTER TABLE [HumanResources].[EmployeeDepartmentHistory]  WITH CHECK ADD  CONSTRAINT [FK_EmployeeDepartmentHistory_Shift_ShiftID] FOREIGN KEY([ShiftID])\r\nREFERENCES [HumanResources].[Shift] ([ShiftID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[HumanResources].[FK_EmployeeDepartmentHistory_Shift_ShiftID]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[EmployeeDepartmentHistory]'))\r\nALTER TABLE [HumanResources].[EmployeeDepartmentHistory] CHECK CONSTRAINT [FK_EmployeeDepartmentHistory_Shift_ShiftID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[HumanResources].[CK_EmployeeDepartmentHistory_EndDate]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[EmployeeDepartmentHistory]'))\r\nALTER TABLE [HumanResources].[EmployeeDepartmentHistory]  WITH CHECK ADD  CONSTRAINT [CK_EmployeeDepartmentHistory_EndDate] CHECK  (([EndDate]>=[StartDate] OR [EndDate] IS NULL))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[HumanResources].[CK_EmployeeDepartmentHistory_EndDate]') AND parent_object_id = OBJECT_ID(N'[HumanResources].[EmployeeDepartmentHistory]'))\r\nALTER TABLE [HumanResources].[EmployeeDepartmentHistory] CHECK CONSTRAINT [CK_EmployeeDepartmentHistory_EndDate]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'EmployeeDepartmentHistory', N'CONSTRAINT',N'DF_EmployeeDepartmentHistory_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory', @level2type=N'CONSTRAINT',@level2name=N'DF_EmployeeDepartmentHistory_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'EmployeeDepartmentHistory', N'CONSTRAINT',N'PK_EmployeeDepartmentHistory_BusinessEntityID_StartDate_DepartmentID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory', @level2type=N'CONSTRAINT',@level2name=N'PK_EmployeeDepartmentHistory_BusinessEntityID_StartDate_DepartmentID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'EmployeeDepartmentHistory', N'CONSTRAINT',N'FK_EmployeeDepartmentHistory_Department_DepartmentID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Department.DepartmentID.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory', @level2type=N'CONSTRAINT',@level2name=N'FK_EmployeeDepartmentHistory_Department_DepartmentID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'EmployeeDepartmentHistory', N'CONSTRAINT',N'FK_EmployeeDepartmentHistory_Employee_BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Employee.EmployeeID.' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory', @level2type=N'CONSTRAINT',@level2name=N'FK_EmployeeDepartmentHistory_Employee_BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'EmployeeDepartmentHistory', N'CONSTRAINT',N'FK_EmployeeDepartmentHistory_Shift_ShiftID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Shift.ShiftID' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory', @level2type=N'CONSTRAINT',@level2name=N'FK_EmployeeDepartmentHistory_Shift_ShiftID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'HumanResources', N'TABLE',N'EmployeeDepartmentHistory', N'CONSTRAINT',N'CK_EmployeeDepartmentHistory_EndDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [EndDate] >= [StartDate] OR [EndDate] IS NUL' , @level0type=N'SCHEMA',@level0name=N'HumanResources', @level1type=N'TABLE',@level1name=N'EmployeeDepartmentHistory', @level2type=N'CONSTRAINT',@level2name=N'CK_EmployeeDepartmentHistory_EndDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesReason', N'CONSTRAINT',N'DF_SalesReason_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesReason', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesReason_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesReason', N'CONSTRAINT',N'PK_SalesReason_SalesReasonID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesReason', @level2type=N'CONSTRAINT',@level2name=N'PK_SalesReason_SalesReasonID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeaderSalesReason]'))\r\nALTER TABLE [Sales].[SalesOrderHeaderSalesReason]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID] FOREIGN KEY([SalesOrderID])\r\nREFERENCES [Sales].[SalesOrderHeader] ([SalesOrderID])\r\nON DELETE CASCADE",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeaderSalesReason]'))\r\nALTER TABLE [Sales].[SalesOrderHeaderSalesReason] CHECK CONSTRAINT [FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeaderSalesReason]'))\r\nALTER TABLE [Sales].[SalesOrderHeaderSalesReason]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID] FOREIGN KEY([SalesReasonID])\r\nREFERENCES [Sales].[SalesReason] ([SalesReasonID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesOrderHeaderSalesReason]'))\r\nALTER TABLE [Sales].[SalesOrderHeaderSalesReason] CHECK CONSTRAINT [FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeaderSalesReason', N'CONSTRAINT',N'DF_SalesOrderHeaderSalesReason_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeaderSalesReason', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesOrderHeaderSalesReason_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeaderSalesReason', N'CONSTRAINT',N'PK_SalesOrderHeaderSalesReason_SalesOrderID_SalesReasonID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeaderSalesReason', @level2type=N'CONSTRAINT',@level2name=N'PK_SalesOrderHeaderSalesReason_SalesOrderID_SalesReasonID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeaderSalesReason', N'CONSTRAINT',N'FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing SalesOrderHeader.SalesOrderID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeaderSalesReason', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesOrderHeaderSalesReason', N'CONSTRAINT',N'FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing SalesReason.SalesReasonID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesOrderHeaderSalesReason', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Person].[FK_Password_Person_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[Person].[Password]'))\r\nALTER TABLE [Person].[Password]  WITH CHECK ADD  CONSTRAINT [FK_Password_Person_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\r\nREFERENCES [Person].[Person] ([BusinessEntityID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Person].[FK_Password_Person_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[Person].[Password]'))\r\nALTER TABLE [Person].[Password] CHECK CONSTRAINT [FK_Password_Person_BusinessEntityID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Password', N'CONSTRAINT',N'DF_Password_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Password', @level2type=N'CONSTRAINT',@level2name=N'DF_Password_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Password', N'CONSTRAINT',N'DF_Password_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Password', @level2type=N'CONSTRAINT',@level2name=N'DF_Password_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Password', N'CONSTRAINT',N'PK_Password_BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Password', @level2type=N'CONSTRAINT',@level2name=N'PK_Password_BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'Password', N'CONSTRAINT',N'FK_Password_Person_BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Person.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'Password', @level2type=N'CONSTRAINT',@level2name=N'FK_Password_Person_BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesPersonQuotaHistory_SalesPerson_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesPersonQuotaHistory]'))\r\nALTER TABLE [Sales].[SalesPersonQuotaHistory]  WITH CHECK ADD  CONSTRAINT [FK_SalesPersonQuotaHistory_SalesPerson_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\r\nREFERENCES [Sales].[SalesPerson] ([BusinessEntityID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesPersonQuotaHistory_SalesPerson_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesPersonQuotaHistory]'))\r\nALTER TABLE [Sales].[SalesPersonQuotaHistory] CHECK CONSTRAINT [FK_SalesPersonQuotaHistory_SalesPerson_BusinessEntityID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesPersonQuotaHistory_SalesQuota]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesPersonQuotaHistory]'))\r\nALTER TABLE [Sales].[SalesPersonQuotaHistory]  WITH CHECK ADD  CONSTRAINT [CK_SalesPersonQuotaHistory_SalesQuota] CHECK  (([SalesQuota]>(0.00)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesPersonQuotaHistory_SalesQuota]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesPersonQuotaHistory]'))\r\nALTER TABLE [Sales].[SalesPersonQuotaHistory] CHECK CONSTRAINT [CK_SalesPersonQuotaHistory_SalesQuota]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPersonQuotaHistory', N'CONSTRAINT',N'DF_SalesPersonQuotaHistory_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPersonQuotaHistory', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesPersonQuotaHistory_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPersonQuotaHistory', N'CONSTRAINT',N'DF_SalesPersonQuotaHistory_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPersonQuotaHistory', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesPersonQuotaHistory_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPersonQuotaHistory', N'CONSTRAINT',N'PK_SalesPersonQuotaHistory_BusinessEntityID_QuotaDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPersonQuotaHistory', @level2type=N'CONSTRAINT',@level2name=N'PK_SalesPersonQuotaHistory_BusinessEntityID_QuotaDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPersonQuotaHistory', N'CONSTRAINT',N'FK_SalesPersonQuotaHistory_SalesPerson_BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing SalesPerson.SalesPersonID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPersonQuotaHistory', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesPersonQuotaHistory_SalesPerson_BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesPersonQuotaHistory', N'CONSTRAINT',N'CK_SalesPersonQuotaHistory_SalesQuota'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [SalesQuota] > (0.00)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesPersonQuotaHistory', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesPersonQuotaHistory_SalesQuota'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesTaxRate_StateProvince_StateProvinceID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesTaxRate]'))\r\nALTER TABLE [Sales].[SalesTaxRate]  WITH CHECK ADD  CONSTRAINT [FK_SalesTaxRate_StateProvince_StateProvinceID] FOREIGN KEY([StateProvinceID])\r\nREFERENCES [Person].[StateProvince] ([StateProvinceID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesTaxRate_StateProvince_StateProvinceID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesTaxRate]'))\r\nALTER TABLE [Sales].[SalesTaxRate] CHECK CONSTRAINT [FK_SalesTaxRate_StateProvince_StateProvinceID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesTaxRate_TaxType]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesTaxRate]'))\r\nALTER TABLE [Sales].[SalesTaxRate]  WITH CHECK ADD  CONSTRAINT [CK_SalesTaxRate_TaxType] CHECK  (([TaxType]>=(1) AND [TaxType]<=(3)))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesTaxRate_TaxType]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesTaxRate]'))\r\nALTER TABLE [Sales].[SalesTaxRate] CHECK CONSTRAINT [CK_SalesTaxRate_TaxType]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTaxRate', N'CONSTRAINT',N'DF_SalesTaxRate_TaxRate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of 0.0' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesTaxRate_TaxRate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTaxRate', N'CONSTRAINT',N'DF_SalesTaxRate_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesTaxRate_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTaxRate', N'CONSTRAINT',N'DF_SalesTaxRate_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesTaxRate_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTaxRate', N'CONSTRAINT',N'PK_SalesTaxRate_SalesTaxRateID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'CONSTRAINT',@level2name=N'PK_SalesTaxRate_SalesTaxRateID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTaxRate', N'CONSTRAINT',N'FK_SalesTaxRate_StateProvince_StateProvinceID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing StateProvince.StateProvinceID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesTaxRate_StateProvince_StateProvinceID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTaxRate', N'CONSTRAINT',N'CK_SalesTaxRate_TaxType'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [TaxType] BETWEEN (1) AND (3)' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTaxRate', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesTaxRate_TaxType'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_PersonCreditCard_CreditCard_CreditCardID]') AND parent_object_id = OBJECT_ID(N'[Sales].[PersonCreditCard]'))\r\nALTER TABLE [Sales].[PersonCreditCard]  WITH CHECK ADD  CONSTRAINT [FK_PersonCreditCard_CreditCard_CreditCardID] FOREIGN KEY([CreditCardID])\r\nREFERENCES [Sales].[CreditCard] ([CreditCardID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_PersonCreditCard_CreditCard_CreditCardID]') AND parent_object_id = OBJECT_ID(N'[Sales].[PersonCreditCard]'))\r\nALTER TABLE [Sales].[PersonCreditCard] CHECK CONSTRAINT [FK_PersonCreditCard_CreditCard_CreditCardID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_PersonCreditCard_Person_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[Sales].[PersonCreditCard]'))\r\nALTER TABLE [Sales].[PersonCreditCard]  WITH CHECK ADD  CONSTRAINT [FK_PersonCreditCard_Person_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\r\nREFERENCES [Person].[Person] ([BusinessEntityID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_PersonCreditCard_Person_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[Sales].[PersonCreditCard]'))\r\nALTER TABLE [Sales].[PersonCreditCard] CHECK CONSTRAINT [FK_PersonCreditCard_Person_BusinessEntityID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'PersonCreditCard', N'CONSTRAINT',N'DF_PersonCreditCard_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'PersonCreditCard', @level2type=N'CONSTRAINT',@level2name=N'DF_PersonCreditCard_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'PersonCreditCard', N'CONSTRAINT',N'PK_PersonCreditCard_BusinessEntityID_CreditCardID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'PersonCreditCard', @level2type=N'CONSTRAINT',@level2name=N'PK_PersonCreditCard_BusinessEntityID_CreditCardID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'PersonCreditCard', N'CONSTRAINT',N'FK_PersonCreditCard_CreditCard_CreditCardID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing CreditCard.CreditCardID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'PersonCreditCard', @level2type=N'CONSTRAINT',@level2name=N'FK_PersonCreditCard_CreditCard_CreditCardID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'PersonCreditCard', N'CONSTRAINT',N'FK_PersonCreditCard_Person_BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Person.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'PersonCreditCard', @level2type=N'CONSTRAINT',@level2name=N'FK_PersonCreditCard_Person_BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'PhoneNumberType', N'CONSTRAINT',N'DF_PhoneNumberType_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PhoneNumberType', @level2type=N'CONSTRAINT',@level2name=N'DF_PhoneNumberType_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'PhoneNumberType', N'CONSTRAINT',N'PK_PhoneNumberType_PhoneNumberTypeID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PhoneNumberType', @level2type=N'CONSTRAINT',@level2name=N'PK_PhoneNumberType_PhoneNumberTypeID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Person].[FK_PersonPhone_Person_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[Person].[PersonPhone]'))\r\nALTER TABLE [Person].[PersonPhone]  WITH CHECK ADD  CONSTRAINT [FK_PersonPhone_Person_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\r\nREFERENCES [Person].[Person] ([BusinessEntityID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Person].[FK_PersonPhone_Person_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[Person].[PersonPhone]'))\r\nALTER TABLE [Person].[PersonPhone] CHECK CONSTRAINT [FK_PersonPhone_Person_BusinessEntityID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Person].[FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID]') AND parent_object_id = OBJECT_ID(N'[Person].[PersonPhone]'))\r\nALTER TABLE [Person].[PersonPhone]  WITH CHECK ADD  CONSTRAINT [FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID] FOREIGN KEY([PhoneNumberTypeID])\r\nREFERENCES [Person].[PhoneNumberType] ([PhoneNumberTypeID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Person].[FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID]') AND parent_object_id = OBJECT_ID(N'[Person].[PersonPhone]'))\r\nALTER TABLE [Person].[PersonPhone] CHECK CONSTRAINT [FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'PersonPhone', N'CONSTRAINT',N'DF_PersonPhone_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PersonPhone', @level2type=N'CONSTRAINT',@level2name=N'DF_PersonPhone_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'PersonPhone', N'CONSTRAINT',N'PK_PersonPhone_BusinessEntityID_PhoneNumber_PhoneNumberTypeID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PersonPhone', @level2type=N'CONSTRAINT',@level2name=N'PK_PersonPhone_BusinessEntityID_PhoneNumber_PhoneNumberTypeID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'PersonPhone', N'CONSTRAINT',N'FK_PersonPhone_Person_BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing Person.BusinessEntityID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PersonPhone', @level2type=N'CONSTRAINT',@level2name=N'FK_PersonPhone_Person_BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'TABLE',N'PersonPhone', N'CONSTRAINT',N'FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing PhoneNumberType.PhoneNumberTypeID.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'TABLE',@level1name=N'PersonPhone', @level2type=N'CONSTRAINT',@level2name=N'FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesTerritoryHistory_SalesPerson_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesTerritoryHistory]'))\r\nALTER TABLE [Sales].[SalesTerritoryHistory]  WITH CHECK ADD  CONSTRAINT [FK_SalesTerritoryHistory_SalesPerson_BusinessEntityID] FOREIGN KEY([BusinessEntityID])\r\nREFERENCES [Sales].[SalesPerson] ([BusinessEntityID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesTerritoryHistory_SalesPerson_BusinessEntityID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesTerritoryHistory]'))\r\nALTER TABLE [Sales].[SalesTerritoryHistory] CHECK CONSTRAINT [FK_SalesTerritoryHistory_SalesPerson_BusinessEntityID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesTerritoryHistory_SalesTerritory_TerritoryID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesTerritoryHistory]'))\r\nALTER TABLE [Sales].[SalesTerritoryHistory]  WITH CHECK ADD  CONSTRAINT [FK_SalesTerritoryHistory_SalesTerritory_TerritoryID] FOREIGN KEY([TerritoryID])\r\nREFERENCES [Sales].[SalesTerritory] ([TerritoryID])",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[Sales].[FK_SalesTerritoryHistory_SalesTerritory_TerritoryID]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesTerritoryHistory]'))\r\nALTER TABLE [Sales].[SalesTerritoryHistory] CHECK CONSTRAINT [FK_SalesTerritoryHistory_SalesTerritory_TerritoryID]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesTerritoryHistory_EndDate]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesTerritoryHistory]'))\r\nALTER TABLE [Sales].[SalesTerritoryHistory]  WITH CHECK ADD  CONSTRAINT [CK_SalesTerritoryHistory_EndDate] CHECK  (([EndDate]>=[StartDate] OR [EndDate] IS NULL))",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF  EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[Sales].[CK_SalesTerritoryHistory_EndDate]') AND parent_object_id = OBJECT_ID(N'[Sales].[SalesTerritoryHistory]'))\r\nALTER TABLE [Sales].[SalesTerritoryHistory] CHECK CONSTRAINT [CK_SalesTerritoryHistory_EndDate]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritoryHistory', N'CONSTRAINT',N'DF_SalesTerritoryHistory_rowguid'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of NEWID()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritoryHistory', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesTerritoryHistory_rowguid'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritoryHistory', N'CONSTRAINT',N'DF_SalesTerritoryHistory_ModifiedDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Default constraint value of GETDATE()' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritoryHistory', @level2type=N'CONSTRAINT',@level2name=N'DF_SalesTerritoryHistory_ModifiedDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritoryHistory', N'CONSTRAINT',N'PK_SalesTerritoryHistory_BusinessEntityID_StartDate_TerritoryID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Primary key (clustered) constraint' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritoryHistory', @level2type=N'CONSTRAINT',@level2name=N'PK_SalesTerritoryHistory_BusinessEntityID_StartDate_TerritoryID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritoryHistory', N'CONSTRAINT',N'FK_SalesTerritoryHistory_SalesPerson_BusinessEntityID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing SalesPerson.SalesPersonID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritoryHistory', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesTerritoryHistory_SalesPerson_BusinessEntityID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritoryHistory', N'CONSTRAINT',N'FK_SalesTerritoryHistory_SalesTerritory_TerritoryID'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Foreign key constraint referencing SalesTerritory.TerritoryID.' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritoryHistory', @level2type=N'CONSTRAINT',@level2name=N'FK_SalesTerritoryHistory_SalesTerritory_TerritoryID'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Sales', N'TABLE',N'SalesTerritoryHistory', N'CONSTRAINT',N'CK_SalesTerritoryHistory_EndDate'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Check constraint [EndDate] >= [StartDate] OR [EndDate] IS NULL' , @level0type=N'SCHEMA',@level0name=N'Sales', @level1type=N'TABLE',@level1name=N'SalesTerritoryHistory', @level2type=N'CONSTRAINT',@level2name=N'CK_SalesTerritoryHistory_EndDate'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Restoring object ownership for scripted objects      Script Date: 9/26/2023 12:10:05 PM ******/\r\nALTER AUTHORIZATION\r\n    ON FULLTEXT CATALOG::[AW2008FullTextCatalog]\r\n    TO [dbo]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "ALTER AUTHORIZATION\r\n    ON SCHEMA::[HumanResources]\r\n    TO [dbo]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "ALTER AUTHORIZATION\r\n    ON SCHEMA::[Person]\r\n    TO [dbo]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "ALTER AUTHORIZATION\r\n    ON SCHEMA::[Production]\r\n    TO [dbo]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "ALTER AUTHORIZATION\r\n    ON SCHEMA::[Purchasing]\r\n    TO [dbo]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "ALTER AUTHORIZATION\r\n    ON SCHEMA::[Sales]\r\n    TO [dbo]",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "/****** Indexes For Views    Script Date: 9/26/2023 12:10:06 PM ******/\r\nSET ARITHABORT ON\r\nSET CONCAT_NULL_YIELDS_NULL ON\r\nSET QUOTED_IDENTIFIER ON\r\nSET ANSI_NULLS ON\r\nSET ANSI_PADDING ON\r\nSET ANSI_WARNINGS ON\r\nSET NUMERIC_ROUNDABORT OFF",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Production].[vProductAndDescription]') AND name = N'IX_vProductAndDescription')\r\nCREATE UNIQUE CLUSTERED INDEX [IX_vProductAndDescription] ON [Production].[vProductAndDescription]\r\n(\r\n\t[CultureID] ASC,\r\n\t[ProductID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Production', N'VIEW',N'vProductAndDescription', N'INDEX',N'IX_vProductAndDescription'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Clustered index on the view vProductAndDescription.' , @level0type=N'SCHEMA',@level0name=N'Production', @level1type=N'VIEW',@level1name=N'vProductAndDescription', @level2type=N'INDEX',@level2name=N'IX_vProductAndDescription'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "SET ARITHABORT ON\r\nSET CONCAT_NULL_YIELDS_NULL ON\r\nSET QUOTED_IDENTIFIER ON\r\nSET ANSI_NULLS ON\r\nSET ANSI_PADDING ON\r\nSET ANSI_WARNINGS ON\r\nSET NUMERIC_ROUNDABORT OFF",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[Person].[vStateProvinceCountryRegion]') AND name = N'IX_vStateProvinceCountryRegion')\r\nCREATE UNIQUE CLUSTERED INDEX [IX_vStateProvinceCountryRegion] ON [Person].[vStateProvinceCountryRegion]\r\n(\r\n\t[StateProvinceID] ASC,\r\n\t[CountryRegionCode] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        },
        {
          "CommandText": "IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'Person', N'VIEW',N'vStateProvinceCountryRegion', N'INDEX',N'IX_vStateProvinceCountryRegion'))\r\nEXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Clustered index on the view vStateProvinceCountryRegion.' , @level0type=N'SCHEMA',@level0name=N'Person', @level1type=N'VIEW',@level1name=N'vStateProvinceCountryRegion', @level2type=N'INDEX',@level2name=N'IX_vStateProvinceCountryRegion'",
          "ExecutionSucceeded": true,
          "ResultMessage": "Command executed successfully."
        }
      ],
      "Name": "AdventureWorks2012",
      "ServerVersion": "16.0.1050.5",
      "ServerEdition": "Enterprise Evaluation Edition (64-bit)",
      "CompatibilityLevel": "CompatLevel110",
      "ServerName": "Viplav-Anand"
    }
  ]
}